{"__symbolic":"module","version":4,"metadata":{"NgxFilemanagerClientFirebaseModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":55,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"},{"__symbolic":"reference","name":"ɵk"},{"__symbolic":"reference","name":"ɵl"}],"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":58,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":59,"character":4},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":60,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":61,"character":4},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":68,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":69,"character":4},{"__symbolic":"reference","module":"@angular/material/button-toggle","name":"MatButtonToggleModule","line":70,"character":4},{"__symbolic":"reference","module":"@angular/material/checkbox","name":"MatCheckboxModule","line":71,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":72,"character":4},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":73,"character":4},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":74,"character":4},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":75,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":76,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":77,"character":4},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":78,"character":4},{"__symbolic":"reference","module":"@angular/material/paginator","name":"MatPaginatorModule","line":79,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":80,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-spinner","name":"MatProgressSpinnerModule","line":81,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":82,"character":4},{"__symbolic":"reference","module":"@angular/material/sidenav","name":"MatSidenavModule","line":83,"character":4},{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBarModule","line":84,"character":4},{"__symbolic":"reference","module":"@angular/material/sort","name":"MatSortModule","line":85,"character":4},{"__symbolic":"reference","module":"@angular/material/table","name":"MatTableModule","line":86,"character":4},{"__symbolic":"reference","module":"@angular/material/tabs","name":"MatTabsModule","line":87,"character":4},{"__symbolic":"reference","module":"@angular/material/toolbar","name":"MatToolbarModule","line":88,"character":4},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":89,"character":4},{"__symbolic":"reference","module":"@angular/material/expansion","name":"MatExpansionModule","line":90,"character":4}],"exports":[{"__symbolic":"reference","name":"ɵa"}],"providers":[{"__symbolic":"reference","name":"ServerFilesystemProviderService"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵg"},{"provide":{"__symbolic":"reference","module":"@angular/common","name":"APP_BASE_HREF","line":98,"character":15},"useFactory":{"__symbolic":"reference","name":"ɵbm"},"deps":[{"__symbolic":"reference","module":"@angular/common","name":"PlatformLocation","line":100,"character":13}]},{"provide":{"__symbolic":"reference","name":"ɵd"},"useClass":{"__symbolic":"reference","name":"ɵbn"}},{"__symbolic":"reference","name":"ɵe"}]}]}],"members":{}},"NameUid":{"__symbolic":"interface"},"FileManagerConfig":{"__symbolic":"interface"},"ServerFilesystemProviderService":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":7,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":15,"character":28},{"__symbolic":"reference","name":"ɵd"}]}],"makeAPIRequest":[{"__symbolic":"method"}],"Initialize":[{"__symbolic":"method"}],"List":[{"__symbolic":"method"}],"CreateFolder":[{"__symbolic":"method"}],"Copy":[{"__symbolic":"method"}],"Move":[{"__symbolic":"method"}],"Rename":[{"__symbolic":"method"}],"Edit":[{"__symbolic":"method"}],"Getcontent":[{"__symbolic":"method"}],"SetPermissions":[{"__symbolic":"method"}],"MoveMultiple":[{"__symbolic":"method"}],"CopyMultiple":[{"__symbolic":"method"}],"SetPermissionsMultiple":[{"__symbolic":"method"}],"SetPermissionsObjectMultiple":[{"__symbolic":"method"}],"Remove":[{"__symbolic":"method"}],"GetSingle":[{"__symbolic":"method"}],"GetUploadApiUrl":[{"__symbolic":"method"}],"CloneProvider":[{"__symbolic":"method"}],"CreateDownloadLink":[{"__symbolic":"method"}],"Upload":[{"__symbolic":"method"}]}},"FileSystemStub":{"__symbolic":"class","members":{"setFakeDelay":[{"__symbolic":"method"}],"fakeDelay":[{"__symbolic":"method"}],"selectMatches":[{"__symbolic":"method"}],"isInDirectory":[{"__symbolic":"method"}],"List":[{"__symbolic":"method"}],"Rename":[{"__symbolic":"method"}],"Move":[{"__symbolic":"method"}],"Copy":[{"__symbolic":"method"}],"Edit":[{"__symbolic":"method"}],"Getcontent":[{"__symbolic":"method"}],"GetSingle":[{"__symbolic":"method"}],"CreateFolder":[{"__symbolic":"method"}],"recursivelyTryToCreateFolder":[{"__symbolic":"method"}],"SetPermissions":[{"__symbolic":"method"}],"CopyMultiple":[{"__symbolic":"method"}],"MoveMultiple":[{"__symbolic":"method"}],"SetPermissionsMultiple":[{"__symbolic":"method"}],"Upload":[{"__symbolic":"method"}],"recursivelyTryToAddFile":[{"__symbolic":"method"}],"recursivelySetPermissions":[{"__symbolic":"method"}],"setSinglePermission":[{"__symbolic":"method"}],"SetPermissionsObjectMultiple":[{"__symbolic":"method"}],"recursivelySetPermissionsObjects":[{"__symbolic":"method"}],"Remove":[{"__symbolic":"method"}],"CloneProvider":[{"__symbolic":"method"}],"ensureTrailingSlash":[{"__symbolic":"method"}],"ensurePrefixSlash":[{"__symbolic":"method"}],"GetUploadApiUrl":[{"__symbolic":"method"}],"CreateDownloadLink":[{"__symbolic":"method"}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"selector":"ngx-filemanager","providers":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵf"}],"template":"<div class=\"ngx-file-page-container\">\n  <mat-drawer-container>\n    <mat-drawer-content [class.loaded]=\"initLoaded\">\n      <div\n        class=\"bulk-actions-container\"\n        [class.hidden]=\"($BulkSelected | async).length < 1\"\n        *ngIf=\"initLoaded\"\n      >\n        <bulk-actions\n          [bulkActions]=\"this.bulkActions\"\n          [bulkSelected$]=\"this.$BulkSelected\"\n          (clearSelected)=\"this.ClearBulkSelected()\"\n        >\n        </bulk-actions>\n      </div>\n      <div class=\"folder-actions-container\">\n        <main-actions [mainActions]=\"this.mainActions\"> </main-actions>\n      </div>\n      <div class=\"flex-h space-between breadcrumb-container\">\n        <bread-crumbs\n          [currentPath]=\"$CurrentPath | async\"\n          (clickedCrumb)=\"this.onClickCrumb($event)\"\n          [config]=\"config\"\n        >\n        </bread-crumbs>\n        <div class=\"flex-h\">\n          <mat-progress-spinner\n            *ngIf=\"$hasSending | async\"\n            mode=\"indeterminate\"\n            [diameter]=\"40\"\n            color=\"primary\"\n          ></mat-progress-spinner>\n          <mat-progress-spinner\n            *ngIf=\"$hasFailed | async\"\n            mode=\"determinate\"\n            [diameter]=\"40\"\n            color=\"warn\"\n            [value]=\"100\"\n          ></mat-progress-spinner>\n          <div\n            class=\"mat-elevation-z8 expander-container has-pointer mat-table\"\n            (click)=\"isFileDetailsOpen = !isFileDetailsOpen\"\n          >\n            <mat-icon\n              matTooltip=\"View File Details\"\n              class=\"expander-icon\"\n              [class.drawer-out]=\"isFileDetailsOpen\"\n              [class.drawer-in]=\"!isFileDetailsOpen\"\n              >expand_more</mat-icon\n            >\n          </div>\n        </div>\n      </div>\n      <div *ngIf=\"enableSearch\">\n        <form (submit)=\"searchAllDocumentsAndFolders(searchKeyword)\" [formGroup]=\"searchForm\">\n          <mat-form-field class=\"w-full px-2\">\n            <input matInput [(ngModel)]=\"searchKeyword\" formControlName=\"searchKeyword\" placeholder=\"Search here\"/>\n          </mat-form-field>\n          <mat-progress-spinner\n              *ngIf=\"showSearchingSpinner\"\n              mode=\"determinate\"\n              [diameter]=\"40\"\n              color=\"warn\"\n              [value]=\"100\"\n            ></mat-progress-spinner>\n        </form>\n        <div *ngIf=\"!showSearchingSpinner&&isSearching&&seachResultDocuments.length===0&&seachResultFolders.length===0\">\n          <div class=\"card-container\">\n            <h4>Search results: </h4>\n            <mat-card >\n              <div class=\"document\">\n                <div class=\"title\">\n                  There are no site files/folders match your keyword.\n                </div>\n              </div>\n            </mat-card>\n          </div>\n        </div>\n        <div class=\"exp-panel\" *ngIf=\"seachResultDocuments.length>0\">\n          <mat-expansion-panel [expanded]=\"true\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Files:\n              </mat-panel-title>\n              <mat-panel-description>\n                They are results of search files.\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <mat-card (click)=\"onSelectedSearchItem(document)\" *ngFor=\"let document of seachResultDocuments|slice:0: documentsShow\">\n              <div class=\"document\">\n                <div class=\"title\">\n                  {{document.name}}\n                </div>\n                <div class=\"search-item\">\n                  <mat-icon class=\"icon-size-44 text-primary\">\n                      insert_drive_file\n                  </mat-icon>\n                  <span>{{ document.fullPath }}</span>\n              </div>\n              </div>\n            </mat-card>\n            <div class=\"text-right\">\n              <button \n                *ngIf=\"documentsShow < seachResultDocuments.length\"\n                (click)=\"documentsShow=documentsShow+10\"\n                mat-raised-button>Load more</button>\n              </div>\n          </mat-expansion-panel>\n        </div>\n        <div class=\"exp-panel\" *ngIf=\"seachResultFolders.length>0\">\n          <mat-expansion-panel [expanded]=\"true\">\n            <mat-expansion-panel-header>\n              <mat-panel-title>\n                Folders:\n              </mat-panel-title>\n              <mat-panel-description>\n                They are results of search folders.\n              </mat-panel-description>\n            </mat-expansion-panel-header>\n            <mat-card (click)=\"onSelectedSearchItem(folder)\" *ngFor=\"let folder of seachResultFolders|slice:0: foldersShow\">\n              <div class=\"document\">\n                <div class=\"title\">\n                  {{folder.name}}\n                </div>\n                <div class=\"search-item\">\n                  <mat-icon class=\"icon-size-44 text-primary\">\n                      folder\n                  </mat-icon>\n                  <span>{{ folder.fullPath }}</span>\n                </div>\n              </div>\n            </mat-card>\n            <div class=\"text-right\">\n              <button \n                *ngIf=\"foldersShow < seachResultFolders.length\"\n                (click)=\"foldersShow=foldersShow+10\"\n                mat-raised-button>Load more</button>\n            </div>\n          </mat-expansion-panel>\n        </div>\n      </div>\n      <app-file-table\n        *ngIf=\"folders$ && files$\"\n        [folders]=\"folders$ | async\"\n        [files]=\"files$ | async\"\n        [fileActions]=\"fileActions\"\n        [folderActions]=\"folderActions\"\n        [config]=\"config\"\n        [$triggerClearSelected]=\"$triggerClearSelected\"\n        (checkedChanged)=\"$BulkSelected.next($event)\"\n        (selectedChanged)=\"this.onSelectedFilePath($event)\"\n        (enterFolder)=\"this.onEnterFolder($event)\"\n      >\n      </app-file-table>\n    </mat-drawer-content>\n    <mat-drawer\n      #drawer\n      [(opened)]=\"isFileDetailsOpen\"\n      class=\"history-drawer\"\n      mode=\"side\"\n      position=\"end\"\n      opened\n    >\n      <ngx-filemanager-file-details\n        [actions]=\"fileDetailActions\"\n        [file]=\"SelectedFile\"\n        [fileSystem]=\"fileSystem\"\n        [config]=\"config\"\n        (clickedDownload)=\"this.onDetailsClickDownload($event)\"\n      >\n      </ngx-filemanager-file-details>\n    </mat-drawer>\n  </mat-drawer-container>\n</div>\n","styles":[".heading{font-family:sans-serif;margin-left:10px}mat-drawer{width:260px}mat-drawer-content{overflow:hidden}mat-drawer-content .loaded{overflow:auto}mat-drawer-container{width:100%}.ngx-file-page-container{display:flex;height:calc(100% - 65px)}.expander-container{align-items:center;cursor:pointer;display:flex;flex-direction:row-reverse;right:0;top:0;z-index:1}.expander-icon{font-size:2em;height:1em;transition:transform .5s;width:1em}.bulk-actions-container{height:80px;overflow:hidden;position:absolute;top:0;transition:top .7s;width:100%;z-index:2}.hidden{top:-90px}.drawer-out{transform:rotate(-90deg)}.drawer-in{transform:rotate(90deg)}.flex-h{align-items:center;display:flex;flex-direction:row}.space-between{justify-content:space-between}button.top{margin-left:10px}.breadcrumb-container{margin:2px 0}.document{cursor:pointer}.search-item{align-items:center;display:flex}","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"fileSystem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":30,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":32,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵh"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"makeConfig":[{"__symbolic":"method"}],"onEnterFolder":[{"__symbolic":"method"}],"onSelectedFilePath":[{"__symbolic":"method"}],"onDetailsClickDelete":[{"__symbolic":"method"}],"onDetailsClickDownload":[{"__symbolic":"method"}],"onDetailsClickRename":[{"__symbolic":"method"}],"onDetailsClickSinglePermissions":[{"__symbolic":"method"}],"onClickCrumb":[{"__symbolic":"method"}],"ClearBulkSelected":[{"__symbolic":"method"}],"searchAllDocumentsAndFolders":[{"__symbolic":"method"}],"iterateCurrentDocumentAndFolders":[{"__symbolic":"method"}],"checkSearchKeywordRelative":[{"__symbolic":"method"}],"initCleanSearchResults":[{"__symbolic":"method"}],"onSelectedSearchItem":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":32,"character":1}}],"members":{"GetCurrentPath":[{"__symbolic":"method"}],"ConvertToRelativePath":[{"__symbolic":"method"}],"GetRootPath":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵf"},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialog","line":71,"character":20},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵg"}]}],"init":[{"__symbolic":"method"}],"OnRename":[{"__symbolic":"method"}],"OnMoveMultiple":[{"__symbolic":"method"}],"OnCopyMultiple":[{"__symbolic":"method"}],"checkCanAddPermissions":[{"__symbolic":"method"}],"OnSetPermissionsMultiple":[{"__symbolic":"method"}],"OnSetPermissionsObjectMultiple":[{"__symbolic":"method"}],"OnDeleteMultiple":[{"__symbolic":"method"}],"OnNavigateTo":[{"__symbolic":"method"}],"OnNavigateToParent":[{"__symbolic":"method"}],"OnSelectItemByPath":[{"__symbolic":"method"}],"OnUploadFilesToCurrentDirectory":[{"__symbolic":"method"}],"OnNewFolderInCurrentDirectory":[{"__symbolic":"method"}],"OnNewFolder":[{"__symbolic":"method"}],"OnNewFolderClobber":[{"__symbolic":"method"}],"OnDownloadFile":[{"__symbolic":"method"}],"initiateDownload":[{"__symbolic":"method"}],"RefreshExplorer":[{"__symbolic":"method"}],"openDialog":[{"__symbolic":"method"}],"CloneProvider":[{"__symbolic":"method"}],"ListCurrentPathItems":[{"__symbolic":"method"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":18,"character":1}}],"members":{"instanceCountIncr":[{"__symbolic":"method"}],"instanceCountDecr":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"SetStore":[{"__symbolic":"method"}],"OnList":[{"__symbolic":"method"}],"OnCreateFolder":[{"__symbolic":"method"}],"OnUploadedFiles":[{"__symbolic":"method"}],"recursivelyTryAddFile":[{"__symbolic":"method"}],"OnCopy":[{"__symbolic":"method"}],"OnMove":[{"__symbolic":"method"}],"OnRename":[{"__symbolic":"method"}],"OnEdit":[{"__symbolic":"method"}],"OnGetcontent":[{"__symbolic":"method"}],"OnSetPermissions":[{"__symbolic":"method"}],"OnMoveMultiple":[{"__symbolic":"method"}],"OnCopyMultiple":[{"__symbolic":"method"}],"OnSetPermissionsMultiple":[{"__symbolic":"method"}],"OnSetPermissionsObjectMultiple":[{"__symbolic":"method"}],"OnRemove":[{"__symbolic":"method"}],"UpdateList":[{"__symbolic":"method"}],"getNextFreeFoldernameRecursively":[{"__symbolic":"method"}],"removeSingleFromList":[{"__symbolic":"method"}],"EnsureNoTrailingSlash":[{"__symbolic":"method"}],"GetFileNameFromPath":[{"__symbolic":"method"}],"removeMultiple":[{"__symbolic":"method"}],"onSelectItem":[{"__symbolic":"method"}],"CurrentFiles":[{"__symbolic":"method"}],"addIconPath":[{"__symbolic":"method"}],"CloneProvider":[{"__symbolic":"method"}]},"statics":{"instanceCount":0}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":10,"character":1}}],"members":{}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":5,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":8,"character":15},"arguments":[{"__symbolic":"reference","module":"@angular/common","name":"APP_BASE_HREF","line":8,"character":22}]}]],"parameters":[{"__symbolic":"reference","name":"string"}]}],"getFileIconUrl":[{"__symbolic":"method"}],"getFolderIconUrl":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":15,"character":1}}],"members":{"instanceCountIncr":[{"__symbolic":"method"}],"instanceCountDecr":[{"__symbolic":"method"}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵh"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"initialize":[{"__symbolic":"method"}],"reportError":[{"__symbolic":"method"}],"updateListFromServer":[{"__symbolic":"method"}],"HandleList":[{"__symbolic":"method"}],"HandleCreateFolder":[{"__symbolic":"method"}],"HandleUpload":[{"__symbolic":"method"}],"HandleCopy":[{"__symbolic":"method"}],"HandleMove":[{"__symbolic":"method"}],"HandleRename":[{"__symbolic":"method"}],"HandleEdit":[{"__symbolic":"method"}],"HandleGetcontent":[{"__symbolic":"method"}],"HandleSetPermissions":[{"__symbolic":"method"}],"HandleMoveMultiple":[{"__symbolic":"method"}],"HandleCopyMultiple":[{"__symbolic":"method"}],"HandleSetPermissionsMultiple":[{"__symbolic":"method"}],"HandleSetPermissionsObjectMultiple":[{"__symbolic":"method"}],"HandleRemove":[{"__symbolic":"method"}],"HandleNavigateUp":[{"__symbolic":"method"}],"onSelectItem":[{"__symbolic":"method"}],"GetItemByName":[{"__symbolic":"method"}],"onSelectItemByName":[{"__symbolic":"method"}],"selectFirstInCurrentDirectory":[{"__symbolic":"method"}],"CloneProvider":[{"__symbolic":"method"}]},"statics":{"instanceCount":0}},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/material/snack-bar","name":"MatSnackBar","line":5,"character":35}]}],"notify":[{"__symbolic":"method"}],"notifyCancelled":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1},"arguments":[{"providedIn":"root"}]}],"members":{"UpdateStatus":[{"__symbolic":"method"}]},"statics":{"ɵprov":{}}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"bread-crumbs","template":"\n    <div class=\"flex-row align-center\">\n      <div\n        class=\"flex-row align-center\"\n        *ngFor=\"let crumb of crumbs; let first = first; let last = last\"\n      >\n        <div class=\"divider\" *ngIf=\"!first\">\n          >\n        </div>\n        <button\n          #myButton\n          class=\"crumb\"\n          mat-raised-button\n          color=\"secondary\"\n          [disabled]=\"last\"\n          (click)=\"onClickCrumb(crumb); myButton.disabled = true\"\n        >\n          <mat-icon *ngIf=\"crumb.icon\">{{ crumb.icon }}</mat-icon>\n          {{ crumb.label }}\n        </button>\n      </div>\n    </div>\n  ","styles":["h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"clickedCrumb":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":36,"character":3}}]}],"currentPath":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"}]}],"makeCrumbs":[{"__symbolic":"method"}],"onClickCrumb":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"bulk-actions","template":"\n    <mat-toolbar color=\"primary\">\n      <mat-toolbar-row class=\"top-toolbar\">\n        <span class=\"top-toolbar-label\">\n          Bulk Actions\n        </span>\n      </mat-toolbar-row>\n      <mat-toolbar-row class=\"action-toolbar scroll-x\">\n        <div class=\"flex-row\" *ngIf=\"bulkSelected$ | async as selected\">\n          <div *ngFor=\"let action of bulkActions\">\n            <button\n              class=\"mr-10 flex-row align-center\"\n              mat-raised-button\n              [disabled]=\"action.$disabled | async\"\n              [color]=\"action.color\"\n              (click)=\"executeAction(action, selected)\"\n            >\n              <mat-icon>{{ action.icon }}</mat-icon>\n              {{ action.label }}\n            </button>\n          </div>\n        </div>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  ","styles":["h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"bulkActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":36,"character":3}}]}],"bulkSelected$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"clearSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":40,"character":3}}]}],"executeAction":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"main-actions","template":"\n    <mat-toolbar>\n      <mat-toolbar-row class=\"top-toolbar\">\n        <span class=\"top-toolbar-label\">\n          Folder Actions\n        </span>\n      </mat-toolbar-row>\n      <mat-toolbar-row class=\"action-toolbar scroll-x\">\n        <div *ngFor=\"let action of mainActions\">\n          <button\n            class=\"mr-10 has-pointer\"\n            mat-raised-button\n            [color]=\"action.color\"\n            (click)=\"action.onClick(action)\"\n            [disabled]=\"action.$disabled | async\"\n          >\n            <mat-icon inline=\"true\">{{ action.icon }}</mat-icon>\n            {{ action.label }}\n          </button>\n        </div>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  ","styles":["\n      .top-toolbar-label {\n        color: #8a8a8a;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"mainActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}]}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":8,"character":1},"arguments":[{"selector":"ngx-filemanager-file-details","template":"\n    <div class=\"details-container ml-5\">\n      <div *ngIf=\"!hasInput\" class=\"none-selected\">\n        <h2>No item selected ...</h2>\n      </div>\n      <div *ngIf=\"hasInput\">\n        <mat-toolbar color=\"primary\">\n          <mat-toolbar-row class=\"title-row\">\n            <h2 *ngIf=\"isFile\">File Details</h2>\n            <h2 *ngIf=\"!isFile\">Directory Details</h2>\n          </mat-toolbar-row>\n          <mat-toolbar-row class=\"action-row\" *ngFor=\"let action of actions\">\n            <button\n              mat-raised-button\n              [matTooltip]=\"action.toolTip\"\n              [color]=\"action.color\"\n              (click)=\"action.onClick(file)\"\n              [disabled]=\"action.$disabled | async\"\n            >\n              <mat-icon>{{ action.icon }}</mat-icon>\n              <span>{{ action.label }}</span>\n            </button>\n          </mat-toolbar-row>\n        </mat-toolbar>\n        <span class=\"flex-row space-between align-top mt-5\">\n          <div>\n            <h5>Name</h5>\n            <h6 class=\"filename\">{{ file.name }}</h6>\n          </div>\n        </span>\n        <h5 class=\"mt-5\">Size</h5>\n        <h6 *ngIf=\"isFile\">{{ file.size | fileSize }}</h6>\n        <h6 *ngIf=\"!isFile&&config.folderSizePath\">{{ getFolderSize(file) | fileSize }}</h6>\n        <h5 class=\"mt-5\">Date</h5>\n        <h6>{{ file.date | date: 'short' }}</h6>\n        <span class=\"flex-row space-between align-top mt-5\">\n          <div>\n            <h5>Permissions</h5>\n            <div class=\"mb-10\">\n              <div *ngIf=\"readers?.length\">\n                <h6>Who can see this</h6>\n                <mat-chip-list>\n                  <mat-chip *ngFor=\"let entity of readers\">\n                    <mat-icon>people</mat-icon>\n                    <span>{{ entity }}</span>\n                  </mat-chip>\n                </mat-chip-list>\n              </div>\n              <div *ngIf=\"config?.showWriters && writers?.length\">\n                <h6>Who can edit this</h6>\n                <mat-chip-list>\n                  <mat-chip *ngFor=\"let entity of writers\">\n                    <mat-icon>people</mat-icon>\n                    <span>{{ entity }}</span>\n                  </mat-chip>\n                </mat-chip-list>\n              </div>\n              <div *ngIf=\"config?.showOthers && others\">\n                <h6>Everyone else can</h6>\n                <mat-chip-list>\n                  <mat-chip>\n                    {{ others }}\n                  </mat-chip>\n                </mat-chip-list>\n              </div>\n            </div>\n          </div>\n        </span>\n        <h5 class=\"mt-5\">Full Path</h5>\n        <h6>{{ file.fullPath }}</h6>\n        <h5 class=\"mt-5\">Type</h5>\n        <h6 *ngIf=\"!isFile\">Directory</h6>\n        <h6 *ngIf=\"isFile\" class=\"capitalize \">\n          {{ getFileType(file.name) }}\n        </h6>\n        <div *ngIf=\"isFile\" class=\"flex-row space-between align-top mt-5\">\n          <div>\n            <h5>Download</h5>\n            <div *ngIf=\"isImage\" class=\"preview\">\n              <i>Image Preview</i>\n              <div\n                class=\"has-pointer\"\n                (click)=\"this.clickedDownload.emit(file)\"\n              >\n                <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" />\n              </div>\n            </div>\n            <div *ngIf=\"!isImage\">\n              <h6 class=\"no-preview-text\">\n                No preview available\n              </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ","styles":["\n      .filename {\n        padding-right: 10px;\n      }\n      .none-selected {\n        color: grey;\n        text-align: center;\n        width: 100%;\n        margin-top: 100px;\n      }\n      .mb-10 {\n        margin-bottom: 10px;\n      }\n      .mt-5 {\n        margin-top: 10px;\n      }\n      .ml-5 {\n        margin-left: 5px;\n      }\n      .no-preview-text {\n        color: grey;\n        font-decoration: italic;\n      }\n      h5 {\n        margin: 0px;\n        color: #616161;\n        font-weight: normal;\n      }\n      h6 {\n        margin: 0px;\n        font-size: 1em;\n        overflow-wrap: break-word;\n        font-weight: bold;\n        margin-bottom: 5px;\n        margin-top: 2px;\n      }\n      img {\n        max-width: 100%;\n        max-height: 400px;\n      }\n      .preview {\n        opacity: 1;\n        transition: opacity 1s;\n      }\n      .title-row {\n        height: 45px;\n        padding-left: 8px;\n      }\n      .action-row {\n        height: 45px;\n        padding-left: 8px;\n      }\n      .action-row:last-child {\n        height: 48px;\n        padding-bottom: 4px;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"file":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":173,"character":3}}]}],"fileSystem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":188,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":190,"character":3}}]}],"actions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":192,"character":3}}]}],"clickedDownload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":194,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"}]}],"getFileType":[{"__symbolic":"method"}],"setImageUrl":[{"__symbolic":"method"}],"setPermissions":[{"__symbolic":"method"}],"getFolderSize":[{"__symbolic":"method"}]}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":5,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":6,"character":12}],"exports":[{"__symbolic":"reference","name":"ɵn"}],"declarations":[{"__symbolic":"reference","name":"ɵn"}],"providers":[]}]}],"members":{}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":11,"character":1},"arguments":[{"name":"fileSize"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":14,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":16,"character":4},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","module":"@angular/material/menu","name":"MatMenuModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/material/tooltip","name":"MatTooltipModule","line":21,"character":4}],"exports":[{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵq"}],"declarations":[{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵp"}],"providers":[]}]}],"members":{}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"app-file-table","template":"\n    <div class=\"files-viewer full-width\">\n      <div *ngIf=\"folders?.length\" class=\"flex-row align-center\">\n        <mat-icon\n          *ngIf=\"!areAllFoldersChecked\"\n          class=\"has-pointer color-white color-grey-hover\"\n          (click)=\"onCheckAllFolders()\"\n          >check_box_outline_blank</mat-icon\n        >\n        <mat-icon\n          *ngIf=\"areAllFoldersChecked\"\n          class=\"has-pointer color-black color-grey-hover\"\n          (click)=\"onUnCheckAllFolders()\"\n          >check_box_outline</mat-icon\n        >\n        <h4 class=\"p5 m0 color-grey\">Folders</h4>\n      </div>\n      <div class=\"flex-col\">\n        <card-folder\n          *ngFor=\"let folder of folders\"\n          [folder]=\"folder\"\n          [config]=\"config\"\n          [checkedItems]=\"checkedItems\"\n          [selectedItem]=\"selectedItem\"\n          [actions]=\"folderActions\"\n          (enterFolder)=\"enterFolder.emit($event)\"\n        >\n        </card-folder>\n      </div>\n      <div *ngIf=\"files?.length\" class=\"flex-row align-center\">\n        <mat-icon\n          *ngIf=\"!areAllFilesChecked\"\n          class=\"has-pointer color-white color-grey-hover\"\n          (click)=\"onCheckAllFiles()\"\n          >check_box_outline_blank</mat-icon\n        >\n        <mat-icon\n          *ngIf=\"areAllFilesChecked\"\n          class=\"has-pointer color-black color-grey-hover\"\n          (click)=\"onUnCheckAllFiles()\"\n          >check_box_outline</mat-icon\n        >\n        <h4 class=\"p5 m0 color-grey\">Files</h4>\n      </div>\n      <div class=\"flex-col\">\n        <card-file\n          *ngFor=\"let file of files\"\n          [file]=\"file\"\n          [checkedItems]=\"checkedItems\"\n          [selectedItem]=\"selectedItem\"\n          [actions]=\"fileActions\"\n        >\n        </card-file>\n      </div>\n      <div class=\"nothing-here\" *ngIf=\"!files?.length && !folders.length\">\n        <p>\n          No folders/files here\n        </p>\n      </div>\n    </div>\n  ","styles":["\n      .nothing-here {\n        padding: 20px;\n        padding-bottom: 100px;\n        font-size: 1.2em;\n        color: #777;\n      }\n      .files-viewer {\n        min-height: 500px;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"$triggerClearSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":100,"character":3}}]}],"fileActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":102,"character":3}}]}],"folderActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":104,"character":3}}]}],"files":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":106,"character":3}}]}],"folders":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":108,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":110,"character":3}}]}],"checkedChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":112,"character":3}}]}],"selectedChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":114,"character":3}}]}],"enterFolder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":116,"character":3}}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onCheckAllFolders":[{"__symbolic":"method"}],"onUnCheckAllFolders":[{"__symbolic":"method"}],"onCheckAllFiles":[{"__symbolic":"method"}],"onUnCheckAllFiles":[{"__symbolic":"method"}]}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":6,"character":1},"arguments":[{"selector":"card-folder","template":"\n    <div\n      class=\"flex-row p5 space-between bg-grey-hover rounded\"\n      matTooltip=\"Click For Details\"\n      [class.bg-grey-light]=\"isChecked\"\n      [class.bg-grey-dark]=\"isSelected\"\n      (click)=\"onSelect()\"\n      (dblclick)=\"onDoubleClick()\"\n    >\n      <div class=\"flex-row align-center\">\n        <div *ngIf=\"checkedItems\">\n          <mat-icon\n            *ngIf=\"!isChecked\"\n            class=\"has-pointer color-white color-grey-hover\"\n            (click)=\"onCheck()\"\n            >check_box_outline_blank</mat-icon\n          >\n          <mat-icon\n            *ngIf=\"isChecked\"\n            class=\"has-pointer color-black color-grey-hover\"\n            (click)=\"onUnCheck()\"\n            >check_box_outline</mat-icon\n          >\n        </div>\n        <img class=\"mr-10\" width=\"30\" [src]=\"folder['icon']\" />\n        <div>\n          <h5 class=\"m0 mb-5 has-ellipsis\">{{ folder.name }}</h5>\n          <small *ngIf=\"config && config.folderSizePath\" class=\"m0 color-grey\">{{ getFolderSize(folder) | fileSize }}</small>\n        </div>\n      </div>\n      <button\n        *ngIf=\"actions\"\n        mat-icon-button\n        [matMenuTriggerFor]=\"menu\"\n        aria-label=\"Example icon-button with a menu\"\n      >\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n    <mat-menu #menu=\"matMenu\">\n      <button\n        mat-menu-item\n        *ngFor=\"let action of actions\"\n        (click)=\"action.onClick(folder)\"\n      >\n        <mat-icon [color]=\"action.color\">{{ action.icon }}</mat-icon>\n        <span>{{ action.label }}</span>\n      </button>\n    </mat-menu>\n  ","styles":["","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"folder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":3}}]}],"actions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":3}}]}],"checkedItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":75,"character":3}}]}],"selectedItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":77,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":79,"character":3}}]}],"enterFolder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":81,"character":3}}]}],"onSelect":[{"__symbolic":"method"}],"onCheck":[{"__symbolic":"method"}],"onUnCheck":[{"__symbolic":"method"}],"onDoubleClick":[{"__symbolic":"method"}],"getFolderSize":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":5,"character":1},"arguments":[{"selector":"card-file","template":"\n    <div\n      class=\"flex-row p5 space-between bg-grey-hover rounded\"\n      matTooltip=\"Click For Details\"\n      [class.bg-grey-light]=\"isChecked\"\n      [class.bg-grey-dark]=\"isSelected\"\n      (click)=\"onSelect()\"\n    >\n      <div class=\"flex-row align-center\">\n        <mat-icon\n          *ngIf=\"!isChecked\"\n          class=\"color-white color-grey-hover\"\n          (click)=\"onCheck()\"\n          >check_box_outline_blank</mat-icon\n        >\n        <mat-icon\n          *ngIf=\"isChecked\"\n          class=\"color-black color-grey-hover\"\n          (click)=\"onUnCheck()\"\n          >check_box_outline</mat-icon\n        >\n        <img class=\"mr-10\" width=\"30\" [src]=\"file['icon']\" />\n        <div>\n          <h5 class=\"m0 mb-5 has-ellipsis\">{{ file.name }}</h5>\n          <small class=\"m0 color-grey\">{{ file.size | fileSize }}</small>\n        </div>\n      </div>\n      <div class=\"flex-row align-center\">\n        <button\n          mat-icon-button\n          [matMenuTriggerFor]=\"menu\"\n          aria-label=\"Example icon-button with a menu\"\n        >\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </div>\n    </div>\n    <mat-menu #menu=\"matMenu\">\n      <button\n        mat-menu-item\n        *ngFor=\"let action of actions\"\n        (click)=\"action.onClick(file)\"\n      >\n        <mat-icon [color]=\"action.color\">{{ action.icon }}</mat-icon>\n        <span>{{ action.label }}</span>\n      </button>\n    </mat-menu>\n  ","styles":["","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"file":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":66,"character":3}}]}],"actions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":68,"character":3}}]}],"checkedItems":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":3}}]}],"selectedItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":3}}]}],"onSelect":[{"__symbolic":"method"}],"onCheck":[{"__symbolic":"method"}],"onUnCheck":[{"__symbolic":"method"}]}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":11,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":13,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":14,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":15,"character":4},{"__symbolic":"reference","module":"@angular/material/progress-bar","name":"MatProgressBarModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":18,"character":4}],"exports":[{"__symbolic":"reference","name":"ɵt"}],"declarations":[{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵv"}],"providers":[]}]}],"members":{}},"ɵt":{"__symbolic":"class","extends":{"__symbolic":"reference","name":"ɵu"},"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":30,"character":1},"arguments":[{"selector":"form-file-firebase","template":"\n    <div>\n      <label class=\"custom-file-upload\">\n        <input\n          *ngIf=\"isMultiple\"\n          class=\"hidden\"\n          type=\"file\"\n          multiple\n          [disabled]=\"disabled || maxReached\"\n          (change)=\"onFileChange($event)\"\n        />\n        <input\n          *ngIf=\"!isMultiple\"\n          class=\"hidden\"\n          type=\"file\"\n          [disabled]=\"disabled || maxReached\"\n          (change)=\"onFileChange($event)\"\n        />\n        {{ placeholder }}\n        <div class=\"max-files\" *ngIf=\"maxReached && !disabled\">\n          Max Uploaded - Limit of {{ config.maxFiles }} file(s) reached. Remove\n          files to change uploads\n        </div>\n      </label>\n      <app-uploaded-files-list\n        [disabled]=\"disabled\"\n        [uploadedFiles]=\"this.value\"\n        (clickRemoveTag)=\"this.clickRemoveTag($event)\"\n      >\n      </app-uploaded-files-list>\n    </div>\n  ","styles":["\n      .custom-file-upload {\n        border: 4px dashed #ccc;\n        display: inline-block;\n        padding: 35px 0px;\n        cursor: pointer;\n        width: calc(100% - 8px);\n        text-align: center;\n        font-size: 1.5em;\n        color: #777;\n      }\n      .hidden {\n        display: none;\n      }\n      .max-files {\n        font-size: 0.9em;\n        color: orange;\n        font-style: italic;\n      }\n    "],"providers":[{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALUE_ACCESSOR","line":89,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵt"},"multi":true},{"provide":{"__symbolic":"reference","module":"@angular/forms","name":"NG_VALIDATORS","line":94,"character":15},"useExisting":{"__symbolic":"reference","name":"ɵt"},"multi":true}]}]}],"members":{"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":102,"character":3}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":104,"character":3}}]}],"uploadStatusChanged":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":107,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵg"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"checkAllUploadsAreDone":[{"__symbolic":"method"}],"currentBucketName":[{"__symbolic":"method"}],"clickRemoveTag":[{"__symbolic":"method"}],"onFileChange":[{"__symbolic":"method"}],"beginUploadTask":[{"__symbolic":"method"}],"parseAndCompress":[{"__symbolic":"method"}],"getFileSizeKiloBytes":[{"__symbolic":"method"}],"onNext":[{"__symbolic":"method"}],"onError":[{"__symbolic":"method"}],"onComplete":[{"__symbolic":"method"}],"addFile":[{"__symbolic":"method"}],"ensureValueIsArray":[{"__symbolic":"method"}]}},"ɵu":{"__symbolic":"class","arity":1,"decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":7,"character":1}}],"members":{"formControlName":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":19,"character":3}}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":21,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"init":[{"__symbolic":"method"}],"destroy":[{"__symbolic":"method"}],"writeValue":[{"__symbolic":"method"}],"registerOnChange":[{"__symbolic":"method"}],"registerOnTouched":[{"__symbolic":"method"}],"setDisabledState":[{"__symbolic":"method"}],"validate":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"CheckValueIsValid":[{"__symbolic":"method"}]}},"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"app-uploaded-files-list","template":"\n    <p *ngIf=\"uploadedFiles?.length\">Uploaded files:</p>\n    <div>\n      <div *ngFor=\"let file of uploadedFiles\">\n        <div class=\"full-width flex-h\">\n          <mat-icon id=\"i-done\" *ngIf=\"!disabled && isDone(file)\"\n            >done</mat-icon\n          >\n          <img class=\"file-icon\" image [src]=\"file['fileicon']\" />\n          <a class=\"full-width flex-h has-ellipsis\" [href]=\"file.id\" target=\"_blank\">\n            <span class=\"has-ellipsis\">{{ file.value.name }}</span>\n            <mat-icon class=\"i-open\">open_in_new</mat-icon>\n            <img\n              *ngIf=\"file['imageurl']\"\n              class=\"file-thumb\"\n              image\n              [src]=\"file['imageurl']\"\n            />\n          </a>\n          <mat-icon\n            *ngIf=\"!disabled\"\n            class=\"has-pointer\"\n            (click)=\"this.clickRemoveTag.emit(file)\"\n            >cancel</mat-icon\n          >\n        </div>\n        <div class=\"full-width\">\n          <mat-progress-bar\n            class=\"progress\"\n            mode=\"determinate\"\n            [value]=\"getProgress(file)\"\n          ></mat-progress-bar>\n        </div>\n      </div>\n    </div>\n  ","styles":["\n      .full-width {\n        width: 100%;\n      }\n      .flex-h {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n      }\n      .has-pointer {\n        cursor: pointer;\n      }\n      .file-link {\n        display: flex;\n        align-items: center;\n      }\n      .file-thumb,\n      .file-icon {\n        margin: 0px 10px;\n        height: 30px;\n      }\n      .file-thumb {\n        background-color: #ddd;\n      }\n      .i-open {\n        font-size: 1em;\n      }\n      .has-ellipsis {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    "]}]}],"members":{"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":78,"character":3}}]}],"uploadedFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":80,"character":3}}]}],"clickRemoveTag":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":82,"character":3}}]}],"getProgress":[{"__symbolic":"method"}],"isDone":[{"__symbolic":"method"}]}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":41,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":43,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":44,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":45,"character":4},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":47,"character":4},{"__symbolic":"reference","module":"@angular/material/dialog","name":"MatDialogModule","line":48,"character":4},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":49,"character":4},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":50,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":51,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":52,"character":4},{"__symbolic":"reference","module":"@angular/material/select","name":"MatSelectModule","line":53,"character":4},{"__symbolic":"reference","module":"@angular/material/card","name":"MatCardModule","line":54,"character":4},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵba"}],"exports":[{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbe"},{"__symbolic":"reference","name":"ɵbf"},{"__symbolic":"reference","name":"ɵbg"},{"__symbolic":"reference","name":"ɵbh"},{"__symbolic":"reference","name":"ɵbi"},{"__symbolic":"reference","name":"ɵbj"},{"__symbolic":"reference","name":"ɵbk"}],"entryComponents":[{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbe"},{"__symbolic":"reference","name":"ɵbf"},{"__symbolic":"reference","name":"ɵbg"},{"__symbolic":"reference","name":"ɵbh"},{"__symbolic":"reference","name":"ɵbi"},{"__symbolic":"reference","name":"ɵbj"},{"__symbolic":"reference","name":"ɵbk"}],"declarations":[{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbe"},{"__symbolic":"reference","name":"ɵbf"},{"__symbolic":"reference","name":"ɵbg"},{"__symbolic":"reference","name":"ɵbh"},{"__symbolic":"reference","name":"ɵbi"},{"__symbolic":"reference","name":"ɵbj"},{"__symbolic":"reference","name":"ɵbk"},{"__symbolic":"reference","name":"ɵbl"}],"providers":[]}]}],"members":{}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":12,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":14,"character":4},{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","module":"@angular/material/button","name":"MatButtonModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":17,"character":4},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","module":"@angular/material/toolbar","name":"MatToolbarModule","line":19,"character":4}],"exports":[{"__symbolic":"reference","name":"ɵy"}],"declarations":[{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"}],"providers":[]}]}],"members":{}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"app-file-table-mini-folder-browser","template":"\n    <div class=\"full-width mini-browser-height\">\n      <actions-mini-browser [mainActions]=\"mainActions\"> </actions-mini-browser>\n      <h4 class=\"p5 m0 color-grey\">Folders</h4>\n      <div class=\"flex-col bg-white\">\n        <card-folder\n          *ngFor=\"let folder of folders\"\n          [folder]=\"folder\"\n          [selectedItem]=\"selectedItem\"\n          (enterFolder)=\"onEnterFolder($event)\"\n        >\n        </card-folder>\n      </div>\n    </div>\n  ","providers":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵf"}],"styles":["\n      .mini-browser-height {\n        min-height: 400px;\n        max-height: 80vh;\n      }\n      .bg-white {\n        background-color: #fff;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"folders":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":3}}]}],"mainActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":60,"character":3}}]}],"enterDirectory":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":62,"character":3}}]}],"selectedDirectory":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":64,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"onEnterFolder":[{"__symbolic":"method"}]}},"ɵz":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"actions-mini-browser","template":"\n    <mat-toolbar color=\"primary\" *ngIf=\"this.mainActions\">\n      <mat-toolbar-row class=\"top-toolbar\">\n        <span class=\"top-toolbar-label\">\n          Actions\n        </span>\n      </mat-toolbar-row>\n      <mat-toolbar-row class=\"action-toolbar scroll-x\">\n        <div *ngFor=\"let action of mainActions\">\n          <button\n            class=\"action has-pointer\"\n            mat-raised-button\n            [color]=\"action.color\"\n            (click)=\"action.onClick(action)\"\n            [disabled]=\"action.$disabled | async\"\n          >\n            <mat-icon inline=\"true\">{{ action.icon }}</mat-icon>\n            {{ action.label }}\n          </button>\n        </div>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  ","styles":["\n      button.action {\n        margin-right: 10px;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"mainActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":3}}]}]}},"ɵba":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":12,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":14,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"ReactiveFormsModule","line":15,"character":4},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":16,"character":4},{"__symbolic":"reference","module":"@angular/material/chips","name":"MatChipsModule","line":17,"character":4},{"__symbolic":"reference","module":"@angular/material/autocomplete","name":"MatAutocompleteModule","line":18,"character":4},{"__symbolic":"reference","module":"@angular/material/icon","name":"MatIconModule","line":19,"character":4},{"__symbolic":"reference","module":"@angular/material/input","name":"MatInputModule","line":20,"character":4},{"__symbolic":"reference","module":"@angular/material/form-field","name":"MatFormFieldModule","line":21,"character":4}],"exports":[{"__symbolic":"reference","name":"ɵbb"}],"declarations":[{"__symbolic":"reference","name":"ɵbb"}],"providers":[]}]}],"members":{}},"ɵbb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"app-control-tag-multiple","template":"\n    <mat-form-field class=\"full-width\" [class.formInvalid]=\"hasRed()\">\n      <mat-chip-list #chipList [disabled]=\"!removableTags\" [multiple]=\"true\">\n        <mat-chip\n          *ngFor=\"let tag of selectInitial\"\n          [selectable]=\"selectable\"\n          [removable]=\"removableTags\"\n          (removed)=\"removeTag(tag)\"\n        >\n          {{ getLowerCase(tag) }}\n          <mat-icon matChipRemove *ngIf=\"removableTags\">cancel</mat-icon>\n        </mat-chip>\n        <input\n          #tagInput\n          [placeholder]=\"placeholder\"\n          [formControl]=\"controlAutocomplete\"\n          [matAutocomplete]=\"auto\"\n          [matChipInputFor]=\"chipList\"\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n          [matChipInputAddOnBlur]=\"addOnBlur\"\n          (matChipInputTokenEnd)=\"add($event)\"\n          [name]=\"autoCompleteObscureName\"\n        />\n      </mat-chip-list>\n      <mat-icon\n        matTooltip=\"Add many tags here, you can manage all your tags using the tag list editor in the settings menu\"\n        class=\"tag-icon\"\n        matSuffix\n        matBadge=\"∞\"\n        >local_offer</mat-icon\n      >\n      <mat-autocomplete\n        #auto=\"matAutocomplete\"\n        (optionSelected)=\"selectedTag($event)\"\n      >\n        <mat-option\n          *ngFor=\"let tag of filteredTags | async\"\n          [value]=\"tag\"\n          [disabled]=\"tag['isDisabled']\"\n        >\n          {{ tag.name }}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  ","styles":["\n      .full-width {\n        width: 100%;\n      }\n      .tag-icon {\n        color: grey;\n        right: 15px;\n      }\n      .formInvalid {\n        background-color: #ff4f4f30 !important;\n      }\n      .mat-badge-active {\n        font-size: 18px;\n      }\n      mat-icon span {\n        background-color: transparent;\n        right: 1px !important;\n        top: 1px !important;\n        color: white;\n      }\n    "]}]}],"members":{"tagInput":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":111,"character":3},"arguments":["tagInput",{"static":false}]}]}],"matAutocomplete":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":113,"character":3},"arguments":["auto",{"static":false}]}]}],"placeholder":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":118,"character":3}}]}],"displayLowerCase":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":119,"character":3}}]}],"control":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":120,"character":3}}]}],"removableTags":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":121,"character":3}}]}],"allowCustom":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":122,"character":3}}]}],"selectChoices$":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":123,"character":3}}]}],"checkExists":[{"__symbolic":"method"}],"hasRed":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"add":[{"__symbolic":"method"}],"removeTag":[{"__symbolic":"method"}],"selectedTag":[{"__symbolic":"method"}],"updateFormValue":[{"__symbolic":"method"}],"getLowerCase":[{"__symbolic":"method"}]}},"ɵbc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"selector":"base-dialog","template":"\n    <div class=\"dialog-wrapper\">\n      <div class=\"header sans-serif flex-col align-center\">\n        <ng-container *ngTemplateOutlet=\"header\"> </ng-container>\n      </div>\n      <div class=\"body sans-serif flex-col align-center\">\n        <ng-container *ngTemplateOutlet=\"body\"> </ng-container>\n      </div>\n      <div class=\"actions sans-serif flex-col align-center\">\n        <ng-container *ngTemplateOutlet=\"actions\"> </ng-container>\n      </div>\n    </div>\n  ","styles":["\n      .dialog-wrapper {\n        max-height: 80vh;\n        min-width: 400px;\n      }\n      .header {\n      }\n      .body {\n        overflow-y: auto;\n        max-height: 60vh;\n      }\n      .actions {\n        max-height: 200px;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"header":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":38,"character":3}}]}],"body":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":3}}]}],"actions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":3}}]}]}},"ɵbd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":9,"character":1},"arguments":[{"template":"\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Rename Item</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <h5 class=\"p5 m0\">Old Path: {{ data.currentPath }}</h5>\n        <h5 class=\"p5 m0\">New Path: {{ newPath }}</h5>\n\n        <mat-form-field>\n          <input\n            matInput\n            placeholder=\"New Name\"\n            [formControl]=\"renamedItem\"\n            (keyup.enter)=\"onSubmit()\"\n          />\n        </mat-form-field>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Rename Item\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  ","styles":["h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":50,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":50,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbd"}]},{"__symbolic":"reference","name":"any"}]}],"onSubmit":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}]}},"ɵbe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"template":"\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Create Folder</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <div>\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"New Folder Name\"\n              [formControl]=\"folderName\"\n              (keyup.enter)=\"onSubmit()\"\n            />\n          </mat-form-field>\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Create Folder\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  ","styles":["h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbe"}]}]}],"onSubmit":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}]}},"ɵbf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":21,"character":1},"arguments":[{"template":"\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Set Permissions</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <h5>Selected Items</h5>\n        <ol>\n          <li *ngFor=\"let file of items\">\n            {{ file.name }}\n          </li>\n        </ol>\n\n        <mat-form-field class=\"full-width\">\n          <mat-select\n            matInput\n            [formControl]=\"entityTypeControl\"\n            placeholder=\"Type\"\n          >\n            <mat-option\n              *ngFor=\"let option of entityTypeOptions\"\n              [value]=\"option\"\n            >\n              {{ option }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" *ngIf=\"HasSelectedUser\">\n          <mat-select\n            matInput\n            [formControl]=\"entityControl\"\n            [placeholder]=\"EntityControlLabel\"\n          >\n            <mat-option *ngFor=\"let entity of $users | async\" [value]=\"entity\">\n              {{ entity.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" *ngIf=\"!HasSelectedUser\">\n          <mat-select\n            matInput\n            [formControl]=\"entityControl\"\n            [placeholder]=\"EntityControlLabel\"\n          >\n            <mat-option *ngFor=\"let entity of $groups | async\" [value]=\"entity\">\n              {{ entity.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <mat-select\n            matInput\n            [formControl]=\"roleControl\"\n            placeholder=\"Permissions\"\n          >\n            <mat-option *ngFor=\"let option of roleOptions\" [value]=\"option\">\n              {{ option }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Set Permissions\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  ","styles":["h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":120,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":120,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbf"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}]}},"ɵbg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"template":"\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Set Permissions</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <h5 class=\"my-5\">Selected Items</h5>\n        <mat-chip-list class=\"mb-5\">\n          <mat-chip *ngFor=\"let file of items\">\n            <mat-icon *ngIf=\"file.type === 'file'\">description</mat-icon>\n            <mat-icon *ngIf=\"file.type !== 'file'\">folder</mat-icon>\n            {{ file.name }}\n          </mat-chip>\n        </mat-chip-list>\n\n        <div class=\"full-width\">\n          <h5 class=\"my-5\">Who can see this</h5>\n          <app-control-tag-multiple\n            class=\"full-width -mt-15\"\n            [control]=\"allReadersControl\"\n            [selectChoices$]=\"$allEntities\"\n            [allowCustom]=\"false\"\n          >\n          </app-control-tag-multiple>\n        </div>\n\n        <div *ngIf=\"config?.showWriters\">\n          <h5 class=\"my-5\">Who can edit this</h5>\n          <app-control-tag-multiple\n            class=\"full-width -mt-15\"\n            [control]=\"allWritersControl\"\n            [selectChoices$]=\"$allEntities\"\n            [allowCustom]=\"false\"\n          >\n          </app-control-tag-multiple>\n        </div>\n\n        <div *ngIf=\"config?.showOthers\">\n          <h5 class=\"my-5\">Everyone else can</h5>\n          <mat-form-field class=\"full-width\">\n            <mat-select matInput [formControl]=\"othersControl\">\n              <mat-option\n                *ngFor=\"let permission of othersOptions\"\n                [value]=\"permission\"\n              >\n                {{ permission }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </ng-template>\n\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Set Permissions\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  ","styles":["\n      .my-5 {\n        margin: 5px 0;\n      }\n      .mb-5 {\n        margin-bottom: 5px;\n      }\n      .-mt-15 {\n        margin-top: -15px;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":128,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":128,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbg"}]},{"__symbolic":"reference","name":"any"}]}],"ngOnDestroy":[{"__symbolic":"method"}],"initPermissions":[{"__symbolic":"method"}],"getUniqueTags":[{"__symbolic":"method"}],"strings2Tags":[{"__symbolic":"method"}],"tags2Strings":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}]}},"ɵbh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":17,"character":1},"arguments":[{"template":"\n    <base-dialog\n      *ngIf=\"srcDirectory\"\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>{{ OkLabel }} Items</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <h5 class=\"my-5\">Selected Items</h5>\n        <mat-chip-list class=\"mb-5\">\n          <mat-chip *ngFor=\"let file of items\">\n            <mat-icon *ngIf=\"file.type === 'file'\">description</mat-icon>\n            <mat-icon *ngIf=\"file.type !== 'file'\">folder</mat-icon>\n            {{ file.name }}\n          </mat-chip>\n        </mat-chip-list>\n        <h5 class=\"my-5\">Navigate to destination folder</h5>\n        <div class=\"full-width\">\n          <mat-card class=\"m-10 bg-grey\">\n            <app-file-table-mini-folder-browser\n              [folders]=\"folders\"\n              [mainActions]=\"mainActions\"\n              (enterDirectory)=\"onEnterDirectory($event)\"\n              (selectedDirectory)=\"onSelectedDirectory($event)\"\n            >\n            </app-file-table-mini-folder-browser>\n          </mat-card>\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <h5 class=\"p5 m0\" *ngIf=\"!SelectedFolder\">No folder selected</h5>\n        <h5 class=\"p5 m0\" *ngIf=\"SameAsSrcFolder\">\n          Cannot copy to the same folder\n        </h5>\n        <h5 class=\"p5 m0\" *ngIf=\"!DisableCopy\">\n          Will copy Selected Items to:\n          <strong *ngIf=\"!copyToPathRelative\">/</strong>\n          <strong>{{ copyToPathRelative }}</strong>\n        </h5>\n        <btns-cancel-ok\n          [okIcon]=\"OkIcon\"\n          [okLabel]=\"OkLabel\"\n          [okDisabled]=\"DisableCopy\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  ","styles":["\n      .bg-grey {\n        background-color: #eee;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":99,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":99,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbh"}]},{"__symbolic":"reference","name":"any"}]}],"init":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"setCopyToPath":[{"__symbolic":"method"}],"setSrcDirectory":[{"__symbolic":"method"}],"onEnterDirectory":[{"__symbolic":"method"}],"onSelectedDirectory":[{"__symbolic":"method"}],"onSubmit":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}]}},"ɵbi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":19,"character":1},"arguments":[{"template":"\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Upload Files</h2>\n        <h5>To Folder: {{ currentDirectory }}</h5>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <div style=\"width: 100%;\">\n          <form-file-firebase\n            [formControl]=\"filesControl\"\n            [config]=\"config\"\n            (uploadStatusChanged)=\"isUploading.next($event)\"\n          >\n          </form-file-firebase>\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Finish\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n          [okDisabled]=\"isUploading | async\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n    <div #hidden></div>\n  ","styles":["\n      .dz-image {\n        display: none;\n      }\n      .dz-details > img {\n        display: none;\n      }\n    ","h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[null,null,null,[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":77,"character":5},"arguments":[{"__symbolic":"reference","module":"@angular/material/dialog","name":"MAT_DIALOG_DATA","line":77,"character":12}]}]],"parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbi"}]},{"__symbolic":"reference","name":"any"}]}],"onSubmit":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}]}},"ɵbj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>My Details</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <div>\n          The following details were\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Create Folder\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  ","styles":["h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbj"}]}]}],"onSubmit":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}]}},"ɵbk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":3,"character":1},"arguments":[{"template":"\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Set Permissions</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <div>\n          <p>Would you like to set permissions for this folder?</p>\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Yes\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  ","styles":["h1,h2,h3,h4,h5,h6,i,mat-chip,p,small,span{font-family:sans-serif}.is-red{background:red}.flex-col{display:flex;flex-direction:column}.flex-row{display:flex;flex-direction:row}.align-center{align-items:center}.align-top{align-items:start}.align-bottom{align-items:end}.fit-content{width:-moz-fit-content;width:fit-content}.sans-serif{font-family:sans-serif}.has-pointer{cursor:pointer}.has-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.scroll-x{overflow-x:auto}.full-width{width:100%}.text-center{text-align:center}.space-between{justify-content:space-between}.break-word{overflow-wrap:break-word;word-break:break-all}.capitalize{text-transform:capitalize}.p5{padding:5px}.m0{margin:0}.mb-10{margin-bottom:10px}.mr-10{margin-right:10px}.m-10{margin:10px}.color-grey{color:#8c8c8c}.rounded{border-radius:5px}.bg-grey-light{background-color:rgba(95,95,95,.2)}.bg-grey-dark{background-color:rgba(50,50,50,.39)}.bg-grey-hover{transition:background-color .5s}.bg-grey-hover:hover{background-color:rgba(95,95,95,.336)}.color-white{color:#fff}.color-grey-hover{transition:color .5s}.color-grey-hover:hover{color:#444}.color-black{color:#000}.action-toolbar{height:55px}.top-toolbar-label{font-size:.8em;margin:0}.top-toolbar{height:20px;padding-top:3px}"]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"MatDialogRef","module":"@angular/material/dialog","arguments":[{"__symbolic":"reference","name":"ɵbk"}]}]}],"onSubmit":[{"__symbolic":"method"}],"onCancel":[{"__symbolic":"method"}]}},"ɵbl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":2,"character":1},"arguments":[{"selector":"btns-cancel-ok","template":"\n    <div class=\"full-width text-center\">\n      <button mat-raised-button (click)=\"clickedCancel.emit()\">\n        <mat-icon>clear</mat-icon>\n        Cancel\n      </button>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"clickedOk.emit()\"\n        [disabled]=\"okDisabled\"\n      >\n        <mat-icon>{{ okIcon }}</mat-icon>\n        {{ okLabel }}\n      </button>\n    </div>\n  ","styles":["\n      button {\n        margin: 5px;\n      }\n    "]}]}],"members":{"okDisabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":31,"character":3}}]}],"okIcon":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":33,"character":3}}]}],"okLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":35,"character":3}}]}],"clickedOk":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":37,"character":3}}]}],"clickedCancel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":39,"character":3}}]}]}},"ɵbm":{"__symbolic":"function","parameters":["platformLocation"],"value":{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"platformLocation"},"member":"getBaseHrefFromDOM"}}},"ɵbn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":3,"character":1}}],"members":{}}},"origins":{"NgxFilemanagerClientFirebaseModule":"./lib/ngx-filemanager-client-firebase.module","NameUid":"./lib/configuration/client-configuration","FileManagerConfig":"./lib/configuration/client-configuration","ServerFilesystemProviderService":"./lib/services/pure/server-filesystem.service","FileSystemStub":"./lib/services/stub/stub-filesystem.class","ɵa":"./lib/ui/main-file-manager/main-file-manager.component","ɵb":"./lib/ui/main-file-manager/action-handlers.service","ɵc":"./lib/services/pure/client-filesystem.service","ɵd":"./lib/services/logging/logger.service","ɵe":"./lib/services/pure/icon-url-resolver.service","ɵf":"./lib/services/pure/optimistic-filesystem.service","ɵg":"./lib/services/pure/notification.service","ɵh":"./lib/services/state/status.service","ɵi":"./lib/ui/bread-crumbs/bread-crumbs.component","ɵj":"./lib/ui/actions-toolbars/bulk-actions.component","ɵk":"./lib/ui/actions-toolbars/main-actions.component","ɵl":"./lib/ui/file-details/file-details.component","ɵm":"./lib/ui/file-size/file-size.module","ɵn":"./lib/ui/file-size/file-size.pipe","ɵo":"./lib/ui/file-table/file-table.module","ɵp":"./lib/ui/file-table/file-table.component","ɵq":"./lib/ui/file-table/card-folder.component","ɵr":"./lib/ui/file-table/card-file.component","ɵs":"./lib/ui/file-upload/file-upload.module","ɵt":"./lib/ui/file-upload/form-file-firebase/form-file-firebase.component","ɵu":"./lib/ui/file-upload/form-file-firebase/form-base-class","ɵv":"./lib/ui/file-upload/form-file-firebase/form-file-uploader-list.component","ɵw":"./lib/ui/dialogs/dialogs.module","ɵx":"./lib/ui/file-table-mini/file-table-mini.module","ɵy":"./lib/ui/file-table-mini/file-table-mini-folder-browser.component","ɵz":"./lib/ui/file-table-mini/actions-mini-browser.component","ɵba":"./lib/ui/tags-control/tags-control.module","ɵbb":"./lib/ui/tags-control/tags-control.component","ɵbc":"./lib/ui/dialogs/base-dialog.component","ɵbd":"./lib/ui/dialogs/dialog-rename.component","ɵbe":"./lib/ui/dialogs/dialog-new-folder.component","ɵbf":"./lib/ui/dialogs/dialog-permissions-set.component","ɵbg":"./lib/ui/dialogs/dialog-permissions-setobject.component","ɵbh":"./lib/ui/dialogs/dialog-copy-or-move.component","ɵbi":"./lib/ui/dialogs/dialog-upload.component","ɵbj":"./lib/ui/dialogs/dialog-my-details.components","ɵbk":"./lib/ui/dialogs/dialog-confirmation.component","ɵbl":"./lib/ui/dialogs/btns-cancel-ok.component","ɵbm":"./lib/getBaseHref","ɵbn":"./lib/services/logging/console-logger.service"},"importAs":"ngx-filemanager-client-firebase"}