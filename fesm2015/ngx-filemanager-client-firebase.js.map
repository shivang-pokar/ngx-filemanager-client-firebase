{"version":3,"file":"ngx-filemanager-client-firebase.js","sources":["../../../projects/ngx-filemanager-client-firebase/src/lib/getBaseHref.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/logging/logger.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialog-rename.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/utils/path-helpers.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialog-copy-or-move.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialog-permissions-setobject.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/pure/notification.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialog-upload.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialog-new-folder.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/logging/console-logger.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/state/client-filesystem.cache.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/state/client-filesystem.datastore.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/utils/file-icon-guesser.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/pure/icon-url-resolver.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/utils/file.factory.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/pure/client-filesystem.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/state/status.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/pure/optimistic-filesystem.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialog-confirmation.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/stub/stub-files.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/main-file-manager/action-handlers.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/utils/sort-helpers.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/main-file-manager/main-file-manager.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/bread-crumbs/crumb-factory.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/bread-crumbs/bread-crumbs.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/actions-toolbars/bulk-actions.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/actions-toolbars/main-actions.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/utils/delayer.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-upload/form-file-firebase/file-icon.helper.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-details/file-details.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/utils/case-helper.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-upload/form-file-firebase/form-base-class.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-upload/form-file-firebase/form-file-firebase.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-upload/form-file-firebase/form-file-uploader-list.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-upload/file-upload.module.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/pure/server-filesystem-request.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/pure/server-filesystem.service.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/base-dialog.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialog-permissions-set.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialog-my-details.components.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/btns-cancel-ok.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-table-mini/file-table-mini-folder-browser.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-table-mini/actions-mini-browser.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-size/file-size.pipe.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-size/file-size.module.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-table/card-file.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-table/card-folder.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-table/file-table.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-table/file-table.module.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/file-table-mini/file-table-mini.module.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/tags-control/tags-control.component.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/tags-control/tags-control.module.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ui/dialogs/dialogs.module.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/ngx-filemanager-client-firebase.module.ts","../../../projects/ngx-filemanager-client-firebase/src/lib/services/stub/stub-filesystem.class.ts"],"sourcesContent":["import { PlatformLocation } from '@angular/common';\n\nexport function getBaseHref(platformLocation: PlatformLocation): string {\n  return platformLocation.getBaseHrefFromDOM();\n}\n","import { Injectable } from '@angular/core';\n\nexport abstract class Logger {\n  info: any;\n  warn: any;\n  error: any;\n}\n\nexport type logFn = (message?: any, ...optionalParams: any[]) => void;\n\n@Injectable()\nexport class LoggerService implements Logger {\n  info: logFn;\n  warn: logFn;\n  error: logFn;\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\nimport path from 'path-browserify';\n\nexport interface RenameDialogInterface {\n  currentPath: string;\n}\n\n@Component({\n  template: `\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Rename Item</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <h5 class=\"p5 m0\">Old Path: {{ data.currentPath }}</h5>\n        <h5 class=\"p5 m0\">New Path: {{ newPath }}</h5>\n\n        <mat-form-field>\n          <input\n            matInput\n            placeholder=\"New Name\"\n            [formControl]=\"renamedItem\"\n            (keyup.enter)=\"onSubmit()\"\n          />\n        </mat-form-field>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Rename Item\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  `,\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppDialogRenameComponent {\n  renamedItem = new FormControl();\n\n  constructor(\n    public dialogRef: MatDialogRef<AppDialogRenameComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: RenameDialogInterface\n  ) {\n    const name = path.basename(data.currentPath);\n    this.renamedItem.setValue(name);\n  }\n\n  onSubmit() {\n    const renamedFullPath = this.newPath;\n    this.dialogRef.close(renamedFullPath);\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n\n  get newPath() {\n    const directoryPath = path.dirname(this.data.currentPath);\n    const newItemName = this.renamedItem.value;\n    if (this.IsDir) {\n      return path.join(directoryPath, newItemName, '/');\n    }\n    return path.join(directoryPath, newItemName);\n  }\n  get IsDir() {\n    return this.data.currentPath.endsWith('/');\n  }\n}\n","export function HasPrefixSlash(inputPath: string): boolean {\n  if (!inputPath || !inputPath.length) {\n    return false;\n  }\n  const hasPrefix = inputPath.startsWith('/');\n  return hasPrefix;\n}\n\nexport function TrimSlashes(inputPath: string): string {\n  return inputPath.replace(/^\\/+|\\/+$/g, '');\n}\n\nexport function HasTrailingSlash(inputPath: string): boolean {\n  if (!inputPath || !inputPath.length) {\n    return false;\n  }\n  const hasPrefix = inputPath.endsWith('/');\n  return hasPrefix;\n}\n\nexport function EnsurePrefixSlash(inputPath: string): string {\n  const hasPrefix = HasPrefixSlash(inputPath);\n  const pathParsed = hasPrefix ? inputPath : '/' + inputPath;\n  return pathParsed;\n}\n\nexport function EnsureTrailingSlash(inputPath: string): string {\n  const hasTrailing = HasTrailingSlash(inputPath);\n  const pathParsed = hasTrailing ? inputPath : inputPath + '/';\n  return pathParsed;\n}\n\nexport function EnsureAbsoluteDirectory(inputPath: string): string {\n  const pathParsed = EnsureTrailingSlash(EnsurePrefixSlash(inputPath));\n  return pathParsed;\n}\n\nexport function EnsureNoTrailingSlash(inputPath: string): string {\n  const hasTrailing = HasTrailingSlash(inputPath);\n  const pathParsed = hasTrailing ? inputPath.slice(0, -1) : inputPath;\n  return pathParsed;\n}\n\nexport function Add2ToPath(inputPath: string): string {\n  const dotSegments = inputPath.split('.');\n  const extension = dotSegments.pop();\n  const fileName = dotSegments.join('.') + ' (2)' + '.' + extension;\n  return fileName;\n}\n\nexport function Add2ToPathDir(inputPath: string): string {\n  const pathWithoutSlash = EnsureNoTrailingSlash(inputPath);\n  const pathWith2 = pathWithoutSlash + ' (2)';\n  const newDirName =  EnsureTrailingSlash(pathWith2);\n  return newDirName;\n}\n","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CoreTypes } from '../../../core-types';\nimport { LoggerService } from '../../services/logging/logger.service';\nimport path from 'path-browserify';\nimport { Subject, BehaviorSubject, combineLatest } from 'rxjs';\nimport { EnsureTrailingSlash } from '../../utils/path-helpers';\nimport { ActionHandlersService } from '../main-file-manager/action-handlers.service';\nimport { takeUntil, map } from 'rxjs/operators';\nimport { MainActionDefinition } from '../actions-toolbars/MainActionDefinition';\n\nexport interface CopyDialogInterface {\n  files: CoreTypes.ResFile[];\n  isCopy: boolean;\n  actionHandler: ActionHandlersService;\n}\n\n@Component({\n  template: `\n    <base-dialog\n      *ngIf=\"srcDirectory\"\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>{{ OkLabel }} Items</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <h5 class=\"my-5\">Selected Items</h5>\n        <mat-chip-list class=\"mb-5\">\n          <mat-chip *ngFor=\"let file of items\">\n            <mat-icon *ngIf=\"file.type === 'file'\">description</mat-icon>\n            <mat-icon *ngIf=\"file.type !== 'file'\">folder</mat-icon>\n            {{ file.name }}\n          </mat-chip>\n        </mat-chip-list>\n        <h5 class=\"my-5\">Navigate to destination folder</h5>\n        <div class=\"full-width\">\n          <mat-card class=\"m-10 bg-grey\">\n            <app-file-table-mini-folder-browser\n              [folders]=\"folders\"\n              [mainActions]=\"mainActions\"\n              (enterDirectory)=\"onEnterDirectory($event)\"\n              (selectedDirectory)=\"onSelectedDirectory($event)\"\n            >\n            </app-file-table-mini-folder-browser>\n          </mat-card>\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <h5 class=\"p5 m0\" *ngIf=\"!SelectedFolder\">No folder selected</h5>\n        <h5 class=\"p5 m0\" *ngIf=\"SameAsSrcFolder\">\n          Cannot copy to the same folder\n        </h5>\n        <h5 class=\"p5 m0\" *ngIf=\"!DisableCopy\">\n          Will copy Selected Items to:\n          <strong *ngIf=\"!copyToPathRelative\">/</strong>\n          <strong>{{ copyToPathRelative }}</strong>\n        </h5>\n        <btns-cancel-ok\n          [okIcon]=\"OkIcon\"\n          [okLabel]=\"OkLabel\"\n          [okDisabled]=\"DisableCopy\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  `,\n  styles: [\n    `\n      .bg-grey {\n        background-color: #eee;\n      }\n    `\n  ],\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppDialogCopyComponent implements OnDestroy {\n  copyToPathRelative: string;\n  copyToPath: string;\n  srcDirectory: string;\n  items: CoreTypes.ResFile[];\n  actionHandlers: ActionHandlersService;\n\n  mainActions: MainActionDefinition[];\n  folders: CoreTypes.ResFile[];\n\n  OkLabel: string;\n  OkIcon: string;\n\n  destroyed = new Subject();\n  $copyPathChanged = new BehaviorSubject<string>(null);\n\n  constructor(\n    private logger: LoggerService,\n    public dialogRef: MatDialogRef<AppDialogCopyComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: CopyDialogInterface\n  ) {\n    this.init().catch(e => console.error(e));\n  }\n\n  async init() {\n    this.logger.info('initializing dialog:', { data: this.data });\n    this.items = this.data.files;\n    if (this.data.isCopy) {\n      this.OkLabel = 'Copy';\n      this.OkIcon = 'content_copy';\n    } else {\n      this.OkLabel = 'Move';\n      this.OkIcon = 'forward';\n    }\n    this.actionHandlers = await this.data.actionHandler.CloneProvider();\n    this.mainActions = [\n      {\n        label: 'Home',\n        icon: 'home',\n        onClick: async () => {\n          this.logger.info('Back clicked');\n          const rootPath = this.actionHandlers.GetRootPath();\n          await this.actionHandlers.OnNavigateTo(rootPath);\n          this.onSelectedDirectory(rootPath);\n          return this.onSelectedDirectory(rootPath);\n        },\n        $disabled: combineLatest([\n          this.actionHandlers.$CurrentPathIsRoot,\n          this.$copyPathChanged\n        ]).pipe(\n          map(([isRoot, copyTo]) => {\n            return this.DisableCopy;\n          })\n        )\n      },\n      {\n        label: 'Back',\n        icon: 'reply',\n        onClick: async () => {\n          this.logger.info('Back clicked');\n          await this.actionHandlers.OnNavigateToParent();\n          const selectedDirectory = await this.actionHandlers.GetCurrentPath();\n          return this.onSelectedDirectory(selectedDirectory);\n        },\n        $disabled: this.actionHandlers.$CurrentPathIsRoot\n      },\n      {\n        label: 'New Folder',\n        icon: 'create_new_folder',\n        onClick: async () => this.actionHandlers.OnNewFolderInCurrentDirectory()\n      }\n    ];\n    this.actionHandlers.$FilesWithIcons\n      .pipe(takeUntil(this.destroyed))\n      .subscribe(fileItems => {\n        this.folders = fileItems.filter(f => f.type === 'dir');\n      });\n\n    const firstFile = [...this.items].pop();\n    this.setSrcDirectory(firstFile.fullPath);\n    this.setCopyToPath(this.actionHandlers.GetRootPath());\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  get SelectedFolder() {\n    return !!this.copyToPath;\n  }\n  get SameAsSrcFolder() {\n    return this.copyToPath === this.srcDirectory;\n  }\n  get DisableCopy() {\n    return !this.SelectedFolder || this.SameAsSrcFolder;\n  }\n\n  private setCopyToPath(inputPath: string) {\n    const dirPath = EnsureTrailingSlash(inputPath);\n    this.copyToPath = dirPath;\n    this.$copyPathChanged.next(dirPath);\n    this.copyToPathRelative = this.actionHandlers.ConvertToRelativePath(\n      dirPath\n    );\n    this.logger.info('setCopyToPath:', {\n      inputPath,\n      copyToPath: this.copyToPath,\n      copyToPathRelative: this.copyToPathRelative\n    });\n  }\n\n  private setSrcDirectory(inputPath: string) {\n    const dirPath = EnsureTrailingSlash(path.dirname(inputPath));\n    this.srcDirectory = dirPath;\n    this.logger.info('setSrcDirectory:', {\n      inputPath,\n      srcDirectory: this.srcDirectory\n    });\n  }\n\n  onEnterDirectory(directoryPath: string) {\n    this.logger.info('onEnterDirectory:', { directoryPath });\n    this.setCopyToPath(directoryPath);\n    return this.actionHandlers.OnNavigateTo(directoryPath);\n  }\n\n  onSelectedDirectory(directoryPath: string) {\n    this.logger.info('onSelectedDirectory:', { directoryPath });\n    this.setCopyToPath(directoryPath);\n  }\n\n  onSubmit() {\n    this.dialogRef.close(this.copyToPath);\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n}\n","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\nimport { Observable, Subject, combineLatest } from 'rxjs';\nimport {\n  FileManagerConfig,\n  NameUid,\n} from '../../configuration/client-configuration';\nimport { CoreTypes } from '../../../core-types';\nimport { LoggerService } from '../../services/logging/logger.service';\nimport { map, tap } from 'rxjs/operators';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { Tag } from '../tags-control/tags-control.component';\n\nexport interface PermissionsObjectDialogInterface {\n  files: CoreTypes.ResFile[];\n  config: FileManagerConfig;\n}\nexport interface PermissionsObjectDialogResponseInterface {\n  permissionsObj: CoreTypes.FilePermissionsObject;\n  files: CoreTypes.ResFile[];\n}\n\n@Component({\n  template: `\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Set Permissions</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <h5 class=\"my-5\">Selected Items</h5>\n        <mat-chip-list class=\"mb-5\">\n          <mat-chip *ngFor=\"let file of items\">\n            <mat-icon *ngIf=\"file.type === 'file'\">description</mat-icon>\n            <mat-icon *ngIf=\"file.type !== 'file'\">folder</mat-icon>\n            {{ file.name }}\n          </mat-chip>\n        </mat-chip-list>\n\n        <div class=\"full-width\">\n          <h5 class=\"my-5\">Who can see this</h5>\n          <app-control-tag-multiple\n            class=\"full-width -mt-15\"\n            [control]=\"allReadersControl\"\n            [selectChoices$]=\"$allEntities\"\n            [allowCustom]=\"false\"\n          >\n          </app-control-tag-multiple>\n        </div>\n\n        <div *ngIf=\"config?.showWriters\">\n          <h5 class=\"my-5\">Who can edit this</h5>\n          <app-control-tag-multiple\n            class=\"full-width -mt-15\"\n            [control]=\"allWritersControl\"\n            [selectChoices$]=\"$allEntities\"\n            [allowCustom]=\"false\"\n          >\n          </app-control-tag-multiple>\n        </div>\n\n        <div *ngIf=\"config?.showOthers\">\n          <h5 class=\"my-5\">Everyone else can</h5>\n          <mat-form-field class=\"full-width\">\n            <mat-select matInput [formControl]=\"othersControl\">\n              <mat-option\n                *ngFor=\"let permission of othersOptions\"\n                [value]=\"permission\"\n              >\n                {{ permission }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n      </ng-template>\n\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Set Permissions\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  `,\n  styleUrls: ['../shared-utility-styles.scss'],\n  styles: [\n    `\n      .my-5 {\n        margin: 5px 0;\n      }\n      .mb-5 {\n        margin-bottom: 5px;\n      }\n      .-mt-15 {\n        margin-top: -15px;\n      }\n    `,\n  ],\n})\nexport class AppDialogPermissionsSetObjectComponent implements OnDestroy {\n  items: CoreTypes.ResFile[];\n\n  othersControl = new FormControl();\n  othersOptions: CoreTypes.FilePermissionOthers[] = [\n    'read/write',\n    'read',\n    'hidden',\n  ];\n\n  allReadersControl = new FormControl([]);\n  allWritersControl = new FormControl([]);\n\n  $allEntities: Observable<Tag[]>;\n\n  destroyed = new Subject();\n  config: FileManagerConfig;\n\n  constructor(\n    private logger: LoggerService,\n    public dialogRef: MatDialogRef<AppDialogPermissionsSetObjectComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: PermissionsObjectDialogInterface\n  ) {\n    this.logger.info('Initializing setobject dialog', { data });\n    this.items = data.files;\n    this.config = data.config;\n    const users$ = this.config.users;\n    const groups$ = this.config.groups;\n    this.$allEntities = combineLatest([groups$, users$]).pipe(\n      tap((allEntities) => this.logger.info('allEntities', { allEntities })),\n      map((arr) => {\n        let tempEntities: NameUid[] = [\n          {\n            uid: '',\n            name: 'Groups: ',\n            isDisabled: true,\n          },\n        ];\n        tempEntities = tempEntities.concat(arr[0]);\n        tempEntities.push({\n          uid: '',\n          name: 'Users: ',\n          isDisabled: true,\n        });\n        return tempEntities.concat(arr[1]);\n      }),\n      map((arr) =>\n        arr.map(\n          (n) =>\n            ({\n              id: n.uid,\n              name: n.name,\n              isDisabled: !!n.isDisabled,\n            } as Tag)\n        )\n      )\n    );\n    this.$allEntities.subscribe((allEntities) =>\n      this.logger.info('allEntities', { allEntities })\n    );\n    this.initPermissions(data.files);\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  initPermissions(files: CoreTypes.ResFile[]) {\n    const allPermissions = files.map((f) => f.permissions);\n    const othersVal = allPermissions\n      .map((p) => p.others)\n      .reduce((acc, curr) => {\n        if (acc === '-') {\n          return curr;\n        }\n        const stillSame = acc === curr;\n        if (stillSame) {\n          return acc;\n        }\n        return null;\n      }, '-');\n    if (othersVal) {\n      this.othersControl.setValue(othersVal);\n    }\n\n    const uniqueWriters = this.getUniqueTags(\n      allPermissions.map((p) => p.writers)\n    );\n    this.allWritersControl.setValue(uniqueWriters);\n\n    const uniqueReaders = this.getUniqueTags(\n      allPermissions.map((p) => p.readers)\n    );\n    this.allReadersControl.setValue(uniqueReaders);\n\n    this.logger.info('set permissions', {\n      othersVal,\n      uniqueWriters,\n      uniqueReaders,\n    });\n  }\n\n  getUniqueTags(inputEntities: string[][]): Tag[] {\n    const allInputEntities = inputEntities.reduce((acc, curr) => {\n      return acc.concat(curr);\n    }, []);\n    const allEntitiesUnique = Array.from(new Set(allInputEntities));\n    return this.strings2Tags(allEntitiesUnique);\n  }\n\n  strings2Tags(inputArr: string[]): Tag[] {\n    return inputArr.map(\n      (val) =>\n        ({\n          id: uuidv4(),\n          name: val,\n        } as Tag)\n    );\n  }\n  tags2Strings(inputArr: Tag[]): string[] {\n    return inputArr.map((val) => val.name);\n  }\n\n  onSubmit() {\n    const newPermissionsObj: CoreTypes.FilePermissionsObject = {\n      others: this.othersControl.value,\n      readers: this.tags2Strings(this.allReadersControl.value),\n      writers: this.tags2Strings(this.allWritersControl.value),\n    };\n    const response: PermissionsObjectDialogResponseInterface = {\n      permissionsObj: newPermissionsObj,\n      files: this.data.files,\n    };\n    this.logger.info('onSubmit', { newPermissionsObj, response });\n    this.dialogRef.close(response);\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable()\nexport class NotificationService {\n  constructor(private matSnackbar: MatSnackBar) {}\n\n  public notify(msg: string, title?: string) {\n    return this.matSnackbar.open(msg, title, {\n      duration: 4000,\n      horizontalPosition: 'center',\n      verticalPosition: 'bottom',\n    });\n  }\n\n  public notifyCancelled() {\n    return this.notify('Cancelled Operation');\n  }\n}\n","import { Component, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\nimport { BehaviorSubject } from 'rxjs';\nimport { LoggerService } from '../../services/logging/logger.service';\nimport { FormFilesConfiguration } from '../file-upload/form-file-firebase/form-file-firebase.component';\nimport { NotificationService } from '../../services/pure/notification.service';\nimport { FormArrayFileObject } from '../file-upload/form-file-firebase/FormArrayFileObject';\n\nexport interface UploadDialogInterface {\n  currentDirectory: string;\n  firebaseConfig: {};\n  bucketName: string;\n}\n\nexport interface UploadDialogResponseInterface {\n  uploaded: string[];\n}\n\n@Component({\n  template: `\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Upload Files</h2>\n        <h5>To Folder: {{ currentDirectory }}</h5>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <div style=\"width: 100%;\">\n          <form-file-firebase\n            [formControl]=\"filesControl\"\n            [config]=\"config\"\n            (uploadStatusChanged)=\"isUploading.next($event)\"\n          >\n          </form-file-firebase>\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Finish\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n          [okDisabled]=\"isUploading | async\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n    <div #hidden></div>\n  `,\n  styles: [\n    `\n      .dz-image {\n        display: none;\n      }\n      .dz-details > img {\n        display: none;\n      }\n    `\n  ],\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppDialogUploadFilesComponent {\n  filesControl = new FormControl([]);\n\n  currentDirectory = '';\n\n  config: FormFilesConfiguration;\n  isUploading = new BehaviorSubject<boolean>(true);\n\n  constructor(\n    private logger: LoggerService,\n    private notifications: NotificationService,\n    public dialogRef: MatDialogRef<AppDialogUploadFilesComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: UploadDialogInterface\n  ) {\n    this.config = {\n      directory: data.currentDirectory,\n      bucketname: data.bucketName,\n      firebaseConfig: data.firebaseConfig\n    };\n    this.logger.info('initializing:', {\n      currentDirectory: this.currentDirectory,\n      config: this.config,\n      data: data\n    });\n  }\n\n  onSubmit() {\n    const files = this.filesControl.value as FormArrayFileObject[];\n    const response: UploadDialogResponseInterface = {\n      uploaded: files.map(f => f.value.name)\n    };\n    this.dialogRef.close(response);\n  }\n\n  onCancel() {\n    const response: UploadDialogResponseInterface = {\n      uploaded: []\n    };\n    this.dialogRef.close(response);\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  template: `\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Create Folder</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <div>\n          <mat-form-field>\n            <input\n              matInput\n              placeholder=\"New Folder Name\"\n              [formControl]=\"folderName\"\n              (keyup.enter)=\"onSubmit()\"\n            />\n          </mat-form-field>\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Create Folder\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  `,\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppDialogNewFolderComponent {\n  folderName = new FormControl('New folder');\n\n  constructor(public dialogRef: MatDialogRef<AppDialogNewFolderComponent>) {}\n\n  onSubmit() {\n    this.dialogRef.close(this.folderName.value);\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Logger } from './logger.service';\n\n@Injectable()\nexport class ConsoleLoggerService implements Logger {\n  get info() {\n    const boundLogFn = console.log.bind(console, 'ngx-fm:: ');\n    return boundLogFn;\n  }\n\n  get warn() {\n    const boundLogFn = console.warn.bind(console, 'ngx-fm:: ');\n    return boundLogFn;\n  }\n\n  get error() {\n    const boundLogFn = console.error.bind(console, 'ngx-fm:: ');\n    return boundLogFn;\n  }\n}\n","import { CoreTypes } from '../../../core-types';\nimport { EnsureTrailingSlash } from '../../utils/path-helpers';\nimport { ConsoleLoggerService } from '../logging/console-logger.service';\n\nexport class ClientCache {\n  private logger = new ConsoleLoggerService();\n\n  private cachedFolders: {\n    [folderPath: string]: CoreTypes.ResFile[];\n  } = {};\n  private cacheLimit = 20;\n\n  public GetCached(input: string) {\n    const directoryPath = EnsureTrailingSlash(input);\n    return this.cachedFolders[directoryPath] || [];\n  }\n  public SetCached(input: string, newFolderFiles: CoreTypes.ResFile[]) {\n    const directoryPath = EnsureTrailingSlash(input);\n    const oldFolders = this.GetCached(directoryPath);\n    this.logger.info('SetCached()', {\n      from: oldFolders.length,\n      to: newFolderFiles.length\n    });\n    if (this.cachedCount > this.cacheLimit) {\n      this.removeRandomFolderPath();\n    }\n    this.cachedFolders[directoryPath] = newFolderFiles;\n  }\n\n  private get cachedCount() {\n    return Object.keys(this.cachedFolders).length;\n  }\n  private removeRandomFolderPath() {\n    const randomIndex = Math.floor(Math.random() * this.cachedCount);\n    const randomKey = Object.keys(this.cachedFolders)[randomIndex];\n    delete this.cachedFolders[randomKey];\n  }\n}\n","import { CoreTypes } from '../../../core-types';\nimport { ClientCache } from './client-filesystem.cache';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { EnsurePrefixSlash } from '../../utils/path-helpers';\nimport { ConsoleLoggerService } from '../logging/console-logger.service';\n\nexport class ClientFileSystemDataStore {\n  private cache = new ClientCache();\n\n  private _$currentFiles = new BehaviorSubject<CoreTypes.ResFile[]>([]);\n  private _$currentPath = new BehaviorSubject<string>(null);\n  private _$selectedFile = new BehaviorSubject<CoreTypes.ResFile>(null);\n\n  private logger = new ConsoleLoggerService();\n\n  public SetCache(cache: ClientCache) {\n    this.cache = cache;\n  }\n\n  public get $currentFiles(): Observable<CoreTypes.ResFile[]> {\n    return this._$currentFiles;\n  }\n  public get $currentPath(): Observable<string> {\n    return this._$currentPath;\n  }\n  public get $selectedFile(): Observable<CoreTypes.ResFile> {\n    return this._$selectedFile;\n  }\n\n  public CurrentPath() {\n    return this._$currentPath.value;\n  }\n  public CurrentFiles() {\n    return this._$currentFiles.value;\n  }\n  public GetCached(directoryPath: string) {\n    return this.cache.GetCached(directoryPath);\n  }\n  public SetDirectoryFiles(files: CoreTypes.ResFile[], directoryPath: string) {\n    this.cache.SetCached(directoryPath, files);\n  }\n  public SetPath(path: string) {\n    const pathParsed = EnsurePrefixSlash(path);\n    this.logger.info('datastore.SetPath', { path, pathParsed });\n    const cachedFiles = this.cache.GetCached(pathParsed);\n    this._$currentPath.next(pathParsed);\n    this._$currentFiles.next(cachedFiles);\n  }\n  SelectFile(item: CoreTypes.ResFile) {\n    this._$selectedFile.next(item);\n  }\n  exists(fullPath: string, cwd: string): boolean {\n    const filesInDir = this.cache.GetCached(cwd);\n    const exists = filesInDir.find(f => f.fullPath === fullPath);\n    return !!exists;\n  }\n\n  CloneStore(): ClientFileSystemDataStore {\n    const newStore = new ClientFileSystemDataStore();\n    newStore.SetPath(this.CurrentPath());\n    newStore.SetDirectoryFiles(\n      this._$currentFiles.getValue(),\n      this.CurrentPath()\n    );\n    newStore.SetCache(this.cache);\n    return newStore;\n  }\n}\n","export interface FileIcon {\n  /**\n   * Name of the icon, e.g. 'javascript'\n   */\n  name: string;\n\n  /**\n   * Define the file extensions that should use this icon.\n   * E.g. ['js']\n   */\n  fileExtensions?: string[];\n\n  /**\n   * Define if there are some static file names that should apply this icon.\n   * E.g. ['sample.js']\n   */\n  fileNames?: string[];\n\n  /**\n   * Define if there is a light icon available.\n   */\n  light?: boolean;\n\n  /**\n   * Define if there is a high contrast icon available.\n   */\n  highContrast?: boolean;\n\n  /**\n   * Define if the icon should be disabled.\n   */\n  disabled?: boolean;\n}\n\nexport interface FolderTheme {\n  /**\n   * Name of the theme\n   */\n  name: string;\n\n  /**\n   * Define the default icon for folders in a theme.\n   */\n  defaultIcon: DefaultIcon;\n\n  /**\n   * Icon for root folders.\n   */\n  rootFolder?: DefaultIcon;\n\n  /**\n   * Defines folder icons for specific folder names.\n   */\n  icons?: FolderIcon[];\n}\n\nexport interface FolderIcon {\n  /**\n   * Name of the icon, e.g. 'src'\n   */\n  name: string;\n\n  /**\n   * Define the folder names that should apply the icon.\n   * E.g. ['src', 'source']\n   */\n  folderNames: string[];\n\n  /**\n   * Define if there is a light icon available.\n   */\n  light?: boolean;\n\n  /**\n   * Define if there is a high contrast icon available.\n   */\n  highContrast?: boolean;\n\n  /**\n   * Define if the icon should be disabled.\n   */\n  disabled?: boolean;\n}\n\nexport interface DefaultIcon {\n  /**\n   * Name of the icon, e.g. 'src'\n   */\n  name: string;\n\n  /**\n   * Define if there is a light icon available.\n   */\n  light?: boolean;\n\n  /**\n   * Define if there is a high contrast icon available.\n   */\n  highContrast?: boolean;\n}\n\nexport class FileIcons {\n  /**\n   * Define the default icon for files.\n   */\n  defaultIcon: DefaultIcon;\n\n  /**\n   * Defines all folder icons.\n   */\n  icons?: FileIcon[];\n}\n\nexport const fileIcons: FileIcons = {\n  defaultIcon: { name: 'file' },\n  icons: [\n    { name: 'word', fileExtensions: ['doc', 'docx', 'rtf'] },\n    { name: 'pdf', fileExtensions: ['pdf'] },\n    { name: 'table', fileExtensions: ['xlsx', 'xls', 'csv', 'tsv'] },\n    {\n      name: 'html',\n      fileExtensions: ['html', 'htm', 'xhtml', 'html_vm', 'asp']\n    },\n    {\n      name: 'markdown',\n      fileExtensions: ['md', 'markdown', 'rst']\n    },\n    { name: 'yaml', fileExtensions: ['yaml', 'YAML-tmLanguage', 'yml'] },\n    {\n      name: 'xml',\n      fileExtensions: [\n        'xml',\n        'plist',\n        'xsd',\n        'dtd',\n        'xsl',\n        'xslt',\n        'resx',\n        'iml',\n        'xquery',\n        'tmLanguage',\n        'manifest',\n        'project'\n      ],\n      fileNames: ['.htaccess']\n    },\n    {\n      name: 'image',\n      fileExtensions: [\n        'png',\n        'jpeg',\n        'jpg',\n        'gif',\n        'svg',\n        'ico',\n        'tif',\n        'tiff',\n        'psd',\n        'psb',\n        'ami',\n        'apx',\n        'bmp',\n        'bpg',\n        'brk',\n        'cur',\n        'dds',\n        'dng',\n        'exr',\n        'fpx',\n        'gbr',\n        'img',\n        'jbig2',\n        'jb2',\n        'jng',\n        'jxr',\n        'pbm',\n        'pgf',\n        'pic',\n        'raw',\n        'webp',\n        'eps'\n      ]\n    },\n    { name: 'tex', fileExtensions: ['tex', 'cls', 'sty'] },\n    {\n      name: 'powerpoint',\n      fileExtensions: [\n        'pptx',\n        'ppt',\n        'pptm',\n        'potx',\n        'potm',\n        'ppsx',\n        'ppsm',\n        'pps',\n        'ppam',\n        'ppa'\n      ]\n    },\n    {\n      name: 'video',\n      fileExtensions: [\n        'webm',\n        'mkv',\n        'flv',\n        'vob',\n        'ogv',\n        'ogg',\n        'gifv',\n        'avi',\n        'mov',\n        'qt',\n        'wmv',\n        'yuv',\n        'rm',\n        'rmvb',\n        'mp4',\n        'm4v',\n        'mpg',\n        'mp2',\n        'mpeg',\n        'mpe',\n        'mpv',\n        'm2v'\n      ]\n    },\n    { name: 'audio', fileExtensions: ['mp3', 'flac', 'm4a', 'wma', 'aiff'] },\n    { name: 'document', fileExtensions: ['txt'] }\n  ]\n};\n\nconst folderIcons: FolderTheme[] = [\n  {\n    name: 'specific',\n    defaultIcon: { name: 'folder-aws' },\n    rootFolder: { name: 'folder-root' },\n    icons: [\n      { name: 'folder-src', folderNames: ['src', 'source', 'sources'] },\n      { name: 'folder-dist', folderNames: ['dist', 'out', 'build', 'release'] },\n      {\n        name: 'folder-css',\n        folderNames: ['css', 'stylesheet', 'stylesheets', 'style', 'styles']\n      },\n      { name: 'folder-sass', folderNames: ['sass', '_sass', 'scss', '_scss'] },\n      {\n        name: 'folder-images',\n        folderNames: [\n          'images',\n          'image',\n          'img',\n          'icons',\n          'icon',\n          'ico',\n          'screenshot',\n          'screenshots'\n        ]\n      },\n      { name: 'folder-scripts', folderNames: ['script', 'scripts'] },\n      { name: 'folder-node', folderNames: ['node_modules'] },\n      {\n        name: 'folder-javascript',\n        folderNames: ['js', 'javascript', 'javascripts']\n      },\n      { name: 'folder-font', folderNames: ['font', 'fonts'] },\n      { name: 'folder-bower', folderNames: ['bower_components'] },\n      {\n        name: 'folder-test',\n        folderNames: [\n          'test',\n          'tests',\n          'testing',\n          '__tests__',\n          '__snapshots__',\n          '__mocks__',\n          '__test__',\n          'spec',\n          'specs'\n        ]\n      },\n      {\n        name: 'folder-jinja',\n        folderNames: ['jinja', 'jinja2', 'j2'],\n        light: true\n      },\n      { name: 'folder-markdown', folderNames: ['markdown', 'md'] },\n      { name: 'folder-php', folderNames: ['php'] },\n      { name: 'folder-phpmailer', folderNames: ['phpmailer'] },\n      { name: 'folder-sublime', folderNames: ['sublime'] },\n      {\n        name: 'folder-docs',\n        folderNames: ['doc', 'docs', 'documents', 'documentation']\n      },\n      {\n        name: 'folder-git',\n        folderNames: ['.git', 'submodules', '.submodules']\n      },\n      { name: 'folder-github', folderNames: ['.github'] },\n      { name: 'folder-gitlab', folderNames: ['.gitlab'] },\n      { name: 'folder-vscode', folderNames: ['.vscode', '.vscode-test'] },\n      {\n        name: 'folder-views',\n        folderNames: [\n          'view',\n          'views',\n          'screen',\n          'screens',\n          'page',\n          'pages',\n          'html'\n        ]\n      },\n      { name: 'folder-vue', folderNames: ['vue'] },\n      { name: 'folder-expo', folderNames: ['.expo'] },\n      {\n        name: 'folder-config',\n        folderNames: [\n          'config',\n          'configs',\n          'configuration',\n          'configurations',\n          'settings',\n          'META-INF'\n        ]\n      },\n      {\n        name: 'folder-i18n',\n        folderNames: [\n          'i18n',\n          'internationalization',\n          'lang',\n          'language',\n          'languages',\n          'locale',\n          'locales',\n          'localization',\n          'translation',\n          'translations'\n        ]\n      },\n      { name: 'folder-components', folderNames: ['components'] },\n      { name: 'folder-aurelia', folderNames: ['aurelia_project'] },\n      {\n        name: 'folder-resource',\n        folderNames: [\n          'resource',\n          'resources',\n          'res',\n          'asset',\n          'assets',\n          'static'\n        ]\n      },\n      {\n        name: 'folder-lib',\n        folderNames: ['lib', 'libs', 'library', 'libraries']\n      },\n      {\n        name: 'folder-theme',\n        folderNames: ['themes', 'theme', 'color', 'colors', 'design', 'designs']\n      },\n      { name: 'folder-webpack', folderNames: ['webpack'] },\n      { name: 'folder-global', folderNames: ['global'] },\n      { name: 'folder-public', folderNames: ['public', 'wwwroot'] },\n      {\n        name: 'folder-include',\n        folderNames: ['include', 'includes', '_includes']\n      },\n      { name: 'folder-docker', folderNames: ['docker', '.docker'] },\n      { name: 'folder-ngrx-effects', folderNames: ['effects'] },\n      { name: 'folder-ngrx-state', folderNames: ['states', 'state'] },\n      { name: 'folder-ngrx-reducer', folderNames: ['reducers', 'reducer'] },\n      { name: 'folder-ngrx-actions', folderNames: ['actions'] },\n      { name: 'folder-ngrx-entities', folderNames: ['entities'] },\n      { name: 'folder-redux-reducer', folderNames: ['reducers', 'reducer'] },\n      { name: 'folder-redux-actions', folderNames: ['actions'] },\n      { name: 'folder-redux-store', folderNames: ['store'] },\n      { name: 'folder-react-components', folderNames: ['components'] },\n      {\n        name: 'folder-database',\n        folderNames: ['db', 'database', 'sql', 'data', '_data']\n      },\n      { name: 'folder-log', folderNames: ['log', 'logs'] },\n      {\n        name: 'folder-temp',\n        folderNames: [\n          'temp',\n          '.temp',\n          'tmp',\n          '.tmp',\n          'cached',\n          'cache',\n          '.cache'\n        ]\n      },\n      { name: 'folder-aws', folderNames: ['aws', '.aws'] },\n      { name: 'folder-audio', folderNames: ['audio', 'audios', 'music'] },\n      {\n        name: 'folder-video',\n        folderNames: ['video', 'videos', 'movie', 'movies']\n      },\n      { name: 'folder-kubernetes', folderNames: ['kubernetes', 'k8s'] },\n      { name: 'folder-import', folderNames: ['import', 'imports', 'imported'] },\n      { name: 'folder-export', folderNames: ['export', 'exports', 'exported'] },\n      { name: 'folder-wakatime', folderNames: ['wakatime'] },\n      { name: 'folder-circleci', folderNames: ['.circleci'] },\n      { name: 'folder-wordpress', folderNames: ['wp-content'] },\n      { name: 'folder-gradle', folderNames: ['gradle', '.gradle'] },\n      { name: 'folder-coverage', folderNames: ['coverage', '.nyc-output'] },\n      {\n        name: 'folder-class',\n        folderNames: ['class', 'classes', 'model', 'models']\n      },\n      {\n        name: 'folder-other',\n        folderNames: ['other', 'others', 'misc', 'miscellaneous']\n      },\n      { name: 'folder-typescript', folderNames: ['typescript', 'ts'] },\n      { name: 'folder-routes', folderNames: ['routes'] },\n      { name: 'folder-ci', folderNames: ['.ci', 'ci'] },\n      {\n        name: 'folder-benchmark',\n        folderNames: [\n          'benchmark',\n          'benchmarks',\n          'performance',\n          'measure',\n          'measures',\n          'measurement'\n        ]\n      },\n      {\n        name: 'folder-messages',\n        folderNames: [\n          'messages',\n          'forum',\n          'chat',\n          'chats',\n          'conversation',\n          'conversations'\n        ]\n      },\n      { name: 'folder-less', folderNames: ['less'] },\n      { name: 'folder-python', folderNames: ['python', '__pycache__'] },\n      { name: 'folder-debug', folderNames: ['debug', 'debugging'] },\n      { name: 'folder-fastlane', folderNames: ['fastlane'] },\n      {\n        name: 'folder-plugin',\n        folderNames: [\n          'plugin',\n          'plugins',\n          '_plugins',\n          'extension',\n          'extensions',\n          'addon',\n          'addons'\n        ]\n      },\n      {\n        name: 'folder-controller',\n        folderNames: ['controller', 'controllers', 'service', 'services']\n      },\n      { name: 'folder-ansible', folderNames: ['ansible'] },\n      { name: 'folder-server', folderNames: ['server', 'servers', 'backend'] },\n      { name: 'folder-client', folderNames: ['client', 'clients', 'frontend'] },\n      { name: 'folder-tasks', folderNames: ['tasks', 'tickets'] },\n      { name: 'folder-android', folderNames: ['android'] },\n      { name: 'folder-ios', folderNames: ['ios'] },\n      { name: 'folder-upload', folderNames: ['uploads', 'upload'] },\n      { name: 'folder-download', folderNames: ['downloads', 'download'] },\n      { name: 'folder-tools', folderNames: ['tools'] },\n      { name: 'folder-helper', folderNames: ['helpers', 'helper'] }\n    ]\n  },\n  {\n    name: 'classic',\n    defaultIcon: { name: 'folder' },\n    rootFolder: { name: 'folder-root' }\n  },\n  { name: 'none', defaultIcon: { name: '' } }\n];\n\nconst getFileIconName = (input: string) => {\n  if (!input || !input.includes('.')) {\n    return fileIcons.defaultIcon.name;\n  }\n  const filename = input.toLowerCase();\n  const ext = getFileExtension(filename);\n\n  const matchesExt = fileIcons.icons.filter(\n    x => !!x.fileExtensions && !!x.fileExtensions.filter(y => y === ext).length\n  );\n  const matchesFilename = fileIcons.icons.filter(\n    x => !!x.fileNames && !!x.fileNames.filter(y => y === filename).length\n  );\n  if (!!matchesFilename.length) {\n    return matchesFilename[0].name;\n  } else if (!!matchesExt.length) {\n    return matchesExt[0].name;\n  }\n\n  return fileIcons.defaultIcon.name;\n};\n\nconst isFileImage = (filename: string) => getFileIconName(filename) === 'image';\n\nconst getFileExtension = (filename: string) => filename.split('.').pop();\n\nconst getFileName = (filename: string) => {\n  const slashSegments = filename.split('/');\n  const filenameWithExt = slashSegments.pop();\n  const dotSegments = filenameWithExt.split('.');\n  if (dotSegments.length < 2) {\n    return filenameWithExt;\n  }\n  dotSegments.pop();\n  return dotSegments.join('.');\n};\n\nconst getFolderIconName = (filename: string) => {\n  return 'folder-other';\n  filename = filename.toLowerCase();\n  const matches = folderIcons[0].icons.filter(\n    x => !!x.folderNames && !!x.folderNames.filter(y => y === filename).length\n  );\n  if (!!matches.length) {\n    return matches[0].name;\n  }\n\n  return folderIcons[0].defaultIcon.name;\n};\n\nexport const guesser = {\n  isFileImage,\n  getFileExtension,\n  getFileName,\n  getFolderIconName,\n  getFileIconName,\n};\n","import { guesser } from '../../utils/file-icon-guesser';\nimport { Injectable, Inject } from '@angular/core';\nimport { APP_BASE_HREF } from '@angular/common';\nimport path from 'path-browserify';\n\n@Injectable()\nexport class IconUrlResolverService {\n  iconAssetDirectory = '/assets/fileicons/';\n  constructor(@Inject(APP_BASE_HREF) private baseHref: string) {}\n\n  getFileIconUrl(filename: string) {\n    return path.join(\n      this.baseHref,\n      this.iconAssetDirectory,\n      guesser.getFileIconName(filename) + '.svg'\n    );\n  }\n  getFolderIconUrl(filename: string) {\n    return path.join(\n      this.baseHref,\n      this.iconAssetDirectory,\n      guesser.getFolderIconName(filename) + '.svg'\n    );\n  }\n}\n","import { CoreTypes } from '../../core-types';\nimport path from 'path-browserify';\n\n// temporary directory for the client while it refreshes\nexport function MakeClientDirectory(\n  name: string,\n  fullPath: string\n): CoreTypes.ResFile {\n  return {\n    name: name,\n    fullPath: fullPath,\n    rightsFirebase: [],\n    permissions: {} as any,\n    size: null,\n    date: new Date().toISOString(),\n    type: 'dir'\n  };\n}\n\nexport function MakeClientFile(\n  fullPath: string\n): CoreTypes.ResFile {\n  const fileName = path.basename(fullPath);\n  return {\n    name: fileName,\n    fullPath: fullPath,\n    rightsFirebase: [],\n    permissions: {} as any,\n    size: null,\n    date: new Date().toISOString(),\n    type: 'file'\n  };\n}\n","import { map, filter, take } from 'rxjs/operators';\nimport { Injectable, OnDestroy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport * as path from 'path-browserify';\nimport { CoreTypes } from '../../../core-types';\nimport {\n  Add2ToPathDir,\n  EnsureTrailingSlash,\n  EnsureNoTrailingSlash,\n  Add2ToPath\n} from '../../utils/path-helpers';\nimport { LoggerService } from '../logging/logger.service';\nimport { ClientFileSystem } from './client-filesystem.interface';\nimport { ClientFileSystemDataStore } from '../state/client-filesystem.datastore';\nimport { IconUrlResolverService } from './icon-url-resolver.service';\nimport { MakeClientDirectory, MakeClientFile } from '../../utils/file.factory';\n\n// tslint:disable:member-ordering\n@Injectable()\nexport class ClientFileSystemService implements ClientFileSystem, OnDestroy {\n  private store = new ClientFileSystemDataStore();\n\n  get $currentFiles() {\n    return this.store.$currentFiles;\n  }\n  get $currentPath() {\n    return this.store.$currentPath;\n  }\n  get $selectedFile() {\n    return this.store.$selectedFile;\n  }\n\n  private static instanceCount = 0;\n  private instanceCountIncr() {\n    ClientFileSystemService.instanceCount++;\n    this.logger.info('new instance created', { instances: this.instances });\n  }\n  private instanceCountDecr() {\n    ClientFileSystemService.instanceCount--;\n    this.logger.info('instance destroyed', { instances: this.instances });\n  }\n  get instances() {\n    return ClientFileSystemService.instanceCount;\n  }\n\n  constructor(\n    private logger: LoggerService,\n    private iconResolver: IconUrlResolverService\n  ) {\n    this.instanceCountIncr();\n  }\n\n  ngOnDestroy() {\n    this.instanceCountDecr();\n  }\n\n  public SetStore(store: ClientFileSystemDataStore) {\n    this.store = store;\n  }\n\n  async OnList(folderPath: string): Promise<void> {\n    this.logger.info('client.OnList', { folderPath });\n    this.store.SetPath(folderPath);\n  }\n  async OnCreateFolder(\n    newPath: string,\n    disableNoClobber?: boolean\n  ): Promise<void> {\n    const cwd = path.dirname(newPath);\n    const cachedFiles = this.store.GetCached(cwd);\n    const newDirPathNoClobber = this.getNextFreeFoldernameRecursively(\n      newPath,\n      cwd\n    );\n    const folderName = path.basename(newDirPathNoClobber);\n    const newFolder = MakeClientDirectory(folderName, newDirPathNoClobber);\n    cachedFiles.unshift(newFolder);\n    this.store.SetDirectoryFiles(cachedFiles, cwd);\n    this.store.SetPath(cwd);\n  }\n  async OnUploadedFiles(uploadedFiles: string[]) {\n    if (!Array.isArray(uploadedFiles) || !uploadedFiles.length) {\n      return;\n    }\n    const cwd = this.store.CurrentPath();\n    uploadedFiles.map(f => this.recursivelyTryAddFile(cwd, f));\n  }\n  private recursivelyTryAddFile(cwd: string, newFilePath: string) {\n    const filePath = EnsureNoTrailingSlash(newFilePath);\n    const exists = this.store.exists(filePath, cwd);\n    if (!exists) {\n      const newFile = MakeClientFile(newFilePath);\n      const oldFiles = this.store.GetCached(cwd);\n      const newFiles = [...oldFiles, newFile];\n      this.store.SetDirectoryFiles(newFiles, cwd);\n      return;\n    }\n    const filePathWith2 = Add2ToPath(filePath);\n    return this.recursivelyTryAddFile(cwd, filePathWith2);\n  }\n  async OnCopy(singleFileName: string, newPath: string): Promise<void> {}\n  async OnMove(item: string, newPath: string): Promise<void> {\n    return this.removeSingleFromList(item);\n  }\n  async OnRename(item: string, newItemPath: string): Promise<void> {}\n  async OnEdit(item: string, content: string): Promise<void> {}\n  async OnGetcontent(item: string): Promise<void> {}\n  async OnSetPermissions(\n    item: string,\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ): Promise<void> {}\n  async OnMoveMultiple(items: string[], newPath: string): Promise<void> {\n    return this.removeMultiple(items);\n  }\n  async OnCopyMultiple(items: string[], newPath: string): Promise<void> {}\n  async OnSetPermissionsMultiple(\n    items: string[],\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ): Promise<void> {}\n  async OnSetPermissionsObjectMultiple(\n    items: string[],\n    permissionsObj: CoreTypes.FilePermissionsObject,\n    recursive?: boolean\n  ): Promise<void> {\n    const currentFile = await this.$selectedFile.pipe(take(1)).toPromise();\n    if (items.includes(currentFile.fullPath)) {\n      currentFile.permissions = permissionsObj;\n      this.store.SelectFile(currentFile);\n    }\n  }\n  async OnRemove(items: string[]): Promise<void> {\n    return this.removeMultiple(items);\n  }\n  async UpdateList(\n    res: CoreTypes.ResBodyList,\n    directoryPath: string\n  ): Promise<void> {\n    this.store.SetDirectoryFiles(res.result, directoryPath);\n  }\n\n  public getNextFreeFoldernameRecursively(\n    inputDir: string,\n    cwd: string\n  ): string {\n    const folderPath = EnsureTrailingSlash(inputDir);\n    const exists = this.store.exists(folderPath, cwd);\n    if (!exists) {\n      return inputDir;\n    }\n    const nextPath = Add2ToPathDir(folderPath);\n    return this.getNextFreeFoldernameRecursively(nextPath, cwd);\n  }\n\n  private async removeSingleFromList(filePath: string) {\n    const directoryPath = path.dirname(filePath);\n    const currentFiles = this.store.GetCached(filePath);\n    const itemName = this.GetFileNameFromPath(filePath);\n    const cachedFilesWithout = currentFiles.filter(f => f.name !== itemName);\n    this.store.SetDirectoryFiles(cachedFilesWithout, directoryPath);\n  }\n\n  private EnsureNoTrailingSlash(inputPath: string): string {\n    const hasTrailing = inputPath.slice(-1) === '/';\n    const pathParsed = hasTrailing ? inputPath.slice(0, -1) : inputPath;\n    return pathParsed;\n  }\n\n  private GetFileNameFromPath(inputPath: string): string {\n    const safePath = inputPath || '';\n    const parsedPath = this.EnsureNoTrailingSlash(safePath);\n    const basename = parsedPath.split('/').pop();\n    return basename;\n  }\n\n  private async removeMultiple(filePaths: string[]) {\n    const firstPath = filePaths[0];\n    if (!firstPath) {\n      return;\n    }\n    const directoryPath = path.dirname(firstPath);\n    const removeSet = new Set(\n      filePaths.map(filePath => path.basename(filePath))\n    );\n    const currentFiles = this.store.GetCached(directoryPath);\n    const cachedFilesWithout = currentFiles.filter(f => !removeSet.has(f.name));\n    this.store.SetDirectoryFiles(cachedFilesWithout, directoryPath);\n    this.store.SetPath(directoryPath);\n  }\n\n  public get $FilesWithIcons(): Observable<CoreTypes.ResFile[]> {\n    return this.$currentFiles.pipe(\n      map(files => (files ? files : [])),\n      map(files => files.map(file => this.addIconPath(file))),\n      map(files =>\n        files.map(file => {\n          return { ...file };\n        })\n      )\n    );\n  }\n\n  public get $NoParentFolder() {\n    return this.$currentPath.pipe(\n      filter(p => !!p),\n      map(p => p.split('/').length < 2)\n    );\n  }\n\n  public onSelectItem(item: CoreTypes.ResFile): any {\n    this.store.SelectFile(item);\n  }\n\n  public CurrentFiles() {\n    return this.store.CurrentFiles();\n  }\n\n  private addIconPath(file: CoreTypes.ResFile) {\n    if (file.type === 'file') {\n      file['icon'] = this.iconResolver.getFileIconUrl(file.name);\n    } else {\n      file['icon'] = this.iconResolver.getFolderIconUrl(file.name);\n    }\n    return file;\n  }\n\n  CloneProvider(): ClientFileSystemService {\n    const newClone = new ClientFileSystemService(\n      this.logger,\n      this.iconResolver\n    );\n    const newStore = this.store.CloneStore();\n    newClone.SetStore(newStore);\n    return newClone;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FilemanagerStatusService {\n  private _ActiveRequestsMap = new BehaviorSubject<ActiveRequestsMap>({});\n  get ActiveRequestsMap(): Observable<ActiveRequestsMap> {\n    return this._ActiveRequestsMap;\n  }\n\n  public UpdateStatus(key: string, status: RequestStatus, error?: string) {\n    console.log('UpdateStatus()', { key, status, error });\n    let currentValue: ActiveRequestsMap;\n    currentValue = this._ActiveRequestsMap.value;\n    if (!currentValue[key]) {\n      currentValue[key] = {};\n    }\n    currentValue[key].status = status;\n    currentValue[key].error = error;\n    this._ActiveRequestsMap.next(currentValue);\n  }\n}\n\nexport interface ActiveRequestsMap {\n  [key: string]: {\n    status?: RequestStatus;\n    error?: string;\n  };\n}\n\nexport type RequestStatus = 'SENDING' | 'SUCCESS' | 'FAILED';\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { OptimisticFilesystem } from './optimistic-filesystem.interface';\nimport { ClientFileSystemService } from './client-filesystem.service';\nimport { take, takeUntil, tap, auditTime } from 'rxjs/operators';\nimport { LoggerService } from '../logging/logger.service';\nimport path from 'path-browserify';\nimport { NotificationService } from './notification.service';\nimport { Subject } from 'rxjs';\nimport { CoreTypes, FileSystemProvider } from '../../../core-types';\n\nimport { v4 as uuidv4 } from 'uuid';\nimport { FilemanagerStatusService } from '../state/status.service';\n\n// tslint:disable:member-ordering\n\n@Injectable()\nexport class OptimisticFilesystemService\n  implements OptimisticFilesystem, OnDestroy {\n  private serverFilesystem: FileSystemProvider;\n  private clientFilesystem: ClientFileSystemService;\n\n  private static instanceCount = 0;\n  private instanceCountIncr() {\n    OptimisticFilesystemService.instanceCount++;\n    this.logger.info('new instance created', { instances: this.instances });\n  }\n  private instanceCountDecr() {\n    OptimisticFilesystemService.instanceCount--;\n    this.logger.info('instance destroyed', { instances: this.instances });\n  }\n  get instances() {\n    return OptimisticFilesystemService.instanceCount;\n  }\n\n  constructor(\n    private logger: LoggerService,\n    private notifications: NotificationService,\n    private status: FilemanagerStatusService\n  ) {\n    this.instanceCountIncr();\n  }\n\n  ngOnDestroy() {\n    this.instanceCountDecr();\n  }\n\n  get $CurrentPath() {\n    return this.clientFilesystem.$currentPath;\n  }\n\n  get $SelectedFile() {\n    return this.clientFilesystem.$selectedFile;\n  }\n\n  get $FilesWithIcons() {\n    return this.clientFilesystem.$FilesWithIcons;\n  }\n\n  private refreshEmitter = new Subject<string>();\n  private destroyed = new Subject();\n\n  initialize(\n    serverFilesystem: FileSystemProvider,\n    clientFilesystem: ClientFileSystemService\n  ) {\n    this.logger.info('initializing...', { serverFilesystem, clientFilesystem });\n    this.serverFilesystem = serverFilesystem;\n    this.clientFilesystem = clientFilesystem;\n\n    this.destroyed.next();\n    this.refreshEmitter\n      .pipe(\n        takeUntil(this.destroyed),\n        auditTime(800),\n        tap(async currentPath => {\n          return this.clientFilesystem.OnList(currentPath);\n        })\n      )\n      .subscribe(async currentPath => {\n        return this.updateListFromServer(currentPath);\n      });\n  }\n\n  private reportError(error: Error, msg: string, title: string) {\n    this.logger.error('optimistic-filesystem:', { error, title, msg });\n    this.notifications.notify(error.message, title);\n  }\n\n  private async updateListFromServer(directoryPath: string) {\n    try {\n      this.status.UpdateStatus(directoryPath, 'SENDING');\n      this.logger.info('updateListFromServer', { directoryPath });\n      const apiResult = await this.serverFilesystem.List(directoryPath);\n      await this.clientFilesystem.UpdateList(apiResult, directoryPath);\n      const currentDirectory = await this.$CurrentPath\n        .pipe(take(1))\n        .toPromise();\n      if (currentDirectory === directoryPath) {\n        await Promise.all([\n          this.clientFilesystem.OnList(directoryPath),\n          this.selectFirstInCurrentDirectory()\n        ]);\n      }\n      this.status.UpdateStatus(directoryPath, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot get directory list', 'List Error');\n      this.status.UpdateStatus(directoryPath, 'FAILED', error);\n    }\n  }\n\n  async HandleList(directoryPath: string): Promise<any> {\n    this.refreshEmitter.next(directoryPath);\n  }\n  async HandleCreateFolder(\n    newPath: string,\n    disableNoClobber?: boolean\n  ): Promise<any> {\n    try {\n      this.status.UpdateStatus(newPath, 'SENDING');\n      this.logger.info('HandleCreateFolder', { newPath });\n      await Promise.all([\n        this.clientFilesystem.OnCreateFolder(newPath, disableNoClobber),\n        this.serverFilesystem.CreateFolder(newPath, disableNoClobber)\n      ]);\n      this.status.UpdateStatus(newPath, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot create folder', 'Create Folder Error');\n      this.status.UpdateStatus(newPath, 'FAILED', error);\n      await this.clientFilesystem.OnRemove([newPath]);\n    }\n  }\n  async HandleUpload(uploadedFiles: string[]): Promise<any> {\n    this.status.UpdateStatus('HandleUpload', 'SENDING');\n    this.logger.info('HandleUpload', { uploadedFiles });\n    const uploadAllPromise = uploadedFiles.map(f => this.serverFilesystem.Upload(f));\n    const blankPermissionsObj: CoreTypes.FilePermissionsObject = {\n      others: 'read/write',\n      readers: [],\n      writers: []\n    };\n    await Promise.all([\n      this.serverFilesystem.SetPermissionsObjectMultiple(uploadedFiles, blankPermissionsObj, true),\n      this.clientFilesystem.OnUploadedFiles(uploadedFiles),\n      uploadAllPromise\n    ]);\n    this.status.UpdateStatus('HandleUpload', 'SUCCESS');\n  }\n  async HandleCopy(singleFileName: string, newPath: string): Promise<any> {\n    try {\n      this.status.UpdateStatus('HandleCopy' + singleFileName, 'SENDING');\n      this.logger.info('HandleCopy', { singleFileName, newPath });\n      await Promise.all([\n        this.clientFilesystem.OnCopy(singleFileName, newPath),\n        this.serverFilesystem.Copy(singleFileName, newPath)\n      ]);\n      this.status.UpdateStatus('HandleCopy' + singleFileName, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot copy item', 'Copy Error');\n      this.status.UpdateStatus('HandleCopy' + singleFileName, 'FAILED', error);\n      return this.clientFilesystem.OnRemove([newPath]);\n    }\n  }\n  async HandleMove(item: string, newPath: string): Promise<any> {\n    try {\n      this.status.UpdateStatus('HandleMove' + item, 'SENDING');\n      this.logger.info('HandleMove', { item, newPath });\n      await Promise.all([\n        this.clientFilesystem.OnMove(item, newPath),\n        this.serverFilesystem.Move(item, newPath)\n      ]);\n      this.status.UpdateStatus('HandleMove' + item, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot move item', 'Move Error');\n      this.status.UpdateStatus('HandleMove' + item, 'FAILED');\n      return this.clientFilesystem.OnRemove([newPath]);\n    }\n  }\n  async HandleRename(item: string, newItemPath: string): Promise<any> {\n    try {\n      this.status.UpdateStatus('HandleRename' + item, 'SENDING');\n      this.logger.info('HandleRename', { item, newItemPath });\n      await Promise.all([\n        this.clientFilesystem.OnRename(item, newItemPath),\n        this.serverFilesystem.Rename(item, newItemPath)\n      ]);\n      this.status.UpdateStatus('HandleRename' + item, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot rename item', 'Rename Error');\n      this.status.UpdateStatus('HandleRename' + item, 'FAILED');\n      return this.clientFilesystem.OnRename(newItemPath, item);\n    }\n  }\n  async HandleEdit(item: string, content: string): Promise<any> {\n    try {\n      this.status.UpdateStatus('HandleEdit' + item, 'SENDING');\n      this.logger.info('HandleEdit', { item, content });\n      await Promise.all([\n        this.clientFilesystem.OnEdit(item, content),\n        this.serverFilesystem.Edit(item, content)\n      ]);\n      this.status.UpdateStatus('HandleEdit' + item, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot edit item', 'Edit Error');\n      this.status.UpdateStatus('HandleEdit' + item, 'FAILED');\n    }\n  }\n  async HandleGetcontent(item: string): Promise<string> {\n    try {\n      this.status.UpdateStatus('HandleGetcontent' + item, 'SENDING');\n      this.logger.info('HandleGetcontent', { item });\n      await this.clientFilesystem.OnGetcontent(item);\n      const response = await this.serverFilesystem.Getcontent(item);\n      this.status.UpdateStatus('HandleGetcontent' + item, 'SUCCESS');\n      return response.result;\n    } catch (error) {\n      this.reportError(error, 'Cannot get item', 'Get Content Error');\n      this.status.UpdateStatus('HandleGetcontent' + item, 'FAILED');\n    }\n  }\n  async HandleSetPermissions(\n    item: string,\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ): Promise<any> {\n    try {\n      this.status.UpdateStatus('HandleSetPermissions' + item, 'SENDING');\n      this.logger.info('HandleSetPermissions', {\n        item,\n        role,\n        entity,\n        recursive\n      });\n      await Promise.all([\n        this.clientFilesystem.OnSetPermissions(item, role, entity, recursive),\n        this.serverFilesystem.SetPermissions(item, role, entity, recursive)\n      ]);\n      this.status.UpdateStatus('HandleSetPermissions' + item, 'SUCCESS');\n    } catch (error) {\n      this.reportError(\n        error,\n        'Cannot set permissions to item',\n        'Permissions Error'\n      );\n      this.status.UpdateStatus('HandleSetPermissions' + item, 'FAILED');\n    }\n  }\n  async HandleMoveMultiple(items: string[], newPath: string): Promise<any> {\n    try {\n      this.status.UpdateStatus('HandleMoveMultiple' + items, 'SENDING');\n      this.logger.info('HandleMoveMultiple', { items, newPath });\n      await Promise.all([\n        this.clientFilesystem.OnMoveMultiple(items, newPath),\n        this.serverFilesystem.MoveMultiple(items, newPath)\n      ]);\n      this.status.UpdateStatus('HandleMoveMultiple' + items, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot move items', 'Move Error');\n      this.status.UpdateStatus('HandleMoveMultiple' + items, 'FAILED');\n    }\n  }\n  async HandleCopyMultiple(items: string[], newPath: string): Promise<any> {\n    try {\n      this.status.UpdateStatus('HandleCopyMultiple' + items, 'SENDING');\n      this.logger.info('HandleCopyMultiple', { items, newPath });\n      await Promise.all([\n        this.clientFilesystem.OnCopyMultiple(items, newPath),\n        this.serverFilesystem.CopyMultiple(items, newPath)\n      ]);\n      this.status.UpdateStatus('HandleCopyMultiple' + items, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot copy items', 'Copy Error');\n      this.status.UpdateStatus('HandleCopyMultiple' + items, 'FAILED');\n    }\n  }\n  async HandleSetPermissionsMultiple(\n    items: string[],\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ): Promise<any> {\n    try {\n      this.status.UpdateStatus(\n        'HandleSetPermissionsMultiple' + items,\n        'SENDING'\n      );\n      this.logger.info('HandleSetPermissionsMultiple', {\n        items,\n        role,\n        entity,\n        recursive\n      });\n      await Promise.all([\n        this.clientFilesystem.OnSetPermissionsMultiple(\n          items,\n          role,\n          entity,\n          recursive\n        ),\n        this.serverFilesystem.SetPermissionsMultiple(\n          items,\n          role,\n          entity,\n          recursive\n        )\n      ]);\n      this.status.UpdateStatus(\n        'HandleSetPermissionsMultiple' + items,\n        'SUCCESS'\n      );\n    } catch (error) {\n      this.reportError(\n        error,\n        'Cannot set permissions to items',\n        'Permissions Error'\n      );\n      this.status.UpdateStatus(\n        'HandleSetPermissionsMultiple' + items,\n        'FAILED'\n      );\n    }\n  }\n  async HandleSetPermissionsObjectMultiple(\n    items: string[],\n    permissionsObj: CoreTypes.FilePermissionsObject,\n    recursive?: boolean\n  ): Promise<any> {\n    try {\n      this.status.UpdateStatus(\n        'HandleSetPermissionsObjectMultiple' + items,\n        'SENDING'\n      );\n      this.logger.info('HandleSetPermissionsMultiple', {\n        items,\n        permissionsObj,\n        recursive\n      });\n      await Promise.all([\n        this.clientFilesystem.OnSetPermissionsObjectMultiple(\n          items,\n          permissionsObj,\n          recursive\n        ),\n        this.serverFilesystem.SetPermissionsObjectMultiple(\n          items,\n          permissionsObj,\n          recursive\n        )\n      ]);\n      this.status.UpdateStatus(\n        'HandleSetPermissionsObjectMultiple' + items,\n        'SUCCESS'\n      );\n    } catch (error) {\n      this.reportError(\n        error,\n        'Cannot set permissions to items',\n        'Permissions Error'\n      );\n      this.status.UpdateStatus(\n        'HandleSetPermissionsObjectMultiple' + items,\n        'FAILED'\n      );\n    }\n  }\n  async HandleRemove(items: string[]): Promise<any> {\n    try {\n      this.status.UpdateStatus('HandleRemove' + items, 'SENDING');\n      this.logger.info('HandleRemove', { items });\n      await Promise.all([\n        this.clientFilesystem.OnRemove(items),\n        this.serverFilesystem.Remove(items)\n      ]);\n      this.status.UpdateStatus('HandleRemove' + items, 'SUCCESS');\n    } catch (error) {\n      this.reportError(error, 'Cannot remove items', 'Remove Error');\n      this.status.UpdateStatus('HandleRemove' + items, 'FAILED');\n    }\n  }\n\n  async HandleNavigateUp(): Promise<any> {\n    const uuid = uuidv4();\n    try {\n      this.status.UpdateStatus('HandleNavigateUp' + uuid, 'SENDING');\n      this.logger.info('HandleNavigateUp');\n      const currentPath = await this.$CurrentPath.pipe(take(1)).toPromise();\n      const parentPath = path.dirname(currentPath);\n      await this.HandleList(parentPath);\n      this.status.UpdateStatus('HandleNavigateUp' + uuid, 'SUCCESS');\n    } catch (error) {\n      this.reportError(\n        error,\n        'Cannot navigate to parent directory',\n        'Navigate Error'\n      );\n      this.status.UpdateStatus('HandleNavigateUp' + uuid, 'FAILED');\n      throw new Error(error.message);\n    }\n  }\n\n  async onSelectItem(file: CoreTypes.ResFile) {\n    this.clientFilesystem.onSelectItem(file);\n  }\n\n  GetItemByName(filePath: string) {\n    const currentFiles = this.clientFilesystem.CurrentFiles();\n    const match = currentFiles.find(f => f.fullPath === filePath);\n    return match;\n  }\n\n  onSelectItemByName(filePath: string) {\n    const match = this.GetItemByName(filePath);\n    this.clientFilesystem.onSelectItem(match);\n  }\n\n  private async selectFirstInCurrentDirectory() {\n    const currentFiles = this.clientFilesystem.CurrentFiles();\n    const firstSelected = [...currentFiles].shift();\n    this.clientFilesystem.onSelectItem(firstSelected);\n  }\n\n  CloneProvider(): OptimisticFilesystemService {\n    const newClone = new OptimisticFilesystemService(\n      this.logger,\n      this.notifications,\n      this.status\n    );\n    newClone.initialize(\n      this.serverFilesystem.CloneProvider(),\n      this.clientFilesystem.CloneProvider()\n    );\n    return newClone;\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  template: `\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Set Permissions</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <div>\n          <p>Would you like to set permissions for this folder?</p>\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Yes\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  `,\n  styleUrls: ['../shared-utility-styles.scss'],\n})\nexport class AppDialogConfirmationComponent {\n  constructor(public dialogRef: MatDialogRef<AppDialogConfirmationComponent>) {}\n\n  onSubmit() {\n    this.dialogRef.close(true);\n  }\n  onCancel() {\n    this.dialogRef.close(false);\n  }\n}\n","import * as path from 'path-browserify';\nimport { CoreTypes } from '../../../core-types';\nimport { EnsureNoTrailingSlash, EnsureTrailingSlash } from '../../utils/path-helpers';\n\nexport function MakeItem2(itemPath: string): CoreTypes.ResFile {\n  return {\n    name: path.basename(itemPath),\n    fullPath: itemPath,\n    rightsFirebase: [],\n    permissions: {\n      others: 'read/write',\n      readers: ['Example Reader'],\n      writers: ['Example Writer', 'Managers']\n    },\n    size: '111',\n    date: new Date().toISOString(),\n    type: itemPath.endsWith('/') ? 'dir' : 'file'\n  };\n}\n\nexport function MakeFile(itemPath: string): CoreTypes.ResFile {\n  const filePath = EnsureNoTrailingSlash(itemPath);\n  return MakeItem2(filePath);\n}\n\nexport function MakeDir(itemPath: string): CoreTypes.ResFile {\n  const dirPath = EnsureTrailingSlash(itemPath);\n  return MakeItem2(dirPath);\n}\n\nexport const stubFiles = [\n  MakeFile('/image1.png'),\n  MakeFile('/image2.jpeg'),\n  MakeFile('/subfile.txt'),\n  MakeFile('/subfile.mp3'),\n  MakeFile('/subfile.mp4'),\n  MakeFile('/tables.csv'),\n  MakeFile('/time.docx'),\n  MakeDir('/emptyFolder/'),\n  MakeDir('/subfolder/'),\n  MakeFile('/subfolder/file.txt'),\n  MakeFile('/subfolder/file.png'),\n\n  MakeDir('/subfolder/xsub1/'),\n  MakeDir('/subfolder/ysub1/'),\n  MakeDir('/subfolder/2sub1/'),\n  MakeDir('/subfolder/1sub1/'),\n  MakeDir('/subfolder/sub1/'),\n  MakeFile('/subfolder/sub1/file.txt'),\n  MakeDir('/subfolder/sub1/sub1/'),\n  MakeFile('/subfolder/sub1/sub11/file.txt'),\n  MakeDir('/subfolder/sub1/sub11/sub111/'),\n  MakeFile('/subfolder/sub1/sub11/sub111/file.txt'),\n  MakeDir('/subfolder/sub1/sub12/'),\n  MakeFile('/subfolder/sub1/sub12/file.txt'),\n  MakeDir('/subfolder/sub1/sub12/sub112/'),\n  MakeFile('/subfolder/sub1/sub12/sub112/file.txt'),\n\n  MakeDir('/subfolder/sub2/'),\n  MakeFile('/subfolder/sub2/file.txt'),\n  MakeDir('/subfolder/sub2/sub21/'),\n  MakeFile('/subfolder/sub2/sub21/file.txt'),\n  MakeDir('/subfolder/sub2/sub21/sub211/'),\n  MakeFile('/subfolder/sub2/sub21/sub211/file.txt'),\n  MakeDir('/subfolder/sub2/sub22/'),\n  MakeFile('/subfolder/sub2/sub22/file.txt'),\n  MakeDir('/subfolder/sub2/sub22/sub221/'),\n  MakeFile('/subfolder/sub2/sub22/sub221/file.txt')\n];\n","import { Injectable } from '@angular/core';\nimport { take, map } from 'rxjs/operators';\nimport path from 'path-browserify';\nimport { FileSystemProvider, CoreTypes } from '../../../core-types';\nimport { LoggerService } from '../../services/logging/logger.service';\nimport {\n  RenameDialogInterface,\n  AppDialogRenameComponent,\n} from '../dialogs/dialog-rename.component';\nimport {\n  CopyDialogInterface,\n  AppDialogCopyComponent,\n} from '../dialogs/dialog-copy-or-move.component';\nimport {\n  PermissionsObjectDialogInterface,\n  PermissionsObjectDialogResponseInterface,\n  AppDialogPermissionsSetObjectComponent,\n} from '../dialogs/dialog-permissions-setobject.component';\nimport {\n  UploadDialogInterface,\n  UploadDialogResponseInterface,\n  AppDialogUploadFilesComponent,\n} from '../dialogs/dialog-upload.component';\nimport { AppDialogNewFolderComponent } from '../dialogs/dialog-new-folder.component';\nimport { FileManagerConfig } from '../../configuration/client-configuration';\nimport { ClientFileSystemService } from '../../services/pure/client-filesystem.service';\nimport { OptimisticFilesystemService } from '../../services/pure/optimistic-filesystem.service';\nimport { NotificationService } from '../../services/pure/notification.service';\nimport { AppDialogConfirmationComponent } from '../dialogs/dialog-confirmation.component';\nimport { MakeDir } from '../../services/stub/stub-files';\nimport { MatDialog } from '@angular/material/dialog';\n\n@Injectable()\nexport class ActionHandlersService {\n  private fileSystem: FileSystemProvider;\n  private config: FileManagerConfig;\n\n  // Getters\n\n  get $CurrentPath() {\n    return this.optimisticFs.$CurrentPath;\n  }\n\n  public async GetCurrentPath() {\n    const current = await this.$CurrentPath.pipe(take(1)).toPromise();\n    return current || '';\n  }\n\n  public ConvertToRelativePath(directoryPath: string): string {\n    const rootLength = (this.config.virtualRoot || '').length;\n    return (directoryPath || '').slice(rootLength);\n  }\n  public GetRootPath(): string {\n    return this.config.virtualRoot || '';\n  }\n\n  get $CurrentPathIsRoot() {\n    return this.$CurrentPath.pipe(map((p) => p === this.config.virtualRoot));\n  }\n\n  get $SelectedFile() {\n    return this.optimisticFs.$SelectedFile;\n  }\n\n  get $FilesWithIcons() {\n    return this.optimisticFs.$FilesWithIcons;\n  }\n\n  constructor(\n    private clientFilesystem: ClientFileSystemService,\n    private optimisticFs: OptimisticFilesystemService,\n    private dialog: MatDialog,\n    private logger: LoggerService,\n    private notifications: NotificationService\n  ) {}\n\n  public async init(fileSystem: FileSystemProvider, config: FileManagerConfig) {\n    this.config = config;\n    this.fileSystem = fileSystem;\n    this.logger.info('init()', { fileSystem, config });\n    this.optimisticFs.initialize(this.fileSystem, this.clientFilesystem);\n    try {\n      await this.clientFilesystem.OnList(config.initialPath);\n    } catch (error) {\n      this.logger.error('init() OnNewFolderClobber: error', error, {\n        fileSystem,\n        config,\n      });\n    }\n  }\n\n  public async OnRename(file: CoreTypes.ResFile) {\n    const data: RenameDialogInterface = {\n      currentPath: file.fullPath,\n    };\n    this.logger.info('OnRename', { data });\n    const renamedPath = await this.openDialog(AppDialogRenameComponent, data);\n    if (!renamedPath) {\n      this.notifications.notifyCancelled();\n      return;\n    }\n    try {\n      await this.optimisticFs.HandleRename(file.fullPath, renamedPath);\n      await this.RefreshExplorer();\n      setTimeout(() => {\n        this.optimisticFs.onSelectItemByName(renamedPath);\n      }, 300);\n    } catch (error) {\n      this.logger.error('OnRename', { error });\n      this.notifications.notify(error.message, 'Rename Error');\n    }\n  }\n\n  public async OnMoveMultiple(files: CoreTypes.ResFile[]) {\n    const data: CopyDialogInterface = {\n      files: files,\n      isCopy: false,\n      actionHandler: this,\n    };\n    const newFolderPath = await this.openDialog(AppDialogCopyComponent, data);\n    if (!newFolderPath) {\n      this.notifications.notifyCancelled();\n      return;\n    }\n    try {\n      const filePaths = files.map((f) => f.fullPath);\n      await this.optimisticFs.HandleMoveMultiple(filePaths, newFolderPath);\n      await this.RefreshExplorer();\n    } catch (error) {\n      this.logger.error('OnMoveMultiple', { error });\n      this.notifications.notify(error.message, 'Move Error');\n    }\n  }\n\n  public async OnCopyMultiple(files: CoreTypes.ResFile[]) {\n    const data: CopyDialogInterface = {\n      files: files,\n      isCopy: true,\n      actionHandler: this,\n    };\n    const newFolderPath = await this.openDialog(AppDialogCopyComponent, data);\n    this.logger.info('OnCopyMultiple', { files, newFolderPath });\n    if (!newFolderPath) {\n      this.notifications.notifyCancelled();\n      return;\n    }\n    try {\n      const filePaths = files.map((f) => f.fullPath);\n      await this.optimisticFs.HandleCopyMultiple(filePaths, newFolderPath);\n      await this.RefreshExplorer();\n    } catch (error) {\n      this.logger.error('OnCopyMultiple', { error });\n      this.notifications.notify(error.message, 'Copy Error');\n    }\n  }\n\n  private checkCanAddPermissions() {\n    if (!this.config.users) {\n      throw new Error('The \"config.users\" property was not defined');\n    }\n    if (!this.config.groups) {\n      throw new Error('The \"config.groups\" property was not defined');\n    }\n  }\n\n  public async OnSetPermissionsMultiple(files: CoreTypes.ResFile[]) {\n    return this.OnSetPermissionsObjectMultiple(files);\n  }\n\n  public async OnSetPermissionsObjectMultiple(files: CoreTypes.ResFile[]) {\n    const data: PermissionsObjectDialogInterface = {\n      files: files,\n      config: this.config,\n    };\n    try {\n      this.checkCanAddPermissions();\n    } catch (error) {\n      this.notifications.notify(error.message, 'Permissions Error');\n      return;\n    }\n\n    const res: PermissionsObjectDialogResponseInterface = await this.openDialog(\n      AppDialogPermissionsSetObjectComponent,\n      data\n    );\n    if (!res) {\n      this.notifications.notifyCancelled();\n      return;\n    }\n    try {\n      const filePaths = files.map((f) => f.fullPath);\n      await this.optimisticFs.HandleSetPermissionsObjectMultiple(\n        filePaths,\n        res.permissionsObj,\n        true\n      );\n      await this.RefreshExplorer();\n    } catch (error) {\n      this.logger.error('OnSetPermissionsMultiple', { error });\n      this.notifications.notify(error.message, 'Permissions Error');\n    }\n  }\n\n  public async OnDeleteMultiple(files: CoreTypes.ResFile[]) {\n    try {\n      const deletedPaths = files.map((f) => f.fullPath);\n      this.logger.info('deleting files', { files, deletedPaths });\n      await this.optimisticFs.HandleRemove(deletedPaths);\n      await this.RefreshExplorer();\n    } catch (error) {\n      this.logger.error('OnDeleteMultiple', { error });\n      this.notifications.notify(error.message, 'Deletion Error');\n    }\n  }\n\n  // Misc\n\n  public async OnNavigateTo(folderPath: string) {\n    this.logger.info('action-handlers.OnNavigateTo', { folderPath });\n    return this.optimisticFs.HandleList(folderPath);\n  }\n\n  public async OnNavigateToParent() {\n    this.logger.info('OnNavigateToParent');\n    await this.optimisticFs.HandleNavigateUp();\n  }\n\n  public async OnSelectItemByPath(itemPath: string) {\n    this.optimisticFs.onSelectItemByName(itemPath);\n  }\n\n  public async OnUploadFilesToCurrentDirectory() {\n    this.logger.info('onClickUpload');\n    const currentPath = await this.GetCurrentPath();\n    const data: UploadDialogInterface = {\n      currentDirectory: currentPath,\n      firebaseConfig: this.config.firebaseConfig,\n      bucketName: this.config.bucketName,\n    };\n    const res: UploadDialogResponseInterface = await this.openDialog(\n      AppDialogUploadFilesComponent,\n      data\n    );\n    if (!res) {\n      this.logger.info('onClickUpload canceled...');\n      return;\n    }\n    const filesToAdd = res.uploaded.map((f) => path.join(currentPath, f));\n    await this.optimisticFs.HandleUpload(filesToAdd);\n    await this.optimisticFs.HandleList(currentPath);\n  }\n\n  public async OnNewFolderInCurrentDirectory() {\n    this.logger.info('onClickNewFolder');\n    const newDirName = await this.openDialog(AppDialogNewFolderComponent);\n    if (!newDirName) {\n      this.logger.info('onClickNewFolder   no folder created...');\n      return;\n    }\n    await this.OnNewFolder(newDirName);\n    const setPermissions = await this.openDialog(\n      AppDialogConfirmationComponent\n    );\n\n    if (setPermissions) {\n      const currentDirectory = await this.GetCurrentPath();\n      const newDirectoryPath = path.join(currentDirectory, newDirName);\n      const folder = MakeDir(newDirectoryPath);\n      await this.OnSetPermissionsMultiple([folder]);\n    }\n  }\n\n  public async OnNewFolder(newDirName: string) {\n    const currentDirectory = await this.GetCurrentPath();\n    const newDirectoryPath = path.join(currentDirectory, newDirName);\n    await this.optimisticFs.HandleCreateFolder(newDirectoryPath);\n    await this.optimisticFs.HandleList(currentDirectory);\n  }\n\n  public async OnNewFolderClobber(newDirName: string) {\n    if (newDirName === '/') {\n      return;\n    }\n    const currentDirectory = await this.GetCurrentPath();\n    const newDirectoryPath = path.join(currentDirectory, newDirName);\n    await this.optimisticFs.HandleCreateFolder(newDirectoryPath, true);\n    await this.optimisticFs.HandleList(currentDirectory);\n  }\n\n  public async OnDownloadFile(file: CoreTypes.ResFile) {\n    const res = await this.fileSystem.GetSingle(file.fullPath);\n    const newFile = res.result.file;\n    await this.optimisticFs.onSelectItem(newFile);\n    this.initiateDownload(file.name, res.result.url);\n    const currentDirectory = await this.GetCurrentPath();\n    await this.optimisticFs.HandleList(currentDirectory);\n  }\n\n  private initiateDownload(filename: string, url: string) {\n    this.logger.info('initiateDownload...', { url });\n    const link = document.createElement('a');\n    link.download = filename;\n    link.target = '_blank';\n    link.href = url;\n    link.click();\n  }\n\n  public async RefreshExplorer() {\n    const currentPath = await this.GetCurrentPath();\n    return this.optimisticFs.HandleList(currentPath);\n  }\n\n  private async openDialog(comp: any, data?: any) {\n    const ref = this.dialog.open(comp, {\n      width: '600px',\n      hasBackdrop: true,\n      disableClose: false,\n      data: data,\n    });\n    const result = await ref.afterClosed().pipe(take(1)).toPromise();\n    return result;\n  }\n\n  public async CloneProvider(): Promise<ActionHandlersService> {\n    const cloned = new ActionHandlersService(\n      this.clientFilesystem.CloneProvider(),\n      this.optimisticFs.CloneProvider(),\n      this.dialog,\n      this.logger,\n      this.notifications\n    );\n    await cloned.init(this.fileSystem, this.config);\n    return cloned;\n  }\n\n  //Search \n  public ListCurrentPathItems(path: string): Promise<CoreTypes.ResBodyList> {\n    return this.fileSystem.List(path);\n  }\n}\n","export function sortObjectArrayCase(fieldName, direction?: 'asc' | 'desc') {\n  return (a, b) => {\n    const val_a = (a[fieldName] + '').toLowerCase();\n    const val_b = (b[fieldName] + '').toLowerCase();\n    if (val_a < val_b) {\n      return direction === 'desc' ? 1 : -1;\n    }\n    if (val_a > val_b) {\n      return direction === 'desc' ? -1 : 1;\n    }\n    return 0;\n  };\n}\n","import { OnInit, Component, Input, OnDestroy } from '@angular/core';\nimport { take, map, takeUntil, tap } from 'rxjs/operators';\nimport { Subject, BehaviorSubject, Observable, of } from 'rxjs';\nimport { FileSystemProvider, CoreTypes } from '../../../core-types';\nimport { LoggerService } from '../../services/logging/logger.service';\nimport { ActionHandlersService } from './action-handlers.service';\nimport { ClientFileSystemService } from '../../services/pure/client-filesystem.service';\nimport { OptimisticFilesystemService } from '../../services/pure/optimistic-filesystem.service';\nimport { FileManagerConfig } from '../../configuration/client-configuration';\nimport { FilemanagerStatusService } from '../../services/state/status.service';\nimport { sortObjectArrayCase } from '../../utils/sort-helpers';\nimport { FileActionDefinition } from '../file-table/FileActionDefinition';\nimport { BulkActionDefinition } from '../actions-toolbars/BulkActionDefinition';\nimport { MainActionDefinition } from '../actions-toolbars/MainActionDefinition';\nimport { FileDetailActionDefinition } from '../file-details/FileDetailActionDefinition';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-filemanager',\n  templateUrl: 'main-file-manager.component.html',\n  styleUrls: ['main-file-manager.component.scss', '../shared-utility-styles.scss'],\n  providers: [\n    ActionHandlersService,\n    ClientFileSystemService,\n    OptimisticFilesystemService\n  ]\n  \n})\nexport class LibMainFileManagerComponent implements OnInit, OnDestroy {\n  @Input()\n  fileSystem: FileSystemProvider;\n  @Input()\n  config: FileManagerConfig;\n\n  public isFileDetailsOpen = true;\n\n  public $BulkSelected = new BehaviorSubject<CoreTypes.ResFile[]>([]);\n  public $triggerClearSelected = new Subject<void>();\n\n  public initLoaded;\n  public requestMap;\n\n  $CurrentPath: Observable<string>;\n  SelectedFile: CoreTypes.ResFile;\n\n  destroyed = new Subject();\n\n  folderActions: FileActionDefinition[];\n  fileActions: FileActionDefinition[];\n  bulkActions: BulkActionDefinition[];\n  mainActions: MainActionDefinition[];\n\n  fileDetailActions: FileDetailActionDefinition[];\n\n  folders$: Observable<CoreTypes.ResFile[]>;\n  files$: Observable<CoreTypes.ResFile[]>;\n\n  enableSearch: boolean = false;\n  searchForm: FormGroup;\n  searchKeyword: string = '';\n  seachResultDocuments: CoreTypes.ResFile[] = [];\n  seachResultFolders: CoreTypes.ResFile[] = [];\n  documentsShow: number = 10;\n  foldersShow: number = 10;\n  isSearching: boolean = false;\n  showSearchingSpinner: boolean = false;\n\n  constructor(\n    private actionHandlers: ActionHandlersService,\n    private logger: LoggerService,\n    private status: FilemanagerStatusService,\n  ) {\n    this.requestMap = this.status.ActiveRequestsMap;\n    this.searchForm = new FormGroup({\n      searchKeyword: new FormControl('', [Validators.minLength(3)]),\n    });\n  }\n\n  // Getters\n\n  get $status() {\n    return this.status.ActiveRequestsMap.pipe(\n      map(requests => {\n        return Object.keys(requests).map(k => requests[k].status);\n      })\n    );\n  }\n\n  get $hasSending() {\n    return this.$status.pipe(\n      map(s => !!s.find(status => status === 'SENDING'))\n    );\n  }\n\n  get $hasFailed() {\n    return this.$status.pipe(map(s => !!s.find(status => status === 'FAILED')));\n  }\n\n  async ngOnInit() {\n    if (!this.fileSystem) {\n      throw new Error(\n        '<ngx-filemanager> must have input selector [fileSystem] set'\n      );\n    }\n    if (!this.config) {\n      throw new Error(\n        '<ngx-filemanager> must have input selector [config] set'\n      );\n    }\n    if (!this.config.virtualRoot) {\n      console.warn(\n        '<ngx-filemanager> warning config.virtualRoot not set, using bucket root \"/\"'\n      );\n      this.config.virtualRoot = '/';\n    }\n    if (this.config.virtualRoot.endsWith('/')) {\n      this.config.virtualRoot = this.config.virtualRoot.slice(0, -1);\n    }\n    if (!this.config.initialPath) {\n      console.warn(\n        '<ngx-filemanager> warning config.initialPath not set, using virtualRoot: ' +\n          this.config.virtualRoot\n      );\n      this.config.initialPath = this.config.virtualRoot;\n    }\n    await this.actionHandlers.init(this.fileSystem, this.config);\n    await this.actionHandlers.OnNavigateTo(this.config.virtualRoot);\n    this.$CurrentPath = this.actionHandlers.$CurrentPath;\n    this.actionHandlers.$SelectedFile\n      .pipe(\n        takeUntil(this.destroyed),\n        tap(selectedFile => {\n          console.log('this.$SelectedFile.pipe', { selectedFile });\n          this.SelectedFile = null;\n          setTimeout(() => {\n            this.SelectedFile = selectedFile;\n          });\n        })\n      )\n      .subscribe();\n    this.makeConfig();\n    this.initLoaded = true;\n    this.enableSearch = !!this.config.enableSearch || false;\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  makeConfig() {\n    this.fileActions = [\n      {\n        label: 'Download',\n        icon: 'file_download',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnDownloadFile(file)\n      },\n      {\n        label: 'Copy',\n        icon: 'content_copy',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnCopyMultiple([file])\n      },\n      {\n        label: 'Move',\n        icon: 'forward',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnMoveMultiple([file])\n      },\n      {\n        label: 'Rename',\n        icon: 'border_color',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnRename(file)\n      },\n      {\n        label: 'Permissions',\n        icon: 'lock_outline',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnSetPermissionsMultiple([file])\n      },\n      {\n        label: 'Delete',\n        icon: 'delete',\n        color: 'warn',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnDeleteMultiple([file])\n      }\n    ];\n    this.folderActions = [\n      {\n        label: 'Copy',\n        icon: 'content_copy',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnCopyMultiple([file])\n      },\n      {\n        label: 'Move',\n        icon: 'forward',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnMoveMultiple([file])\n      },\n      {\n        label: 'Rename',\n        icon: 'border_color',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnRename(file)\n      },\n      {\n        label: 'Permissions',\n        icon: 'lock_outline',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnSetPermissionsMultiple([file])\n      },\n      {\n        label: 'Delete',\n        icon: 'delete',\n        color: 'warn',\n        onClick: async (file: CoreTypes.ResFile) =>\n          this.actionHandlers.OnDeleteMultiple([file])\n      }\n    ];\n    this.bulkActions = [\n      {\n        label: 'Cancel',\n        icon: 'clear',\n        onClick: async (item: CoreTypes.ResFile[]) => this.ClearBulkSelected()\n      },\n      {\n        label: 'Copy',\n        icon: 'content_copy',\n        onClick: (items: CoreTypes.ResFile[]) =>\n          this.actionHandlers.OnCopyMultiple([...items])\n      },\n      {\n        label: 'Move',\n        icon: 'forward',\n        onClick: (items: CoreTypes.ResFile[]) =>\n          this.actionHandlers.OnMoveMultiple(items)\n      },\n      {\n        label: 'Set Permissions',\n        icon: 'lock_outline',\n        onClick: (items: CoreTypes.ResFile[]) =>\n          this.actionHandlers.OnSetPermissionsObjectMultiple(items),\n        $disabled: of(!this.config.isAdmin)\n      },\n      {\n        label: 'Delete',\n        icon: 'delete',\n        color: 'warn',\n        onClick: (items: CoreTypes.ResFile[]) =>\n          this.actionHandlers.OnDeleteMultiple(items),\n        $disabled: of(!this.config.isAdmin)\n      }\n    ];\n    this.mainActions = [\n      {\n        label: 'Back Folder',\n        icon: 'reply',\n        onClick: async () => this.actionHandlers.OnNavigateToParent(),\n        $disabled: this.actionHandlers.$CurrentPathIsRoot\n      },\n      {\n        label: 'Refresh',\n        icon: 'refresh',\n        onClick: async () => this.actionHandlers.RefreshExplorer()\n      },\n      {\n        label: 'Upload Files',\n        icon: 'file_upload',\n        onClick: async () =>\n          this.actionHandlers.OnUploadFilesToCurrentDirectory()\n      },\n      {\n        label: 'New Folder',\n        icon: 'create_new_folder',\n        onClick: async () => this.actionHandlers.OnNewFolderInCurrentDirectory()\n      }\n    ];\n    this.fileDetailActions = [\n      {\n        label: 'Download',\n        toolTip: 'Click to Download',\n        icon: 'file_download',\n        $disabled: this.actionHandlers.$SelectedFile.pipe(map(f => !f || f.type !== 'file')),\n        onClick: async (file) => this.actionHandlers.OnDownloadFile(file)\n      },\n      {\n        label: 'Rename',\n        toolTip: 'Click to Rename',\n        icon: 'border_color',\n        $disabled: of(!this.config.isAdmin),\n        onClick: async (file) => this.actionHandlers.OnRename(file)\n      },\n      {\n        label: 'Set Permissions',\n        toolTip: 'Click to Set Permissions',\n        icon: 'lock_outline',\n        $disabled: of(!this.config.isAdmin),\n        onClick: async (file) => this.actionHandlers.OnSetPermissionsObjectMultiple([file])\n      },\n      {\n        label: 'Delete',\n        toolTip: 'Click to Delete',\n        icon: 'delete',\n        $disabled: of(!this.config.isAdmin),\n        color: 'warn',\n        onClick: async (file) => this.actionHandlers.OnDeleteMultiple([file])\n      }\n    ];\n    const allFiles$ = new BehaviorSubject<CoreTypes.ResFile[]>([]);\n    this.actionHandlers.$FilesWithIcons.subscribe(files =>\n      allFiles$.next(files)\n    );\n    this.folders$ = allFiles$.pipe(\n      tap(folders => console.log('folders', { folders })),\n      map(items =>\n        items\n          .filter(a => a.type === 'dir')\n          .sort(sortObjectArrayCase('name', 'asc'))\n      )\n    );\n    this.files$ = allFiles$.pipe(\n      tap(files => console.log('files', { files })),\n      map(items =>\n        items\n          .filter(a => a.type === 'file')\n          .sort(sortObjectArrayCase('name', 'asc'))\n      )\n    );\n  }\n\n  async onEnterFolder(itemPath: string) {\n    this.logger.info('onSelectItemDoubleClick!', { itemPath });\n    this.ClearBulkSelected();\n    return this.actionHandlers.OnNavigateTo(itemPath);\n  }\n  async onSelectedFilePath(itemPath: string) {\n    this.logger.info('onSelectItem!', { itemPath });\n    return this.actionHandlers.OnSelectItemByPath(itemPath);\n  }\n\n  public async onDetailsClickDelete(file: CoreTypes.ResFile) {\n    await this.actionHandlers.OnDeleteMultiple([file]);\n  }\n  public async onDetailsClickDownload(file: CoreTypes.ResFile) {\n    await this.actionHandlers.OnDownloadFile(file);\n  }\n  public async onDetailsClickRename(file: CoreTypes.ResFile) {\n    await this.actionHandlers.OnRename(file);\n  }\n  public async onDetailsClickSinglePermissions(file: CoreTypes.ResFile) {\n    await this.actionHandlers.OnSetPermissionsMultiple([file]);\n    await this.actionHandlers.OnSelectItemByPath(file.fullPath);\n  }\n\n  public async onClickCrumb(newPath: string) {\n    this.ClearBulkSelected();\n    this.logger.info('onClickCrumb', { newPath });\n    return this.actionHandlers.OnNavigateTo(newPath);\n  }\n\n  public ClearBulkSelected() {\n    this.$triggerClearSelected.next();\n    this.$BulkSelected.next([]);\n  }\n\n  // Search\n  public async searchAllDocumentsAndFolders(keyword: string) {\n    keyword = keyword.toLocaleLowerCase().trim();\n    if(!this.searchForm.valid){ \n      return\n    };\n    await this.initCleanSearchResults();\n    const startPath = this.actionHandlers.GetRootPath();\n    this.isSearching = true;\n    this.showSearchingSpinner = true;\n    this.iterateCurrentDocumentAndFolders(startPath, keyword, 0);\n  }\n\n  private async iterateCurrentDocumentAndFolders(currentPath: string, keyword: string, level: number) {\n      if(level > 100) {\n        this.isSearching = false;\n      }\n      if(this.showSearchingSpinner) {\n        this.showSearchingSpinner = (this.isSearching&&this.seachResultDocuments.length===0&&this.seachResultFolders.length===0&&level < 3);\n      }\n      if(!this.isSearching) {\n        return\n      }\n\n      const currentVisiableDocuments: CoreTypes.ResFile[] = (await this.actionHandlers.ListCurrentPathItems(currentPath)).result;\n      currentVisiableDocuments.forEach((item: CoreTypes.ResFile)=>{\n        console.log( item, 'item.type', item.type)\n        if(item.type==='file') {\n          if(this.checkSearchKeywordRelative(item.name, keyword)) {\n            this.seachResultDocuments.push(item);\n          }\n        } else if(item.type==='dir') {\n          if(this.checkSearchKeywordRelative(item.name, keyword)) {\n            this.seachResultFolders.push(item);\n          }\n          this.iterateCurrentDocumentAndFolders(item.fullPath, keyword, level+1);\n        }\n      });\n  }\n\n  public checkSearchKeywordRelative(targetName: string, keyword: string) {\n    return targetName.toLowerCase().includes(keyword);\n  }\n\n  public initCleanSearchResults() {\n    this.isSearching = false;\n    this.showSearchingSpinner = false;\n    return new Promise<void>((resolve)=>{\n      setTimeout(() => {\n        this.seachResultDocuments = [];\n        this.seachResultFolders = [];\n        this.foldersShow = 5;\n        this.documentsShow = 5;\n        resolve();\n      }, 10);\n    })\n  }\n\n  public onSelectedSearchItem(item: CoreTypes.ResFile) {\n    //this.initCleanSearchResults();\n    if(item.type === 'file') {\n      let fileParentPath = item.fullPath.substring(0, item.fullPath.lastIndexOf('/'));\n      this.onEnterFolder(fileParentPath);\n    } else if (item.type === 'dir') {\n      this.onEnterFolder(item.fullPath);\n    }\n  }\n}\n","import * as path from 'path-browserify';\nimport { EnsureAbsoluteDirectory } from '../../utils/path-helpers';\n\nexport interface BreadCrumb {\n  label: string;\n  path?: string;\n  icon?: string;\n  virtualPath?: string;\n}\n\nfunction MakeRootCrumb(virtualRoot): BreadCrumb {\n  return {\n    label: '',\n    icon: 'home',\n    path: virtualRoot,\n    virtualPath: '/'\n  };\n}\n\nfunction MakeWarningCrumb(virtualRoot): BreadCrumb {\n  return {\n    label: '',\n    icon: 'mood_bad',\n    path: virtualRoot,\n    virtualPath: virtualRoot\n  };\n}\n\nconst MakeCrumbs = (virtualRoot: string, absolutePath: string) => {\n  const virtualRootParsed = EnsureAbsoluteDirectory(virtualRoot);\n  const absolutePathParsed = EnsureAbsoluteDirectory(absolutePath);\n  if (absolutePathParsed.indexOf(virtualRootParsed) !== 0) {\n    console.warn('Absolute path is not within the virtualRoot', {virtualRoot, absolutePath});\n    return [MakeWarningCrumb(virtualRootParsed)];\n  }\n\n  if (absolutePathParsed === virtualRootParsed) {\n    return [MakeRootCrumb(virtualRootParsed)];\n  }\n\n  const relativeVirtualRoot = absolutePathParsed.slice(\n    virtualRootParsed.length\n  );\n  const crumbs: BreadCrumb[] = [];\n  relativeVirtualRoot\n    .split('/')\n    .filter(p => !!p)\n    .reduce((currentPath, curr) => {\n      const dirname = path.basename(currentPath);\n      const crumb = {\n        label: dirname,\n        path: EnsureAbsoluteDirectory(virtualRootParsed + currentPath),\n        virtualPath: EnsureAbsoluteDirectory(currentPath)\n      };\n      crumbs.unshift(crumb);\n      const parentPath = path.dirname(currentPath);\n      return parentPath;\n    }, relativeVirtualRoot);\n\n  crumbs.unshift(MakeRootCrumb(virtualRootParsed));\n  return crumbs;\n};\n\nexport const crumbFactory = {\n  MakeCrumbs: MakeCrumbs\n};\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\nimport { crumbFactory, BreadCrumb } from './crumb-factory';\nimport { FileManagerConfig } from '../../configuration/client-configuration';\nimport { LoggerService } from '../../services/logging/logger.service';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'bread-crumbs',\n  template: `\n    <div class=\"flex-row align-center\">\n      <div\n        class=\"flex-row align-center\"\n        *ngFor=\"let crumb of crumbs; let first = first; let last = last\"\n      >\n        <div class=\"divider\" *ngIf=\"!first\">\n          >\n        </div>\n        <button\n          #myButton\n          class=\"crumb\"\n          mat-raised-button\n          color=\"secondary\"\n          [disabled]=\"last\"\n          (click)=\"onClickCrumb(crumb); myButton.disabled = true\"\n        >\n          <mat-icon *ngIf=\"crumb.icon\">{{ crumb.icon }}</mat-icon>\n          {{ crumb.label }}\n        </button>\n      </div>\n    </div>\n  `,\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppBreadCrumbsComponent {\n  crumbs: BreadCrumb[];\n\n  @Output()\n  clickedCrumb = new EventEmitter<string>();\n\n  _currentPath: string;\n  @Input()\n  set currentPath(newPath) {\n    this._currentPath = newPath;\n    this.makeCrumbs(newPath);\n  }\n  _config: FileManagerConfig;\n  @Input()\n  set config(newConfig) {\n    this._config = newConfig;\n    this.makeCrumbs(this._currentPath);\n  }\n\n  constructor(private logger: LoggerService) {}\n\n  private makeCrumbs(newPath: string) {\n    if (!this._config) {\n      return;\n    }\n    const virtualRoot = this._config.virtualRoot;\n    this.crumbs = crumbFactory.MakeCrumbs(virtualRoot, newPath || virtualRoot);\n\n    this.logger.info('makeCrumbs', {\n      crumbs: this.crumbs,\n      virtualRoot,\n      newPath\n    });\n  }\n\n  onClickCrumb(crumb: BreadCrumb) {\n    this.logger.info('onClickCrumb', { crumb });\n    this.clickedCrumb.emit(crumb.path);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { BulkActionDefinition } from './BulkActionDefinition';\nimport { CoreTypes } from '../../../core-types';\nimport { Observable } from 'rxjs';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'bulk-actions',\n  template: `\n    <mat-toolbar color=\"primary\">\n      <mat-toolbar-row class=\"top-toolbar\">\n        <span class=\"top-toolbar-label\">\n          Bulk Actions\n        </span>\n      </mat-toolbar-row>\n      <mat-toolbar-row class=\"action-toolbar scroll-x\">\n        <div class=\"flex-row\" *ngIf=\"bulkSelected$ | async as selected\">\n          <div *ngFor=\"let action of bulkActions\">\n            <button\n              class=\"mr-10 flex-row align-center\"\n              mat-raised-button\n              [disabled]=\"action.$disabled | async\"\n              [color]=\"action.color\"\n              (click)=\"executeAction(action, selected)\"\n            >\n              <mat-icon>{{ action.icon }}</mat-icon>\n              {{ action.label }}\n            </button>\n          </div>\n        </div>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  `,\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppBulkActionsComponent {\n  @Input()\n  bulkActions: BulkActionDefinition[];\n  @Input()\n  bulkSelected$: Observable<CoreTypes.ResFile[]>;\n  @Output()\n  clearSelected = new EventEmitter<void>();\n\n  async executeAction(\n    action: BulkActionDefinition,\n    selected: CoreTypes.ResFile[]\n  ) {\n    await action.onClick(selected);\n    this.clearSelected.emit();\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { MainActionDefinition } from './MainActionDefinition';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'main-actions',\n  template: `\n    <mat-toolbar>\n      <mat-toolbar-row class=\"top-toolbar\">\n        <span class=\"top-toolbar-label\">\n          Folder Actions\n        </span>\n      </mat-toolbar-row>\n      <mat-toolbar-row class=\"action-toolbar scroll-x\">\n        <div *ngFor=\"let action of mainActions\">\n          <button\n            class=\"mr-10 has-pointer\"\n            mat-raised-button\n            [color]=\"action.color\"\n            (click)=\"action.onClick(action)\"\n            [disabled]=\"action.$disabled | async\"\n          >\n            <mat-icon inline=\"true\">{{ action.icon }}</mat-icon>\n            {{ action.label }}\n          </button>\n        </div>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  `,\n  styleUrls: ['../shared-utility-styles.scss'],\n  styles: [\n    `\n      .top-toolbar-label {\n        color: #8a8a8a;\n      }\n    `\n  ]\n})\nexport class AppMainActionsComponent {\n  @Input()\n  mainActions: MainActionDefinition[];\n}\n","export async function promiseDelay(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","export interface FileIcon {\n  /**\n   * Name of the icon, e.g. 'javascript'\n   */\n  name: string;\n\n  /**\n   * Define the file extensions that should use this icon.\n   * E.g. ['js']\n   */\n  fileExtensions?: string[];\n\n  /**\n   * Define if there are some static file names that should apply this icon.\n   * E.g. ['sample.js']\n   */\n  fileNames?: string[];\n\n  /**\n   * Define if there is a light icon available.\n   */\n  light?: boolean;\n\n  /**\n   * Define if there is a high contrast icon available.\n   */\n  highContrast?: boolean;\n\n  /**\n   * Define if the icon should be disabled.\n   */\n  disabled?: boolean;\n}\n\nexport interface FolderTheme {\n  /**\n   * Name of the theme\n   */\n  name: string;\n\n  /**\n   * Define the default icon for folders in a theme.\n   */\n  defaultIcon: DefaultIcon;\n\n  /**\n   * Icon for root folders.\n   */\n  rootFolder?: DefaultIcon;\n\n  /**\n   * Defines folder icons for specific folder names.\n   */\n  icons?: FolderIcon[];\n}\n\nexport interface FolderIcon {\n  /**\n   * Name of the icon, e.g. 'src'\n   */\n  name: string;\n\n  /**\n   * Define the folder names that should apply the icon.\n   * E.g. ['src', 'source']\n   */\n  folderNames: string[];\n\n  /**\n   * Define if there is a light icon available.\n   */\n  light?: boolean;\n\n  /**\n   * Define if there is a high contrast icon available.\n   */\n  highContrast?: boolean;\n\n  /**\n   * Define if the icon should be disabled.\n   */\n  disabled?: boolean;\n}\n\nexport interface DefaultIcon {\n  /**\n   * Name of the icon, e.g. 'src'\n   */\n  name: string;\n\n  /**\n   * Define if there is a light icon available.\n   */\n  light?: boolean;\n\n  /**\n   * Define if there is a high contrast icon available.\n   */\n  highContrast?: boolean;\n}\n\nexport class FileIcons {\n  /**\n   * Define the default icon for files.\n   */\n  defaultIcon: DefaultIcon;\n\n  /**\n   * Defines all folder icons.\n   */\n  icons?: FileIcon[];\n}\n\nexport const fileIcons: FileIcons = {\n  defaultIcon: { name: 'file' },\n  icons: [\n    { name: 'word', fileExtensions: ['doc', 'docx', 'rtf'] },\n    { name: 'pdf', fileExtensions: ['pdf'] },\n    { name: 'table', fileExtensions: ['xlsx', 'xls', 'csv', 'tsv'] },\n    {\n      name: 'html',\n      fileExtensions: ['html', 'htm', 'xhtml', 'html_vm', 'asp']\n    },\n    {\n      name: 'markdown',\n      fileExtensions: ['md', 'markdown', 'rst']\n    },\n    { name: 'yaml', fileExtensions: ['yaml', 'YAML-tmLanguage', 'yml'] },\n    {\n      name: 'xml',\n      fileExtensions: [\n        'xml',\n        'plist',\n        'xsd',\n        'dtd',\n        'xsl',\n        'xslt',\n        'resx',\n        'iml',\n        'xquery',\n        'tmLanguage',\n        'manifest',\n        'project'\n      ],\n      fileNames: ['.htaccess']\n    },\n    {\n      name: 'image',\n      fileExtensions: [\n        'png',\n        'jpeg',\n        'jpg',\n        'gif',\n        'svg',\n        'ico',\n        'tif',\n        'tiff',\n        'psd',\n        'psb',\n        'ami',\n        'apx',\n        'bmp',\n        'bpg',\n        'brk',\n        'cur',\n        'dds',\n        'dng',\n        'exr',\n        'fpx',\n        'gbr',\n        'img',\n        'jbig2',\n        'jb2',\n        'jng',\n        'jxr',\n        'pbm',\n        'pgf',\n        'pic',\n        'raw',\n        'webp',\n        'eps'\n      ]\n    },\n    { name: 'tex', fileExtensions: ['tex', 'cls', 'sty'] },\n    {\n      name: 'powerpoint',\n      fileExtensions: [\n        'pptx',\n        'ppt',\n        'pptm',\n        'potx',\n        'potm',\n        'ppsx',\n        'ppsm',\n        'pps',\n        'ppam',\n        'ppa'\n      ]\n    },\n    {\n      name: 'video',\n      fileExtensions: [\n        'webm',\n        'mkv',\n        'flv',\n        'vob',\n        'ogv',\n        'ogg',\n        'gifv',\n        'avi',\n        'mov',\n        'qt',\n        'wmv',\n        'yuv',\n        'rm',\n        'rmvb',\n        'mp4',\n        'm4v',\n        'mpg',\n        'mp2',\n        'mpeg',\n        'mpe',\n        'mpv',\n        'm2v'\n      ]\n    },\n    { name: 'audio', fileExtensions: ['mp3', 'flac', 'm4a', 'wma', 'aiff'] },\n    { name: 'document', fileExtensions: ['txt'] }\n  ]\n};\n\nexport const getFileIconName = (filename: string) => {\n  filename = filename.toLowerCase();\n  if (!filename || !filename.includes('.')) {\n    return fileIcons.defaultIcon.name;\n  }\n  const ext = getFileExtension(filename);\n  const matchesExt = fileIcons.icons.filter(\n    x => !!x.fileExtensions && !!x.fileExtensions.filter(y => y === ext).length\n  );\n  const matchesFilename = fileIcons.icons.filter(\n    x => !!x.fileNames && !!x.fileNames.filter(y => y === filename).length\n  );\n  if (!!matchesFilename.length) {\n    return matchesFilename[0].name;\n  } else if (!!matchesExt.length) {\n    return matchesExt[0].name;\n  }\n\n  return fileIcons.defaultIcon.name;\n};\n\nexport const isFileImage = (filename: string) =>\n  getFileIconName(filename) === 'image';\n\nexport const getFileExtension = (filename: string) => filename.split('.').pop();\n\nexport const getFileName = (filename: string) =>\n  filename.split('.').slice(-2, -1)[0];\n\nexport const getFileIcon = (filename: string) => {\n  return '/assets/fileicons/' + getFileIconName(filename) + '.svg';\n};\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FileSystemProvider, CoreTypes } from '../../../core-types';\nimport { promiseDelay } from '../../utils/delayer';\nimport { LoggerService } from '../../services/logging/logger.service';\nimport { getFileIconName } from '../file-upload/form-file-firebase/file-icon.helper';\nimport { FileManagerConfig } from '../../configuration/client-configuration';\nimport { FileDetailActionDefinition } from './FileDetailActionDefinition';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-filemanager-file-details',\n  template: `\n    <div class=\"details-container ml-5\">\n      <div *ngIf=\"!hasInput\" class=\"none-selected\">\n        <h2>No item selected ...</h2>\n      </div>\n      <div *ngIf=\"hasInput\">\n        <mat-toolbar color=\"primary\">\n          <mat-toolbar-row class=\"title-row\">\n            <h2 *ngIf=\"isFile\">File Details</h2>\n            <h2 *ngIf=\"!isFile\">Directory Details</h2>\n          </mat-toolbar-row>\n          <mat-toolbar-row class=\"action-row\" *ngFor=\"let action of actions\">\n            <button\n              mat-raised-button\n              [matTooltip]=\"action.toolTip\"\n              [color]=\"action.color\"\n              (click)=\"action.onClick(file)\"\n              [disabled]=\"action.$disabled | async\"\n            >\n              <mat-icon>{{ action.icon }}</mat-icon>\n              <span>{{ action.label }}</span>\n            </button>\n          </mat-toolbar-row>\n        </mat-toolbar>\n        <span class=\"flex-row space-between align-top mt-5\">\n          <div>\n            <h5>Name</h5>\n            <h6 class=\"filename\">{{ file.name }}</h6>\n          </div>\n        </span>\n        <h5 class=\"mt-5\">Size</h5>\n        <h6 *ngIf=\"isFile\">{{ file.size | fileSize }}</h6>\n        <h6 *ngIf=\"!isFile&&config.folderSizePath\">{{ getFolderSize(file) | fileSize }}</h6>\n        <h5 class=\"mt-5\">Date</h5>\n        <h6>{{ file.date | date: 'short' }}</h6>\n        <span class=\"flex-row space-between align-top mt-5\">\n          <div>\n            <h5>Permissions</h5>\n            <div class=\"mb-10\">\n              <div *ngIf=\"readers?.length\">\n                <h6>Who can see this</h6>\n                <mat-chip-list>\n                  <mat-chip *ngFor=\"let entity of readers\">\n                    <mat-icon>people</mat-icon>\n                    <span>{{ entity }}</span>\n                  </mat-chip>\n                </mat-chip-list>\n              </div>\n              <div *ngIf=\"config?.showWriters && writers?.length\">\n                <h6>Who can edit this</h6>\n                <mat-chip-list>\n                  <mat-chip *ngFor=\"let entity of writers\">\n                    <mat-icon>people</mat-icon>\n                    <span>{{ entity }}</span>\n                  </mat-chip>\n                </mat-chip-list>\n              </div>\n              <div *ngIf=\"config?.showOthers && others\">\n                <h6>Everyone else can</h6>\n                <mat-chip-list>\n                  <mat-chip>\n                    {{ others }}\n                  </mat-chip>\n                </mat-chip-list>\n              </div>\n            </div>\n          </div>\n        </span>\n        <h5 class=\"mt-5\">Full Path</h5>\n        <h6>{{ file.fullPath }}</h6>\n        <h5 class=\"mt-5\">Type</h5>\n        <h6 *ngIf=\"!isFile\">Directory</h6>\n        <h6 *ngIf=\"isFile\" class=\"capitalize \">\n          {{ getFileType(file.name) }}\n        </h6>\n        <div *ngIf=\"isFile\" class=\"flex-row space-between align-top mt-5\">\n          <div>\n            <h5>Download</h5>\n            <div *ngIf=\"isImage\" class=\"preview\">\n              <i>Image Preview</i>\n              <div\n                class=\"has-pointer\"\n                (click)=\"this.clickedDownload.emit(file)\"\n              >\n                <img *ngIf=\"imageUrl\" [src]=\"imageUrl\" />\n              </div>\n            </div>\n            <div *ngIf=\"!isImage\">\n              <h6 class=\"no-preview-text\">\n                No preview available\n              </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .filename {\n        padding-right: 10px;\n      }\n      .none-selected {\n        color: grey;\n        text-align: center;\n        width: 100%;\n        margin-top: 100px;\n      }\n      .mb-10 {\n        margin-bottom: 10px;\n      }\n      .mt-5 {\n        margin-top: 10px;\n      }\n      .ml-5 {\n        margin-left: 5px;\n      }\n      .no-preview-text {\n        color: grey;\n        font-decoration: italic;\n      }\n      h5 {\n        margin: 0px;\n        color: #616161;\n        font-weight: normal;\n      }\n      h6 {\n        margin: 0px;\n        font-size: 1em;\n        overflow-wrap: break-word;\n        font-weight: bold;\n        margin-bottom: 5px;\n        margin-top: 2px;\n      }\n      img {\n        max-width: 100%;\n        max-height: 400px;\n      }\n      .preview {\n        opacity: 1;\n        transition: opacity 1s;\n      }\n      .title-row {\n        height: 45px;\n        padding-left: 8px;\n      }\n      .action-row {\n        height: 45px;\n        padding-left: 8px;\n      }\n      .action-row:last-child {\n        height: 48px;\n        padding-bottom: 4px;\n      }\n    `\n  ],\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class FileDetailsComponent {\n  imageUrl: string;\n\n  _file: CoreTypes.ResFile;\n  @Input()\n  set file(newFile) {\n    this._file = newFile;\n    if (!newFile) {\n      return;\n    }\n    this.logger.info('file-details: set file', { newFile });\n    this.isFile = this.file.type === 'file';\n    this.isImage = getFileIconName(this.file.name) === 'image';\n    this.setImageUrl().catch(e => console.error(e));\n    this.setPermissions();\n  }\n  get file() {\n    return this._file;\n  }\n  @Input()\n  fileSystem: FileSystemProvider;\n  @Input()\n  config: FileManagerConfig;\n  @Input()\n  actions: FileDetailActionDefinition[];\n  @Output()\n  clickedDownload = new EventEmitter<CoreTypes.ResFile>();\n\n  others: string;\n  writers: CoreTypes.FilePermissionEntity[];\n  readers: CoreTypes.FilePermissionEntity[];\n\n  isFile: boolean;\n  isImage: boolean;\n\n  constructor(private logger: LoggerService) {}\n\n  getFileType(fileName: string) {\n    return getFileIconName(fileName);\n  }\n\n  get hasInput() {\n    return !!this.file;\n  }\n\n  async setImageUrl() {\n    this.imageUrl = null;\n    try {\n      await promiseDelay(300);\n      if (!this.hasInput || !this.isFile) {\n        return;\n      }\n      this.imageUrl = await this.fileSystem.CreateDownloadLink(this.file);\n    } catch (error) {\n      this.logger.error('Error setting ImageUrl', { error }, error);\n    }\n  }\n\n  setPermissions() {\n    if (!this._file || !this._file.permissions) {\n      return;\n    }\n    try {\n      const permissions = this._file.permissions;\n      this.readers = permissions.readers;\n      this.writers = permissions.writers;\n      this.others = permissions.others;\n    } catch (error) {\n      this.logger.error('file-details: setPermissions', {\n        error,\n        file: this._file\n      });\n    }\n  }\n\n  getFolderSize(folder: CoreTypes.ResFile) {\n    if(folder.metaData) {\n      let path = this.config.folderSizePath\n      return path.split('.').reduce(function(p,prop) { return p[prop] }, folder);\n    }\n    return folder.size\n  }\n}\n","export function ConvertToTitleCase(input: string): string {\n  const capitalsWithSpaces = input.replace(/([A-Z])/g, ' $1').trim();\n  const underscoresToSpaces = capitalsWithSpaces.replace(/_/g, ' ');\n  return underscoresToSpaces\n    .split(' ')\n    .map(p => p.charAt(0).toUpperCase() + p.substr(1).toLowerCase())\n    .join(' ');\n}\n","import { ControlValueAccessor, FormControl, Validator } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { OnDestroy, OnInit, Input, Directive } from '@angular/core';\nimport { takeUntil, auditTime } from 'rxjs/operators';\nimport { ConvertToTitleCase } from '../../../utils/case-helper';\nimport {v4 as uuidv4 } from 'uuid';\n\n@Directive()\nexport class FormBase<T>\n  implements OnInit, OnDestroy, ControlValueAccessor, Validator {\n  internalControl: FormControl = new FormControl();\n  autoCompleteObscureName: string;\n  _destroyed = new Subject();\n\n  disabled = false;\n  validationError: string;\n\n  _value: T;\n\n  @Input()\n  formControlName: string;\n  @Input()\n  placeholder: string;\n\n  constructor() {\n    // Garrentee that init and destroy are called\n    // even if ngOnInit() or ngOnDestroy() are overriden\n    const originalOnDestroy = this.ngOnDestroy;\n    this.ngOnDestroy = () => {\n      this.destroy();\n      originalOnDestroy.apply(this);\n    };\n    const originalOnInit = this.ngOnInit;\n    this.ngOnInit = () => {\n      this.init();\n      originalOnInit.apply(this);\n    };\n  }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {}\n\n  init() {\n    this._destroyed.next();\n    this.autoCompleteObscureName = uuidv4();\n    this.internalControl.valueChanges\n      .pipe(takeUntil(this._destroyed))\n      .pipe(auditTime(100))\n      .subscribe(() => {\n        this._value = this.internalControl.value;\n        this.onChange(this._value);\n        this.onTouched();\n        // console.log('form-base-class: valueChanges', {val: this._value});\n      });\n\n    if (!this.placeholder) {\n      const nameParsed = ConvertToTitleCase(this.formControlName + '');\n      this.placeholder = nameParsed;\n    }\n  }\n\n  destroy() {\n    this._destroyed.next();\n  }\n\n  get value() {\n    return this._value;\n  }\n\n  set value(val) {\n    this._value = val;\n    this.internalControl.setValue(val);\n  }\n\n  writeValue(value: any): void {\n    this.value = value;\n  }\n\n  propagateOnChange: any = () => {};\n  registerOnChange(fn: any): void {\n    this.propagateOnChange = fn;\n  }\n\n  onTouched: any = () => {};\n  registerOnTouched(fn: any): void {\n    this.onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    setTimeout(() => {\n      if (isDisabled) {\n        this.internalControl.disable();\n      } else {\n        this.internalControl.enable();\n      }\n    });\n  }\n\n  public validate(c: FormControl) {\n    const errors = c.errors;\n    const value = c.value;\n    // console.log('form-base-class: validate()', { errors, value });\n    this.internalControl.setValidators(c.validator);\n    return !this.validationError\n      ? null\n      : {\n          validationError: {\n            valid: false\n          }\n        };\n  }\n\n  private onChange(inputValue) {\n    this.validationError = this.CheckValueIsValid();\n    if (this.validationError) {\n      this.propagateOnChange(this.value);\n    } else {\n      this.propagateOnChange(inputValue);\n    }\n  }\n\n  CheckValueIsValid(): string {\n    return null;\n  }\n}\n","import {\n  Component,\n  forwardRef,\n  OnInit,\n  OnDestroy,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { FormArrayFileObject } from './FormArrayFileObject';\nimport * as firebase from 'firebase/app';\nimport 'firebase/storage';\nimport { Subject, timer } from 'rxjs';\nimport { take, takeUntil } from 'rxjs/operators';\nimport { getFileIcon, isFileImage } from './file-icon.helper';\nimport { FormBase } from './form-base-class';\nimport { TrimSlashes } from '../../../utils/path-helpers';\nimport { NotificationService } from '../../../services/pure/notification.service';\n\nexport interface FormFilesConfiguration {\n  directory: string;\n  bucketname?: string;\n  firebaseConfig: {};\n  maxFiles?: number;\n  imageCompressionQuality?: number;\n  imageCompressionMaxSize?: number;\n  acceptedFiles?: 'image/*,application/*' | 'image/*';\n}\n\n@Component({\n  // tslint:disable-next-line: component-selector\n  selector: 'form-file-firebase',\n  template: `\n    <div>\n      <label class=\"custom-file-upload\">\n        <input\n          *ngIf=\"isMultiple\"\n          class=\"hidden\"\n          type=\"file\"\n          multiple\n          [disabled]=\"disabled || maxReached\"\n          (change)=\"onFileChange($event)\"\n        />\n        <input\n          *ngIf=\"!isMultiple\"\n          class=\"hidden\"\n          type=\"file\"\n          [disabled]=\"disabled || maxReached\"\n          (change)=\"onFileChange($event)\"\n        />\n        {{ placeholder }}\n        <div class=\"max-files\" *ngIf=\"maxReached && !disabled\">\n          Max Uploaded - Limit of {{ config.maxFiles }} file(s) reached. Remove\n          files to change uploads\n        </div>\n      </label>\n      <app-uploaded-files-list\n        [disabled]=\"disabled\"\n        [uploadedFiles]=\"this.value\"\n        (clickRemoveTag)=\"this.clickRemoveTag($event)\"\n      >\n      </app-uploaded-files-list>\n    </div>\n  `,\n  styles: [\n    `\n      .custom-file-upload {\n        border: 4px dashed #ccc;\n        display: inline-block;\n        padding: 35px 0px;\n        cursor: pointer;\n        width: calc(100% - 8px);\n        text-align: center;\n        font-size: 1.5em;\n        color: #777;\n      }\n      .hidden {\n        display: none;\n      }\n      .max-files {\n        font-size: 0.9em;\n        color: orange;\n        font-style: italic;\n      }\n    `\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FormFileFirebaseComponent),\n      multi: true\n    },\n    {\n      provide: NG_VALIDATORS,\n      useExisting: forwardRef(() => FormFileFirebaseComponent),\n      multi: true\n    }\n  ]\n})\nexport class FormFileFirebaseComponent extends FormBase<FormArrayFileObject[]>\n  implements OnInit, OnDestroy {\n  @Input()\n  placeholder = 'upload here';\n  @Input()\n  config: FormFilesConfiguration = {} as any;\n  // tslint:disable-next-line: no-output-on-prefix\n  @Output()\n  uploadStatusChanged = new EventEmitter<boolean>();\n\n  destroyed = new Subject();\n  storage: firebase.default.storage.Storage;\n\n  constructor(public ns: NotificationService) {\n    super();\n  }\n\n  ngOnInit() {\n    let app;\n    if (firebase.default.apps.length) {\n      app = firebase.default.apps[0];\n    } else {\n      app = firebase.default.initializeApp(this.config.firebaseConfig);\n    }\n    this.storage = app.storage(this.currentBucketName());\n    timer(0, 1000)\n      .pipe(takeUntil(this.destroyed))\n      .subscribe(() => {\n        this.checkAllUploadsAreDone();\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  checkAllUploadsAreDone() {\n    const allFiles = this.value;\n    const completeArray = allFiles\n      .filter(f => !!f)\n      .filter(f => !!f.value)\n      .filter(f => !!f.value.props)\n      .map(f => f.value.props.completed);\n\n    const haveAllFilesComplete = completeArray.reduce(\n      (previous, currentComplete) => previous && currentComplete,\n      true\n    );\n    const isStillUploading = !haveAllFilesComplete;\n    this.uploadStatusChanged.emit(isStillUploading);\n  }\n\n  get isMultiple() {\n    return this.config && this.config.maxFiles !== 1;\n  }\n\n  get maxReached() {\n    return (\n      this.config &&\n      this.config.maxFiles &&\n      this.value &&\n      this.config.maxFiles === this.value.length\n    );\n  }\n\n  private currentBucketName() {\n    return (\n      this.config.bucketname ||\n      // tslint:disable-next-line: no-string-literal\n      this.config.firebaseConfig['storageBucket']\n    );\n  }\n\n  async clickRemoveTag(fileObject: FormArrayFileObject) {\n    this.ensureValueIsArray();\n    this.value = this.value.filter(f => f.id !== fileObject.id);\n    if (fileObject.bucket_path) {\n      try {\n        await this.storage.refFromURL(fileObject.bucket_path).delete();\n        console.log('form-files: clickRemoveTag() file deleted from storage', {\n          fileObject\n        });\n      } catch (error) {\n        console.log(\n          'form-files: clickRemoveTag() problem deleting file',\n          error\n        );\n      }\n    }\n  }\n\n  onFileChange(event) {\n    if (event.target.files && event.target.files.length) {\n      const filesList = event.target.files;\n      const fileArray = Array.from(filesList);\n      fileArray.map((file: File) => this.beginUploadTask(file));\n    }\n  }\n\n  async beginUploadTask(file: File) {\n    const bucketPath = 'gs://' + this.currentBucketName();\n    const uniqueFileName = file.name;\n    const originalFileName = file.name;\n    const dir = this.config.directory;\n    const dirPath = `${TrimSlashes(bucketPath)}/${TrimSlashes(dir)}`;\n    const fullPath = `${TrimSlashes(dirPath)}/${uniqueFileName}`;\n    console.log('beginUploadTask()', { fileData: file, bucketPath, fullPath });\n    let fileParsed;\n    if (file.type === 'image/*') {\n      fileParsed = await this.parseAndCompress(file);\n    } else {\n      fileParsed = file;\n    }\n    await this.addFile(uniqueFileName, originalFileName, fullPath);\n    const uploadTask = this.storage.refFromURL(fullPath).put(fileParsed);\n    uploadTask.on(firebase.default.storage.TaskEvent.STATE_CHANGED, {\n      next: snap => this.onNext(snap, fullPath),\n      error: error => this.onError(error),\n      complete: () =>\n        this.onComplete(fullPath, uniqueFileName, originalFileName)\n    });\n\n    this.destroyed.pipe(take(1)).subscribe(() => {\n      uploadTask.cancel();\n    });\n  }\n\n  async parseAndCompress(file) {\n    if (\n      !this.config.imageCompressionMaxSize &&\n      !this.config.imageCompressionQuality\n    ) {\n      return file;\n    }\n    const maxWidth = this.config.imageCompressionMaxSize || 1800;\n    const maxQuality = this.config.imageCompressionQuality || 0.6;\n    const dataURL = await blobToDataURL(file);\n    const newDataURL = await downscaleImage(\n      dataURL,\n      maxWidth,\n      maxQuality,\n      'image/jpeg'\n    );\n    const oldKb = this.getFileSizeKiloBytes(dataURL);\n    const newKb = this.getFileSizeKiloBytes(newDataURL);\n    const fileNew = dataURItoBlob(newDataURL) as File;\n    console.log(`app-tags-files.component: optimized image...\n  --> old=${oldKb} kb\n  --> new=${newKb} kb`);\n    return fileNew;\n  }\n\n  getFileSizeKiloBytes(dataURL) {\n    const head = 'data:image/*;base64,';\n    const fileSizeBytes = Math.round(((dataURL.length - head.length) * 3) / 4);\n    const fileSizeKiloBytes = (fileSizeBytes / 1024).toFixed(0);\n    return fileSizeKiloBytes;\n  }\n\n  async onNext(\n    snapshot: firebase.default.storage.UploadTaskSnapshot,\n    fullPath: string\n  ) {\n    this.ensureValueIsArray();\n    switch (snapshot.state) {\n      case firebase.default.storage.TaskState.RUNNING: // or 'running'\n        const file = this.value.find(f => f.bucket_path === fullPath);\n        const progress =\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        console.log('Upload is running', {\n          file,\n          fullPath,\n          progress,\n          snapshot\n        });\n        file.value.props.progress = progress;\n        break;\n    }\n  }\n\n  onError(error) {\n    this.ns.notify('storage/unauthorized', 'Error Uploading');\n    console.error('onError(error)', { error }, error);\n  }\n\n  async onComplete(fullPath, uniqueFileName, originalFileName) {\n    console.log('onComplete()', {});\n    const ref = this.storage.refFromURL(fullPath);\n    const url = await ref.getDownloadURL();\n    const isImage = isFileImage(originalFileName);\n\n    this.ensureValueIsArray();\n    const file = this.value.find(f => f.id === uniqueFileName);\n    file.id = url;\n    if (isImage) {\n      file.imageurl = url;\n    }\n    file.value.props.completed = true;\n    this.writeValue(this.value);\n  }\n\n  addFile(uniqueFileName: string, originalFileName: string, fullPath: string) {\n    const fileIcon = getFileIcon(originalFileName);\n    const newFile: FormArrayFileObject = {\n      id: uniqueFileName,\n      fileicon: fileIcon,\n      imageurl: null,\n      bucket_path: fullPath,\n      value: {\n        name: originalFileName,\n        props: {\n          thumb: null,\n          fileicon: fileIcon,\n          progress: 0,\n          completed: false\n        }\n      }\n    };\n    this.ensureValueIsArray();\n    this.value.push(newFile);\n  }\n\n  ensureValueIsArray() {\n    if (!Array.isArray(this.value)) {\n      this.writeValue([]);\n    }\n  }\n}\n\n// **blob to dataURL**\nasync function blobToDataURL(blob): Promise<string> {\n  const reader = new FileReader();\n  return new Promise<string>((resolve, reject) => {\n    reader.onload = function (e: any) {\n      resolve(e.target.result as string);\n    };\n    reader.onerror = function (error: any) {\n      reject(error);\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\n// Dataurl to blob\nexport function dataURItoBlob(dataURI) {\n  // convert base64 to raw binary data held in a string\n  // doesn't handle URLEncoded DataURIs - see SO answer #6850276 for code that does this\n  const byteString = atob(dataURI.split(',')[1]);\n\n  // separate out the mime component\n  const mimeString = dataURI\n    .split(',')[0]\n    .split(':')[1]\n    .split(';')[0];\n\n  // write the bytes of the string to an ArrayBuffer\n  const ab = new ArrayBuffer(byteString.length);\n\n  // create a view into the buffer\n  const ia = new Uint8Array(ab);\n\n  // set the bytes of the buffer to the correct values\n  for (let i = 0; i < byteString.length; i++) {\n    ia[i] = byteString.charCodeAt(i);\n  }\n\n  // write the ArrayBuffer to a blob, and you're done\n  const blob = new Blob([ab], { type: mimeString });\n  return blob;\n}\n\n// Take an image URL, downscale it to the given width, and return a new image URL.\nasync function downscaleImage(\n  dataUrl: string,\n  newWidth: number,\n  imageQuality: number,\n  imageType: string,\n  debug?: boolean\n) {\n  // Provide default values\n  imageType = imageType || 'image/jpeg';\n  imageQuality = imageQuality || 0.7;\n\n  // Create a temporary image so that we can compute the height of the downscaled image.\n  const image = new Image();\n  image.src = dataUrl;\n  await new Promise(resolve => {\n    image.onload = () => {\n      resolve('');\n    };\n  });\n  const oldWidth = image.width;\n  const oldHeight = image.height;\n  const newHeight = Math.floor((oldHeight / oldWidth) * newWidth);\n\n  // Create a temporary canvas to draw the downscaled image on.\n  const canvas = document.createElement('canvas');\n  canvas.width = newWidth;\n  canvas.height = newHeight;\n\n  // Draw the downscaled image on the canvas and return the new data URL.\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, 0, 0, newWidth, newHeight);\n  const newDataUrl = canvas.toDataURL(imageType, imageQuality);\n  if (debug) {\n    console.log('quill.imageCompressor: downscaling image...', {\n      args: {\n        dataUrl,\n        newWidth,\n        imageType,\n        imageQuality\n      },\n      image,\n      oldWidth,\n      oldHeight,\n      newHeight,\n      canvas,\n      ctx,\n      newDataUrl\n    });\n  }\n  return newDataUrl;\n}\n","import { EventEmitter, Component, Input, Output } from '@angular/core';\nimport { FormArrayFileObject } from './FormArrayFileObject';\n\n@Component({\n  selector: 'app-uploaded-files-list',\n  template: `\n    <p *ngIf=\"uploadedFiles?.length\">Uploaded files:</p>\n    <div>\n      <div *ngFor=\"let file of uploadedFiles\">\n        <div class=\"full-width flex-h\">\n          <mat-icon id=\"i-done\" *ngIf=\"!disabled && isDone(file)\"\n            >done</mat-icon\n          >\n          <img class=\"file-icon\" image [src]=\"file['fileicon']\" />\n          <a class=\"full-width flex-h has-ellipsis\" [href]=\"file.id\" target=\"_blank\">\n            <span class=\"has-ellipsis\">{{ file.value.name }}</span>\n            <mat-icon class=\"i-open\">open_in_new</mat-icon>\n            <img\n              *ngIf=\"file['imageurl']\"\n              class=\"file-thumb\"\n              image\n              [src]=\"file['imageurl']\"\n            />\n          </a>\n          <mat-icon\n            *ngIf=\"!disabled\"\n            class=\"has-pointer\"\n            (click)=\"this.clickRemoveTag.emit(file)\"\n            >cancel</mat-icon\n          >\n        </div>\n        <div class=\"full-width\">\n          <mat-progress-bar\n            class=\"progress\"\n            mode=\"determinate\"\n            [value]=\"getProgress(file)\"\n          ></mat-progress-bar>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .full-width {\n        width: 100%;\n      }\n      .flex-h {\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n      }\n      .has-pointer {\n        cursor: pointer;\n      }\n      .file-link {\n        display: flex;\n        align-items: center;\n      }\n      .file-thumb,\n      .file-icon {\n        margin: 0px 10px;\n        height: 30px;\n      }\n      .file-thumb {\n        background-color: #ddd;\n      }\n      .i-open {\n        font-size: 1em;\n      }\n      .has-ellipsis {\n        text-overflow: ellipsis;\n        overflow: hidden;\n        white-space: nowrap;\n      }\n    `\n  ]\n})\nexport class FormFileUploadedFileListComponent {\n  @Input()\n  disabled: boolean;\n  @Input()\n  uploadedFiles: FormArrayFileObject[] = [];\n  @Output()\n  clickRemoveTag = new EventEmitter<FormArrayFileObject>();\n\n  getProgress(file: FormArrayFileObject) {\n    const isDone = this.isDone(file);\n    if (isDone) {\n      return 100;\n    }\n    if (file && file.value && file.value.props) {\n      const p = file.value.props.progress;\n      return p * 0.95; // 95% until download completed\n    }\n    return 100;\n  }\n\n  isDone(file: FormArrayFileObject): boolean {\n    if (file && file.value && file.value.props) {\n      const c = file.value.props.completed;\n      return c;\n    }\n    return false;\n  }\n}\n","import { FormFileFirebaseComponent } from './form-file-firebase/form-file-firebase.component';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { FormFileUploadedFileListComponent } from './form-file-firebase/form-file-uploader-list.component';\nimport { CommonModule } from '@angular/common';\n\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatProgressBarModule,\n    MatInputModule,\n    MatIconModule\n  ],\n  exports: [FormFileFirebaseComponent],\n  declarations: [FormFileFirebaseComponent, FormFileUploadedFileListComponent],\n  providers: []\n})\nexport class FormFileFirebaseModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { take } from 'rxjs/operators';\nimport { LoggerService } from '../logging/logger.service';\n\nexport class FileSystemRequestBuilder {\n  private options = {\n    headers: {}\n  };\n  private body: {};\n  constructor(\n    private http: HttpClient,\n    private url: string,\n    private logger: LoggerService,\n    private LOG_ID: string\n  ) { }\n  AddBody(body) {\n    this.body = {\n      ...this.body,\n      ...body\n    };\n    return this;\n  }\n  PatchBody<T>(body: Partial<T>) {\n    const partBody = body as any;\n    this.body = {\n      ...this.body,\n      ...partBody\n    };\n    return this;\n  }\n  PatchHeaders(headers: {}) {\n    this.options.headers = {\n      ...this.options.headers,\n      ...headers\n    };\n    return this;\n  }\n  MakeJson() {\n    this.options['responseType'] = 'json';\n    this.options.headers['Content-Type'] = 'application/json';\n  }\n  private makeRequestKey() {\n    const key = this.url + JSON.stringify(this.body || {});\n    return key;\n  }\n\n  async POST() {\n    const key = this.makeRequestKey();\n    try {\n      this.logger.info(this.LOG_ID + ' FileSystemRequestBuilder', {\n        url: this.url,\n        body: this.body,\n        options: this.options\n      });\n\n      this.options.headers = {\n        Authorization: window.localStorage.getItem('token')\n      }\n\n      const response = await this.http\n        .post(this.url, this.body, this.options)\n        .pipe(take(1))\n        .toPromise();\n      return response as any;\n    } catch (apiErrorResponse) {\n      console.error('API Post Error', { apiErrorResponse });\n      if (apiErrorResponse.error && apiErrorResponse.error.errorDetail) {\n        const detail = apiErrorResponse.error.errorDetail;\n        throw new Error('API Response: ' + detail);\n      }\n      throw new Error(\n        'API request failed, status:' + apiErrorResponse.statusText\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CoreTypes, FileSystemProvider } from '../../../core-types';\nimport { LoggerService } from '../logging/logger.service';\nimport { FileSystemRequestBuilder } from './server-filesystem-request';\nimport { EnsureNoTrailingSlash } from '../../utils/path-helpers';\n\n@Injectable()\nexport class ServerFilesystemProviderService implements FileSystemProvider {\n  private bucketname: string;\n  private apiEndpoint: string;\n  private isAdmin: boolean;\n\n  private LOG_ID = Math.random().toString(32).slice(2, 10);\n\n  constructor(private http: HttpClient, private logger: LoggerService) { }\n\n  private makeAPIRequest(action: CoreTypes.FileManagerAction) {\n    this.logger.info('makeAPIRequest', { action, context: this });\n\n    return new FileSystemRequestBuilder(\n      this.http,\n      this.apiEndpoint,\n      this.logger,\n      this.LOG_ID\n    ).AddBody({\n      action: action,\n      bucketname: this.bucketname,\n      isAdmin: this.isAdmin,\n    });\n  }\n\n  Initialize(config: {\n    bucketname: string;\n    apiEndpoint: string;\n    isAdmin: boolean;\n  }) {\n    this.bucketname = config.bucketname;\n    this.isAdmin = config.isAdmin;\n    this.apiEndpoint = EnsureNoTrailingSlash(config.apiEndpoint);\n  }\n\n  List(path: string): Promise<CoreTypes.ResBodyList> {\n    return this.makeAPIRequest('list')\n      .PatchBody<CoreTypes.ReqBodyList>({\n        path: path,\n      }).PatchHeaders({\n        Authorization: window.localStorage.getItem('token')\n      })\n      .POST();\n  }\n\n  CreateFolder(\n    newPath: string,\n    disableNoClobber?: boolean\n  ): Promise<CoreTypes.ResBodyCreateFolder> {\n    return this.makeAPIRequest('createFolder')\n      .PatchBody<CoreTypes.ReqBodyCreateFolder>({\n        newPath: newPath,\n      })\n      .POST();\n  }\n\n  Copy(\n    singleFileName: string,\n    newPath: string\n  ): Promise<CoreTypes.ResBodyCopy> {\n    return this.makeAPIRequest('copy')\n      .PatchBody<CoreTypes.ReqBodyCopy>({\n        singleFileName: singleFileName,\n        newPath: newPath,\n      })\n      .POST();\n  }\n\n  Move(item: string, newPath: string): Promise<CoreTypes.ResBodyMove> {\n    return this.makeAPIRequest('move')\n      .PatchBody<CoreTypes.ReqBodyMove>({\n        items: [item],\n        newPath: newPath,\n      })\n      .POST();\n  }\n\n  Rename(item: string, newItemPath: string): Promise<CoreTypes.ResBodyRename> {\n    return this.makeAPIRequest('rename')\n      .PatchBody<CoreTypes.ReqBodyRename>({\n        item: item,\n        newItemPath: newItemPath,\n      })\n      .POST();\n  }\n\n  Edit(item: string, content: string): Promise<CoreTypes.ResBodyEdit> {\n    return this.makeAPIRequest('edit')\n      .PatchBody<CoreTypes.ReqBodyEdit>({\n        item: item,\n        content: content,\n      })\n      .POST();\n  }\n\n  Getcontent(item: string): Promise<CoreTypes.ResBodyGetContent> {\n    return this.makeAPIRequest('getContent')\n      .PatchBody<CoreTypes.ReqBodyEdit>({\n        item: item,\n      })\n      .POST();\n  }\n\n  SetPermissions(\n    item: string,\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ): Promise<CoreTypes.ResBodySetPermissions> {\n    return this.makeAPIRequest('changePermissions')\n      .PatchBody<CoreTypes.ReqBodySetPermissions>({\n        items: [item],\n        role: role,\n        entity: entity,\n        recursive: recursive,\n      })\n      .POST();\n  }\n\n  MoveMultiple(\n    items: string[],\n    newPath: string\n  ): Promise<CoreTypes.ResBodyMove> {\n    return this.makeAPIRequest('move')\n      .PatchBody<CoreTypes.ReqBodyMove>({\n        items: items,\n        newPath: newPath,\n      })\n      .POST();\n  }\n\n  CopyMultiple(\n    items: string[],\n    newPath: string\n  ): Promise<CoreTypes.ResBodyCopy> {\n    return this.makeAPIRequest('copy')\n      .PatchBody<CoreTypes.ReqBodyCopy>({\n        items: items,\n        newPath: newPath,\n      })\n      .POST();\n  }\n\n  SetPermissionsMultiple(\n    items: string[],\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ): Promise<CoreTypes.ResBodySetPermissions> {\n    return this.makeAPIRequest('changePermissions')\n      .PatchBody<CoreTypes.ReqBodySetPermissions>({\n        items: items,\n        role: role,\n        entity: entity,\n        recursive: recursive,\n      })\n      .POST();\n  }\n\n  SetPermissionsObjectMultiple(\n    items: string[],\n    permissionsObj: CoreTypes.FilePermissionsObject,\n    recursive?: boolean\n  ): Promise<CoreTypes.ResBodySetPermissions> {\n    return this.makeAPIRequest('changePermissionsObject')\n      .PatchBody<CoreTypes.ReqBodySetPermissionsObject>({\n        items: items,\n        permissionsObj: permissionsObj,\n        recursive: recursive,\n      })\n      .POST();\n  }\n\n  Remove(items: string[]): Promise<CoreTypes.ResBodyRemove> {\n    return this.makeAPIRequest('remove')\n      .PatchBody<CoreTypes.ReqBodyRemove>({\n        items: items,\n      })\n      .POST();\n  }\n\n  GetSingle(item: string): Promise<CoreTypes.ResBodyGetSingle> {\n    return this.makeAPIRequest('getSingle')\n      .PatchBody<CoreTypes.ReqBodyGetSingle>({\n        item: item,\n      })\n      .POST();\n  }\n\n  GetUploadApiUrl(currentPath: string): string {\n    const uploadApiEndpoint =\n      this.apiEndpoint +\n      '/upload?' +\n      'bucketname=' +\n      this.bucketname +\n      '&directoryPath=' +\n      currentPath;\n    return uploadApiEndpoint;\n  }\n\n  CloneProvider(): FileSystemProvider {\n    return new ServerFilesystemProviderService(this.http, this.logger);\n  }\n\n  async CreateDownloadLink(file: CoreTypes.ResFile): Promise<string> {\n    try {\n      const response: CoreTypes.ResBodyGetSingle = await this.makeAPIRequest(\n        'getSingle'\n      )\n        .PatchBody<CoreTypes.ReqBodyGetSingle>({\n          item: file.fullPath,\n        })\n        .POST();\n      const url = response.result.url;\n      return url;\n    } catch (error) {\n      throw new Error(error.message);\n    }\n  }\n\n  async Upload(item: string): Promise<boolean> {\n    return null;\n  }\n}\n","import { Component, Input } from '@angular/core';\n\n// tslint:disable:component-selector\n@Component({\n  selector: 'base-dialog',\n  template: `\n    <div class=\"dialog-wrapper\">\n      <div class=\"header sans-serif flex-col align-center\">\n        <ng-container *ngTemplateOutlet=\"header\"> </ng-container>\n      </div>\n      <div class=\"body sans-serif flex-col align-center\">\n        <ng-container *ngTemplateOutlet=\"body\"> </ng-container>\n      </div>\n      <div class=\"actions sans-serif flex-col align-center\">\n        <ng-container *ngTemplateOutlet=\"actions\"> </ng-container>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n      .dialog-wrapper {\n        max-height: 80vh;\n        min-width: 400px;\n      }\n      .header {\n      }\n      .body {\n        overflow-y: auto;\n        max-height: 60vh;\n      }\n      .actions {\n        max-height: 200px;\n      }\n    `\n  ],\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class BaseDialogComponent {\n  @Input()\n  header: any;\n  @Input()\n  body: any;\n  @Input()\n  actions: any;\n}\n","import { Component, Inject, OnDestroy } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms';\nimport { Observable, Subject } from 'rxjs';\nimport {\n  FileManagerConfig,\n  NameUid\n} from '../../configuration/client-configuration';\nimport { CoreTypes } from '../../../core-types';\nimport { LoggerService } from '../../services/logging/logger.service';\n\nexport interface PermissionsDialogInterface {\n  files: CoreTypes.ResFile[];\n  config: FileManagerConfig;\n}\nexport interface PermissionsDialogResponseInterface {\n  role: CoreTypes.PermissionsRole;\n  entity: CoreTypes.FilePermissionEntity;\n  files: CoreTypes.ResFile[];\n}\n\n@Component({\n  template: `\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>Set Permissions</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <h5>Selected Items</h5>\n        <ol>\n          <li *ngFor=\"let file of items\">\n            {{ file.name }}\n          </li>\n        </ol>\n\n        <mat-form-field class=\"full-width\">\n          <mat-select\n            matInput\n            [formControl]=\"entityTypeControl\"\n            placeholder=\"Type\"\n          >\n            <mat-option\n              *ngFor=\"let option of entityTypeOptions\"\n              [value]=\"option\"\n            >\n              {{ option }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" *ngIf=\"HasSelectedUser\">\n          <mat-select\n            matInput\n            [formControl]=\"entityControl\"\n            [placeholder]=\"EntityControlLabel\"\n          >\n            <mat-option *ngFor=\"let entity of $users | async\" [value]=\"entity\">\n              {{ entity.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\" *ngIf=\"!HasSelectedUser\">\n          <mat-select\n            matInput\n            [formControl]=\"entityControl\"\n            [placeholder]=\"EntityControlLabel\"\n          >\n            <mat-option *ngFor=\"let entity of $groups | async\" [value]=\"entity\">\n              {{ entity.name }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field class=\"full-width\">\n          <mat-select\n            matInput\n            [formControl]=\"roleControl\"\n            placeholder=\"Permissions\"\n          >\n            <mat-option *ngFor=\"let option of roleOptions\" [value]=\"option\">\n              {{ option }}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Set Permissions\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  `,\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppDialogPermissionsSetComponent implements OnDestroy {\n  items: CoreTypes.ResFile[];\n  roleControl = new FormControl('READER');\n  roleOptions: CoreTypes.PermissionsRole[] = ['OWNER', 'WRITER', 'READER'];\n\n  entityTypeControl = new FormControl('group');\n  entityTypeOptions: ('user' | 'group')[] = ['user', 'group'];\n  entityControl = new FormControl();\n\n  $users: Observable<NameUid[]>;\n  $groups: Observable<NameUid[]>;\n\n  destroyed = new Subject();\n\n  constructor(\n    private logger: LoggerService,\n    public dialogRef: MatDialogRef<AppDialogPermissionsSetComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: PermissionsDialogInterface\n  ) {\n    this.items = data.files;\n    const config = data.config;\n    this.$users = config.users;\n    this.$groups = config.groups;\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  get EntityControlLabel() {\n    return this.entityTypeControl.value === 'user' ? 'User' : 'Group';\n  }\n\n  get HasSelectedUser() {\n    return this.entityTypeControl.value === 'user';\n  }\n\n  onSubmit() {\n    const choosenValue = this.entityControl.value as NameUid;\n    const entity = choosenValue.uid;\n    const response: PermissionsDialogResponseInterface = {\n      role: this.roleControl.value,\n      entity: entity,\n      files: this.data.files\n    };\n    this.logger.info('onSubmit', { entity, choosenValue, response });\n    this.dialogRef.close(response);\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n}\n","import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  template: `\n    <base-dialog\n      [header]=\"headerTemplate\"\n      [body]=\"bodyTemplate\"\n      [actions]=\"actionsTemplate\"\n    >\n      <ng-template #headerTemplate>\n        <h2>My Details</h2>\n      </ng-template>\n      <ng-template #bodyTemplate>\n        <div>\n          The following details were\n        </div>\n      </ng-template>\n      <ng-template #actionsTemplate>\n        <btns-cancel-ok\n          okIcon=\"done\"\n          okLabel=\"Create Folder\"\n          (clickedCancel)=\"onCancel()\"\n          (clickedOk)=\"onSubmit()\"\n        >\n        </btns-cancel-ok>\n      </ng-template>\n    </base-dialog>\n  `,\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppDialogMyDetailsComponent {\n\n  constructor(public dialogRef: MatDialogRef<AppDialogMyDetailsComponent>) {}\n\n  onSubmit() {\n    this.dialogRef.close();\n  }\n  onCancel() {\n    this.dialogRef.close();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'btns-cancel-ok',\n  template: `\n    <div class=\"full-width text-center\">\n      <button mat-raised-button (click)=\"clickedCancel.emit()\">\n        <mat-icon>clear</mat-icon>\n        Cancel\n      </button>\n      <button\n        mat-raised-button\n        color=\"primary\"\n        (click)=\"clickedOk.emit()\"\n        [disabled]=\"okDisabled\"\n      >\n        <mat-icon>{{ okIcon }}</mat-icon>\n        {{ okLabel }}\n      </button>\n    </div>\n  `,\n  styles: [\n    `\n      button {\n        margin: 5px;\n      }\n    `\n  ]\n})\nexport class AppBtnsCancelOkComponent {\n  @Input()\n  okDisabled: boolean;\n  @Input()\n  okIcon: string;\n  @Input()\n  okLabel: string;\n  @Output()\n  clickedOk = new EventEmitter<void>();\n  @Output()\n  clickedCancel = new EventEmitter<void>();\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\nimport { CoreTypes } from '../../../core-types';\nimport { Subject } from 'rxjs';\nimport { LoggerService } from '../../services/logging/logger.service';\nimport { ActionHandlersService } from '../main-file-manager/action-handlers.service';\nimport { ClientFileSystemService } from '../../services/pure/client-filesystem.service';\nimport { OptimisticFilesystemService } from '../../services/pure/optimistic-filesystem.service';\nimport { takeUntil } from 'rxjs/operators';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MainActionDefinition } from '../actions-toolbars/MainActionDefinition';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'app-file-table-mini-folder-browser',\n  template: `\n    <div class=\"full-width mini-browser-height\">\n      <actions-mini-browser [mainActions]=\"mainActions\"> </actions-mini-browser>\n      <h4 class=\"p5 m0 color-grey\">Folders</h4>\n      <div class=\"flex-col bg-white\">\n        <card-folder\n          *ngFor=\"let folder of folders\"\n          [folder]=\"folder\"\n          [selectedItem]=\"selectedItem\"\n          (enterFolder)=\"onEnterFolder($event)\"\n        >\n        </card-folder>\n      </div>\n    </div>\n  `,\n  providers: [\n    ActionHandlersService,\n    ClientFileSystemService,\n    OptimisticFilesystemService\n  ],\n  styles: [\n    `\n      .mini-browser-height {\n        min-height: 400px;\n        max-height: 80vh;\n      }\n      .bg-white {\n        background-color: #fff;\n      }\n    `\n  ],\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppFileTableMiniFolderBrowserComponent\n  implements OnInit, OnDestroy {\n  selectedItem = new SelectionModel<string>(false);\n\n  @Input()\n  folders: CoreTypes.ResFile[];\n  @Input()\n  mainActions: MainActionDefinition[];\n  @Output()\n  enterDirectory = new EventEmitter<string>();\n  @Output()\n  selectedDirectory = new EventEmitter<string>();\n\n  destroyed = new Subject();\n\n  constructor(private logger: LoggerService) {}\n\n  async ngOnInit() {\n    this.selectedItem.changed.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      const selectedDir = this.selectedItem.selected[0];\n      this.selectedDirectory.emit(selectedDir);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  async onEnterFolder(folderPath: string) {\n    this.logger.info('onEnterFolder', { folderPath });\n    this.enterDirectory.emit(folderPath);\n    this.selectedDirectory.emit(folderPath);\n  }\n}\n","import { Component, Input } from '@angular/core';\nimport { MainActionDefinition } from '../actions-toolbars/MainActionDefinition';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'actions-mini-browser',\n  template: `\n    <mat-toolbar color=\"primary\" *ngIf=\"this.mainActions\">\n      <mat-toolbar-row class=\"top-toolbar\">\n        <span class=\"top-toolbar-label\">\n          Actions\n        </span>\n      </mat-toolbar-row>\n      <mat-toolbar-row class=\"action-toolbar scroll-x\">\n        <div *ngFor=\"let action of mainActions\">\n          <button\n            class=\"action has-pointer\"\n            mat-raised-button\n            [color]=\"action.color\"\n            (click)=\"action.onClick(action)\"\n            [disabled]=\"action.$disabled | async\"\n          >\n            <mat-icon inline=\"true\">{{ action.icon }}</mat-icon>\n            {{ action.label }}\n          </button>\n        </div>\n      </mat-toolbar-row>\n    </mat-toolbar>\n  `,\n  styles: [\n    `\n      button.action {\n        margin-right: 10px;\n      }\n    `\n  ],\n  styleUrls: ['../shared-utility-styles.scss']\n})\nexport class AppActionsMiniBrowserComponent {\n  @Input()\n  mainActions: MainActionDefinition[];\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n/*\n * Convert bytes into largest possible unit.\n * Takes an precision argument that defaults to 2.\n * Usage:\n *   bytes | fileSize:precision\n * Example:\n *   {{ 1024 |  fileSize}}\n *   formats to: 1 KB\n*/\n@Pipe({name: 'fileSize'})\nexport class FileSizePipe implements PipeTransform {\n\n  private units = [\n    'bytes',\n    'KB',\n    'MB',\n    'GB',\n    'TB',\n    'PB'\n  ];\n\n  transform(bytesInput, precision: number = 0 ): string {\n    let bytes = +bytesInput;\n    if (!isFinite( bytes )) {\n      return '?';\n    }\n    let unit = 0;\n    while ( bytes >= 1024 ) {\n      bytes /= 1024;\n      unit ++;\n    }\n\n    return bytes.toFixed( + precision ) + ' ' + this.units[ unit ];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FileSizePipe } from './file-size.pipe';\nimport { CommonModule } from '@angular/common';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [FileSizePipe],\n  declarations: [FileSizePipe],\n  providers: [],\n})\nexport class FileSizeModule { }\n","import { Component, Input } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { CoreTypes } from '../../../core-types';\nimport { FileActionDefinition } from './FileActionDefinition';\n\n@Component({\n  selector: 'card-file',\n  template: `\n    <div\n      class=\"flex-row p5 space-between bg-grey-hover rounded\"\n      matTooltip=\"Click For Details\"\n      [class.bg-grey-light]=\"isChecked\"\n      [class.bg-grey-dark]=\"isSelected\"\n      (click)=\"onSelect()\"\n    >\n      <div class=\"flex-row align-center\">\n        <mat-icon\n          *ngIf=\"!isChecked\"\n          class=\"color-white color-grey-hover\"\n          (click)=\"onCheck()\"\n          >check_box_outline_blank</mat-icon\n        >\n        <mat-icon\n          *ngIf=\"isChecked\"\n          class=\"color-black color-grey-hover\"\n          (click)=\"onUnCheck()\"\n          >check_box_outline</mat-icon\n        >\n        <img class=\"mr-10\" width=\"30\" [src]=\"file['icon']\" />\n        <div>\n          <h5 class=\"m0 mb-5 has-ellipsis\">{{ file.name }}</h5>\n          <small class=\"m0 color-grey\">{{ file.size | fileSize }}</small>\n        </div>\n      </div>\n      <div class=\"flex-row align-center\">\n        <button\n          mat-icon-button\n          [matMenuTriggerFor]=\"menu\"\n          aria-label=\"Example icon-button with a menu\"\n        >\n          <mat-icon>more_vert</mat-icon>\n        </button>\n      </div>\n    </div>\n    <mat-menu #menu=\"matMenu\">\n      <button\n        mat-menu-item\n        *ngFor=\"let action of actions\"\n        (click)=\"action.onClick(file)\"\n      >\n        <mat-icon [color]=\"action.color\">{{ action.icon }}</mat-icon>\n        <span>{{ action.label }}</span>\n      </button>\n    </mat-menu>\n  `,\n  styleUrls: ['../shared-utility-styles.scss'],\n  styles: [``]\n})\nexport class CardFileComponent {\n  get isChecked(): boolean {\n    return this.checkedItems.isSelected(this.file.fullPath);\n  }\n  get isSelected(): boolean {\n    return this.selectedItem.isSelected(this.file.fullPath);\n  }\n\n  @Input()\n  file: CoreTypes.ResFile;\n  @Input()\n  actions: FileActionDefinition[];\n  @Input()\n  checkedItems: SelectionModel<string>;\n  @Input()\n  selectedItem: SelectionModel<string>;\n\n  onSelect() {\n    this.selectedItem.select(this.file.fullPath);\n  }\n  onCheck() {\n    this.checkedItems.select(this.file.fullPath);\n  }\n  onUnCheck() {\n    this.checkedItems.deselect(this.file.fullPath);\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { CoreTypes } from '../../../core-types';\nimport { FileActionDefinition } from './FileActionDefinition';\nimport { FileManagerConfig } from '../../configuration/client-configuration';\n\n@Component({\n  selector: 'card-folder',\n  template: `\n    <div\n      class=\"flex-row p5 space-between bg-grey-hover rounded\"\n      matTooltip=\"Click For Details\"\n      [class.bg-grey-light]=\"isChecked\"\n      [class.bg-grey-dark]=\"isSelected\"\n      (click)=\"onSelect()\"\n      (dblclick)=\"onDoubleClick()\"\n    >\n      <div class=\"flex-row align-center\">\n        <div *ngIf=\"checkedItems\">\n          <mat-icon\n            *ngIf=\"!isChecked\"\n            class=\"has-pointer color-white color-grey-hover\"\n            (click)=\"onCheck()\"\n            >check_box_outline_blank</mat-icon\n          >\n          <mat-icon\n            *ngIf=\"isChecked\"\n            class=\"has-pointer color-black color-grey-hover\"\n            (click)=\"onUnCheck()\"\n            >check_box_outline</mat-icon\n          >\n        </div>\n        <img class=\"mr-10\" width=\"30\" [src]=\"folder['icon']\" />\n        <div>\n          <h5 class=\"m0 mb-5 has-ellipsis\">{{ folder.name }}</h5>\n          <small *ngIf=\"config && config.folderSizePath\" class=\"m0 color-grey\">{{ getFolderSize(folder) | fileSize }}</small>\n        </div>\n      </div>\n      <button\n        *ngIf=\"actions\"\n        mat-icon-button\n        [matMenuTriggerFor]=\"menu\"\n        aria-label=\"Example icon-button with a menu\"\n      >\n        <mat-icon>more_vert</mat-icon>\n      </button>\n    </div>\n    <mat-menu #menu=\"matMenu\">\n      <button\n        mat-menu-item\n        *ngFor=\"let action of actions\"\n        (click)=\"action.onClick(folder)\"\n      >\n        <mat-icon [color]=\"action.color\">{{ action.icon }}</mat-icon>\n        <span>{{ action.label }}</span>\n      </button>\n    </mat-menu>\n  `,\n  styleUrls: ['../shared-utility-styles.scss'],\n  styles: [``]\n})\nexport class CardFolderComponent {\n  get isChecked(): boolean {\n    if (!this.checkedItems) {\n      return;\n    }\n    return this.checkedItems.isSelected(this.folder.fullPath);\n  }\n  get isSelected(): boolean {\n    return this.selectedItem.isSelected(this.folder.fullPath);\n  }\n  @Input()\n  folder: CoreTypes.ResFile;\n  @Input()\n  actions: FileActionDefinition[];\n  @Input()\n  checkedItems: SelectionModel<string>;\n  @Input()\n  selectedItem: SelectionModel<string>;\n  @Input()\n  config: FileManagerConfig;\n  @Output()\n  enterFolder = new EventEmitter<string>();\n\n  onSelect() {\n    this.selectedItem.select(this.folder.fullPath);\n  }\n  onCheck() {\n    this.checkedItems.select(this.folder.fullPath);\n  }\n  onUnCheck() {\n    this.checkedItems.deselect(this.folder.fullPath);\n  }\n  onDoubleClick() {\n    console.log('onDoubleClick!');\n    this.enterFolder.emit(this.folder.fullPath);\n  }\n\n  getFolderSize(folder: CoreTypes.ResFile) {\n    if(folder.metaData) {\n      let path = this.config.folderSizePath\n      return path.split('.').reduce(function(p,prop) { return p[prop] }, folder);\n    }\n    return folder.size\n  }\n}\n","import {\n  Component,\n  Input,\n  OnInit,\n  Output,\n  EventEmitter,\n  OnDestroy\n} from '@angular/core';\nimport { CoreTypes } from '../../../core-types';\nimport { Subject, Observable } from 'rxjs';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { takeUntil } from 'rxjs/operators';\nimport { FileActionDefinition } from './FileActionDefinition';\nimport { FileManagerConfig } from '../../configuration/client-configuration';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'app-file-table',\n  template: `\n    <div class=\"files-viewer full-width\">\n      <div *ngIf=\"folders?.length\" class=\"flex-row align-center\">\n        <mat-icon\n          *ngIf=\"!areAllFoldersChecked\"\n          class=\"has-pointer color-white color-grey-hover\"\n          (click)=\"onCheckAllFolders()\"\n          >check_box_outline_blank</mat-icon\n        >\n        <mat-icon\n          *ngIf=\"areAllFoldersChecked\"\n          class=\"has-pointer color-black color-grey-hover\"\n          (click)=\"onUnCheckAllFolders()\"\n          >check_box_outline</mat-icon\n        >\n        <h4 class=\"p5 m0 color-grey\">Folders</h4>\n      </div>\n      <div class=\"flex-col\">\n        <card-folder\n          *ngFor=\"let folder of folders\"\n          [folder]=\"folder\"\n          [config]=\"config\"\n          [checkedItems]=\"checkedItems\"\n          [selectedItem]=\"selectedItem\"\n          [actions]=\"folderActions\"\n          (enterFolder)=\"enterFolder.emit($event)\"\n        >\n        </card-folder>\n      </div>\n      <div *ngIf=\"files?.length\" class=\"flex-row align-center\">\n        <mat-icon\n          *ngIf=\"!areAllFilesChecked\"\n          class=\"has-pointer color-white color-grey-hover\"\n          (click)=\"onCheckAllFiles()\"\n          >check_box_outline_blank</mat-icon\n        >\n        <mat-icon\n          *ngIf=\"areAllFilesChecked\"\n          class=\"has-pointer color-black color-grey-hover\"\n          (click)=\"onUnCheckAllFiles()\"\n          >check_box_outline</mat-icon\n        >\n        <h4 class=\"p5 m0 color-grey\">Files</h4>\n      </div>\n      <div class=\"flex-col\">\n        <card-file\n          *ngFor=\"let file of files\"\n          [file]=\"file\"\n          [checkedItems]=\"checkedItems\"\n          [selectedItem]=\"selectedItem\"\n          [actions]=\"fileActions\"\n        >\n        </card-file>\n      </div>\n      <div class=\"nothing-here\" *ngIf=\"!files?.length && !folders.length\">\n        <p>\n          No folders/files here\n        </p>\n      </div>\n    </div>\n  `,\n  styleUrls: ['../shared-utility-styles.scss'],\n  styles: [\n    `\n      .nothing-here {\n        padding: 20px;\n        padding-bottom: 100px;\n        font-size: 1.2em;\n        color: #777;\n      }\n      .files-viewer {\n        min-height: 500px;\n      }\n    `\n  ]\n})\nexport class AppFileTableComponent implements OnInit, OnDestroy {\n  checkedItems = new SelectionModel<string>(true);\n  selectedItem = new SelectionModel<string>(false);\n\n  clearSelected = new Subject();\n\n  @Input()\n  $triggerClearSelected: Observable<void>;\n  @Input()\n  fileActions: FileActionDefinition[];\n  @Input()\n  folderActions: FileActionDefinition[];\n  @Input()\n  files: CoreTypes.ResFile[];\n  @Input()\n  folders: CoreTypes.ResFile[];\n  @Input()\n  config: FileManagerConfig;\n  @Output()\n  checkedChanged = new EventEmitter<CoreTypes.ResFile[]>();\n  @Output()\n  selectedChanged = new EventEmitter<string>();\n  @Output()\n  enterFolder = new EventEmitter<string>();\n\n  private destroyed = new Subject();\n\n  ngOnInit() {\n    this.$triggerClearSelected\n      .pipe(takeUntil(this.destroyed))\n      .subscribe(() => this.checkedItems.clear());\n    this.checkedItems.changed.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      const folders = this.folders.filter(f =>\n        this.checkedItems.selected.includes(f.fullPath)\n      );\n      const files = this.files.filter(f =>\n        this.checkedItems.selected.includes(f.fullPath)\n      );\n      const checkedFiles = [...folders, ...files];\n      this.checkedChanged.emit(checkedFiles);\n    });\n    this.selectedItem.changed.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      const [selectedFilePath] = this.selectedItem.selected;\n      this.selectedChanged.emit(selectedFilePath);\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroyed.next();\n  }\n\n  get areAllFoldersChecked(): boolean {\n    const currentSelection = this.checkedItems.selected;\n    const hasAllFoldersSelected = this.folders.every(f =>\n      currentSelection.includes(f.fullPath)\n    );\n    return hasAllFoldersSelected;\n  }\n\n  get areAllFilesChecked(): boolean {\n    const currentSelection = this.checkedItems.selected;\n    const hasAllFilesSelected = this.files.every(f =>\n      currentSelection.includes(f.fullPath)\n    );\n    return hasAllFilesSelected;\n  }\n\n  onCheckAllFolders() {\n    this.checkedItems.select(...this.folders.map(f => f.fullPath));\n  }\n  onUnCheckAllFolders() {\n    this.checkedItems.deselect(...this.folders.map(f => f.fullPath));\n  }\n  onCheckAllFiles() {\n    this.checkedItems.select(...this.files.map(f => f.fullPath));\n  }\n  onUnCheckAllFiles() {\n    this.checkedItems.deselect(...this.files.map(f => f.fullPath));\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CardFileComponent } from './card-file.component';\nimport { CardFolderComponent } from './card-folder.component';\nimport { AppFileTableComponent } from './file-table.component';\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { FileSizeModule } from '../file-size/file-size.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FileSizeModule,\n    MatMenuModule,\n    MatIconModule,\n    MatButtonModule,\n    MatTooltipModule\n  ],\n  exports: [AppFileTableComponent, CardFolderComponent],\n  declarations: [CardFileComponent, CardFolderComponent, AppFileTableComponent],\n  providers: []\n})\nexport class AppFileTableModule {}\n","import { NgModule } from '@angular/core';\nimport { AppFileTableMiniFolderBrowserComponent } from './file-table-mini-folder-browser.component';\nimport { AppActionsMiniBrowserComponent } from './actions-mini-browser.component';\nimport { CommonModule } from '@angular/common';\nimport { FileSizeModule } from '../file-size/file-size.module';\n\nimport { AppFileTableModule } from '../file-table/file-table.module';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatToolbarModule } from '@angular/material/toolbar';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FileSizeModule,\n    MatButtonModule,\n    MatIconModule,\n    AppFileTableModule,\n    MatToolbarModule\n  ],\n  exports: [AppFileTableMiniFolderBrowserComponent],\n  declarations: [\n    AppFileTableMiniFolderBrowserComponent,\n    AppActionsMiniBrowserComponent\n  ],\n  providers: []\n})\nexport class FileTableMiniModule {}\n","import {\n  Component,\n  ElementRef,\n  Input,\n  OnInit,\n  ViewChild,\n  OnDestroy,\n} from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\nimport { Observable } from 'rxjs';\nimport { map, startWith, take } from 'rxjs/operators';\n\nimport { v4 as uuidv1 } from 'uuid';\n\nimport {\n  MatAutocomplete,\n  MatAutocompleteSelectedEvent,\n} from '@angular/material/autocomplete';\nimport { MatChipInputEvent } from '@angular/material/chips';\n\nexport interface Tag {\n  id: string;\n  name: string;\n  isDisabled?: boolean;\n}\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'app-control-tag-multiple',\n  template: `\n    <mat-form-field class=\"full-width\" [class.formInvalid]=\"hasRed()\">\n      <mat-chip-list #chipList [disabled]=\"!removableTags\" [multiple]=\"true\">\n        <mat-chip\n          *ngFor=\"let tag of selectInitial\"\n          [selectable]=\"selectable\"\n          [removable]=\"removableTags\"\n          (removed)=\"removeTag(tag)\"\n        >\n          {{ getLowerCase(tag) }}\n          <mat-icon matChipRemove *ngIf=\"removableTags\">cancel</mat-icon>\n        </mat-chip>\n        <input\n          #tagInput\n          [placeholder]=\"placeholder\"\n          [formControl]=\"controlAutocomplete\"\n          [matAutocomplete]=\"auto\"\n          [matChipInputFor]=\"chipList\"\n          [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\"\n          [matChipInputAddOnBlur]=\"addOnBlur\"\n          (matChipInputTokenEnd)=\"add($event)\"\n          [name]=\"autoCompleteObscureName\"\n        />\n      </mat-chip-list>\n      <mat-icon\n        matTooltip=\"Add many tags here, you can manage all your tags using the tag list editor in the settings menu\"\n        class=\"tag-icon\"\n        matSuffix\n        matBadge=\"â\"\n        >local_offer</mat-icon\n      >\n      <mat-autocomplete\n        #auto=\"matAutocomplete\"\n        (optionSelected)=\"selectedTag($event)\"\n      >\n        <mat-option\n          *ngFor=\"let tag of filteredTags | async\"\n          [value]=\"tag\"\n          [disabled]=\"tag['isDisabled']\"\n        >\n          {{ tag.name }}\n        </mat-option>\n      </mat-autocomplete>\n    </mat-form-field>\n  `,\n  styles: [\n    `\n      .full-width {\n        width: 100%;\n      }\n      .tag-icon {\n        color: grey;\n        right: 15px;\n      }\n      .formInvalid {\n        background-color: #ff4f4f30 !important;\n      }\n      .mat-badge-active {\n        font-size: 18px;\n      }\n      mat-icon span {\n        background-color: transparent;\n        right: 1px !important;\n        top: 1px !important;\n        color: white;\n      }\n    `,\n  ],\n})\nexport class AppControlTagMultipleComponent implements OnInit, OnDestroy {\n  // Autocomplete FormGroup\n  controlAutocomplete: FormControl;\n\n  // Tag defaults\n  visible = true;\n  selectable = true;\n  addOnBlur = true;\n  separatorKeysCodes: number[] = [ENTER, COMMA];\n\n  filteredTags: Observable<Tag[]>;\n  @ViewChild('tagInput', { static: false })\n  tagInput: ElementRef<HTMLInputElement>;\n  @ViewChild('auto', { static: false })\n  matAutocomplete: MatAutocomplete;\n  selectInitial: Tag[];\n\n  // Variables Passed into this component\n  @Input() placeholder: string;\n  @Input() displayLowerCase: boolean;\n  @Input() control: FormControl;\n  @Input() removableTags = true;\n  @Input() allowCustom = true;\n  @Input() selectChoices$: Observable<Tag[]> = new Observable();\n\n  autoCompleteObscureName: string; // to prevent autocomplete from realising the field name\n\n  checkExists(val, name) {\n    if (val == null) {\n      throw new Error(name + ' has not been defined');\n    }\n  }\n\n  hasRed() {\n    const isDirty = this.control.dirty;\n    const notValid = this.control.invalid;\n    return isDirty && notValid;\n  }\n\n  ngOnInit() {\n    this.checkExists(this.control, 'this.group');\n    this.checkExists(this.selectChoices$, 'this.selectChoices');\n    this.selectInitial = this.control.value;\n\n    this.autoCompleteObscureName = uuidv1();\n\n    this.selectChoices$ = this.selectChoices$.pipe(take(1));\n    this.controlAutocomplete = new FormControl([], Validators.minLength(1));\n    // When selectChoices resolves (once)\n    this.selectChoices$.subscribe((selectChoicesArr) => {\n      // set the tags filtering pipe\n      this.filteredTags = this.controlAutocomplete.valueChanges.pipe(\n        startWith(null),\n        map((keyboardInput: string) => {\n          console.log({ keyboardInput }, { selectChoicesArr });\n          // Filter based on the input value\n          if (!keyboardInput) {\n            return selectChoicesArr;\n          }\n          return selectChoicesArr.filter((tag) => {\n            if (!tag) {\n              return false;\n            }\n            const val = tag.name + '';\n            if (!val.includes(keyboardInput)) {\n              return false;\n            }\n            return true;\n          });\n        })\n      );\n    });\n\n    // Add the initial values if they're passed in\n    this.controlAutocomplete.setValue(this.selectInitial);\n    this.control.markAsUntouched();\n  }\n\n  ngOnDestroy() {}\n\n  // Allow custom tags, if the selection box is not open\n  add(event: MatChipInputEvent): void {\n    if (!this.allowCustom) {\n      return;\n    }\n    if (!this.matAutocomplete.isOpen) {\n      const input = event.input;\n      const value = event.value;\n\n      // Add our Tag\n      if ((value || '').trim()) {\n        const newTagId = uuidv1();\n        const val = value.trim();\n        const newTag: Tag = {\n          id: newTagId,\n          name: val,\n        };\n        this.control.value.push(newTag);\n      }\n\n      // Reset the input value\n      if (input) {\n        input.value = '';\n      }\n      this.updateFormValue();\n    }\n  }\n\n  removeTag(removeTag: Tag): void {\n    const index = this.control.value.findIndex((t) => t.id === removeTag.id);\n\n    if (index >= 0) {\n      this.control.value.splice(index, 1);\n    }\n    this.updateFormValue();\n  }\n\n  selectedTag(event: MatAutocompleteSelectedEvent): void {\n    console.log(event);\n    const newVal = event.option.value;\n    let canPush = true;\n    this.control.value.forEach((item) => {\n      canPush = item.id !== newVal.id && canPush;\n    });\n    if (canPush) this.control.value.push(newVal);\n    this.tagInput.nativeElement.value = '';\n    this.tagInput.nativeElement.blur();\n    this.updateFormValue();\n  }\n\n  updateFormValue() {\n    this.controlAutocomplete.reset();\n    this.control.setValue(this.control.value); // Required to trigger value changes\n    this.control.markAsDirty();\n  }\n\n  getLowerCase(tag) {\n    if (!tag || !tag.name) {\n      return null;\n    }\n    const val = tag.name + '';\n    return val.toLowerCase();\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { AppControlTagMultipleComponent } from './tags-control.component';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    MatIconModule,\n    MatInputModule,\n    MatFormFieldModule\n  ],\n  exports: [AppControlTagMultipleComponent],\n  declarations: [AppControlTagMultipleComponent],\n  providers: []\n})\nexport class TagsControlModule {}\n","import { NgModule } from '@angular/core';\nimport { BaseDialogComponent } from './base-dialog.component';\nimport { AppDialogRenameComponent } from './dialog-rename.component';\nimport { AppDialogNewFolderComponent } from './dialog-new-folder.component';\nimport { AppDialogPermissionsSetComponent } from './dialog-permissions-set.component';\nimport { AppDialogPermissionsSetObjectComponent } from './dialog-permissions-setobject.component';\nimport { AppDialogCopyComponent } from './dialog-copy-or-move.component';\nimport { AppDialogUploadFilesComponent } from './dialog-upload.component';\nimport { AppDialogMyDetailsComponent } from './dialog-my-details.components';\nimport { CommonModule } from '@angular/common';\n\nimport { AppBtnsCancelOkComponent } from './btns-cancel-ok.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FileTableMiniModule } from '../file-table-mini/file-table-mini.module';\nimport { FormFileFirebaseModule } from '../file-upload/file-upload.module';\nimport { TagsControlModule } from '../tags-control/tags-control.module';\nimport { AppDialogConfirmationComponent } from './dialog-confirmation.component';\n\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCardModule } from '@angular/material/card';\n\nconst entryComponents = [\n  BaseDialogComponent,\n  AppDialogRenameComponent,\n  AppDialogNewFolderComponent,\n  AppDialogPermissionsSetComponent,\n  AppDialogPermissionsSetObjectComponent,\n  AppDialogCopyComponent,\n  AppDialogUploadFilesComponent,\n  AppDialogMyDetailsComponent,\n  AppDialogConfirmationComponent\n];\n\nconst declarations = [...entryComponents, AppBtnsCancelOkComponent];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormFileFirebaseModule,\n    MatChipsModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatButtonModule,\n    MatInputModule,\n    MatIconModule,\n    MatSelectModule,\n    MatCardModule,\n    FileTableMiniModule,\n    TagsControlModule\n  ],\n  exports: [...entryComponents],\n  entryComponents: [...entryComponents],\n  declarations: [...declarations],\n  providers: []\n})\nexport class NgxFilemanagerClientDialogsModule {}\n","import { NgModule } from '@angular/core';\nimport { APP_BASE_HREF, CommonModule, PlatformLocation } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { getBaseHref } from './getBaseHref';\nimport { LibMainFileManagerComponent } from './ui/main-file-manager/main-file-manager.component';\nimport { AppBreadCrumbsComponent } from './ui/bread-crumbs/bread-crumbs.component';\nimport { AppBulkActionsComponent } from './ui/actions-toolbars/bulk-actions.component';\nimport { AppMainActionsComponent } from './ui/actions-toolbars/main-actions.component';\nimport { FileDetailsComponent } from './ui/file-details/file-details.component';\nimport { FormFileFirebaseModule } from './ui/file-upload/file-upload.module';\nimport { FilemanagerStatusService } from './services/state/status.service';\nimport { NotificationService } from './services/pure/notification.service';\nimport { LoggerService } from './services/logging/logger.service';\nimport { ConsoleLoggerService } from './services/logging/console-logger.service';\nimport { ServerFilesystemProviderService } from './services/pure/server-filesystem.service';\nimport { IconUrlResolverService } from './services/pure/icon-url-resolver.service';\nimport { NgxFilemanagerClientDialogsModule } from './ui/dialogs/dialogs.module';\nimport { FileSizeModule } from './ui/file-size/file-size.module';\nimport { AppFileTableModule } from './ui/file-table/file-table.module';\n\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nconst declarations = [\n  LibMainFileManagerComponent,\n  AppBreadCrumbsComponent,\n  AppBulkActionsComponent,\n  AppMainActionsComponent,\n  FileDetailsComponent,\n];\n\n@NgModule({\n  declarations: declarations,\n  imports: [\n    CommonModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FileSizeModule,\n\n    AppFileTableModule,\n    FormFileFirebaseModule,\n    NgxFilemanagerClientDialogsModule,\n\n    MatAutocompleteModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatCardModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatMenuModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatExpansionModule\n  ],\n  exports: [LibMainFileManagerComponent],\n  providers: [\n    ServerFilesystemProviderService,\n    FilemanagerStatusService,\n    NotificationService,\n    {\n      provide: APP_BASE_HREF,\n      useFactory: getBaseHref,\n      deps: [PlatformLocation]\n    },\n    { provide: LoggerService, useClass: ConsoleLoggerService },\n    IconUrlResolverService\n  ]\n})\nexport class NgxFilemanagerClientFirebaseModule { }\n","import path from 'path-browserify';\nimport { CoreTypes, FileSystemProvider } from '../../../core-types';\nimport { ConsoleLoggerService } from '../logging/console-logger.service';\nimport {\n  EnsureTrailingSlash,\n  Add2ToPathDir,\n  Add2ToPath,\n  EnsureNoTrailingSlash\n} from '../../utils/path-helpers';\nimport { stubFiles, MakeDir, MakeFile } from './stub-files';\n\nexport class FileSystemStub implements FileSystemProvider {\n  private fakeDelayMs = 1000;\n  logger = new ConsoleLoggerService();\n\n  files: CoreTypes.ResFile[] = stubFiles;\n\n  public setFakeDelay(newDelay: number) {\n    this.fakeDelayMs = newDelay;\n  }\n\n  private async fakeDelay() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        resolve();\n      }, this.fakeDelayMs);\n    });\n  }\n  private selectMatches(items: string[], isMatch: boolean) {\n    const itemsSet = new Set(items);\n    if (isMatch) {\n      return this.files.filter(f => itemsSet.has(f.fullPath));\n    } else {\n      return this.files.filter(f => !itemsSet.has(f.fullPath));\n    }\n  }\n  private isInDirectory(dirPath, filePath): boolean {\n    try {\n      const relative = path.relative(dirPath, filePath);\n      const isSubdir =\n        relative && !relative.startsWith('..') && !relative.includes('/');\n      return isSubdir;\n    } catch (error) {\n      this.logger.warn('isInDirectory error', { dirPath, filePath, error });\n      return false;\n    }\n  }\n\n  async List(inputPath: string): Promise<CoreTypes.ResBodyList> {\n    await this.fakeDelay();\n    const folderPath = this.ensurePrefixSlash(\n      this.ensureTrailingSlash(inputPath)\n    );\n    const matches = this.files.filter(k =>\n      this.isInDirectory(folderPath, k.fullPath)\n    );\n    this.logger.info('List', { folderPath, files: this.files, matches });\n    return {\n      result: matches\n    };\n  }\n  async Rename(\n    item: string,\n    newItemPath: string\n  ): Promise<CoreTypes.ResBodyRename> {\n    await this.fakeDelay();\n    const baseName = path.basename(newItemPath);\n    this.selectMatches([item], true).map(match => {\n      match.name = baseName;\n      match.fullPath = newItemPath;\n    });\n    return null;\n  }\n  async Move(item: string, newPath: string): Promise<CoreTypes.ResBodyMove> {\n    await this.fakeDelay();\n    this.selectMatches([item], true).map(match => {\n      match.fullPath = newPath;\n    });\n    return null;\n  }\n  async Copy(\n    singleFileName: string,\n    newPath: string\n  ): Promise<CoreTypes.ResBodyCopy> {\n    await this.fakeDelay();\n    this.selectMatches([singleFileName], true).map(match => {\n      const copy = { ...match };\n      copy.fullPath = newPath;\n      this.files.push(copy);\n    });\n    return null;\n  }\n  async Edit(item: string, content: string): Promise<CoreTypes.ResBodyEdit> {\n    await this.fakeDelay();\n    this.selectMatches([item], true).map(match => {\n      match['content'] = content;\n    });\n    return null;\n  }\n  async Getcontent(item: string): Promise<CoreTypes.ResBodyGetContent> {\n    await this.fakeDelay();\n    const matches = this.selectMatches([item], true);\n    return [...matches].pop()['content'];\n  }\n  async GetSingle(item: string): Promise<CoreTypes.ResBodyGetSingle> {\n    await this.fakeDelay();\n    const matches = this.selectMatches([item], true);\n    const file = [...matches].pop();\n    return {\n      result: {\n        file,\n        url: file.downloadUrl,\n        success: true\n      }\n    };\n  }\n  async CreateFolder(newPath: string, disableNoClobber?: boolean): Promise<CoreTypes.ResBodyCreateFolder> {\n    await this.fakeDelay();\n    if (disableNoClobber ) {\n      const directoryPath = EnsureTrailingSlash(newPath);\n      this.files.push(MakeDir(directoryPath));\n    } else {\n      this.recursivelyTryToCreateFolder(newPath);\n    }\n    return null;\n  }\n  private recursivelyTryToCreateFolder(newPath: string) {\n    const directoryPath = EnsureTrailingSlash(newPath);\n    const exists = !!this.selectMatches([directoryPath], true).length;\n    if (!exists) {\n      this.files.push(MakeDir(directoryPath));\n      return;\n    }\n    const newPathWith2 = Add2ToPathDir(directoryPath);\n    return this.recursivelyTryToCreateFolder(newPathWith2);\n  }\n  async SetPermissions(\n    item: string,\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ): Promise<CoreTypes.ResBodySetPermissions> {\n    return this.SetPermissionsMultiple([item], role, entity, recursive);\n  }\n  async CopyMultiple(\n    items: string[],\n    newPath: string\n  ): Promise<CoreTypes.ResBodyCopy> {\n    await this.fakeDelay();\n    this.selectMatches(items, true).map(f => {\n      const copy = { ...f };\n      copy.fullPath = path.join(newPath, f.name);\n      this.files.push(copy);\n    });\n    return null;\n  }\n  async MoveMultiple(\n    items: string[],\n    newPath: string\n  ): Promise<CoreTypes.ResBodyMove> {\n    await this.fakeDelay();\n    this.selectMatches(items, true).map(f => {\n      f.fullPath = path.join(newPath, f.name);\n    });\n    return null;\n  }\n  async SetPermissionsMultiple(\n    items: string[],\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ): Promise<CoreTypes.ResBodySetPermissions> {\n    await this.fakeDelay();\n    this.logger.info('file-system-stub: SetPermissionsMultiple', {\n      items,\n      files: this.files\n    });\n    return this.recursivelySetPermissions(items, role, entity, recursive);\n  }\n  async Upload(item: string): Promise<boolean> {\n    await this.fakeDelay();\n    this.recursivelyTryToAddFile(item);\n    return null;\n  }\n  private recursivelyTryToAddFile(filePath: string) {\n    const parsedFilePath = EnsureNoTrailingSlash(filePath);\n    const exists = !!this.selectMatches([parsedFilePath], true).length;\n    if (!exists) {\n      this.files.push(MakeFile(parsedFilePath));\n      return;\n    }\n    const newPathWith2 = Add2ToPath(parsedFilePath);\n    return this.recursivelyTryToAddFile(newPathWith2);\n  }\n  recursivelySetPermissions(\n    items: string[],\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity,\n    recursive?: boolean\n  ) {\n    const matches = this.selectMatches(items, true);\n    matches.map(item => {\n      this.setSinglePermission(item, role, entity);\n      const isFolder = item.type === 'dir';\n      if (recursive && isFolder) {\n        this.recursivelySetPermissions(\n          [item.fullPath],\n          role,\n          entity,\n          recursive\n        );\n      }\n    });\n    return null;\n  }\n  private setSinglePermission(\n    item: CoreTypes.ResFile,\n    role: CoreTypes.PermissionsRole,\n    entity: CoreTypes.FilePermissionEntity\n  ) {\n    let list: string[];\n    if (role === 'READER') {\n      list = item.permissions.readers;\n    }\n    if (role === 'WRITER') {\n      list = item.permissions.writers;\n    }\n    const inListAlready = list.includes(entity);\n    if (!inListAlready) {\n      list.push(entity);\n    }\n  }\n  async SetPermissionsObjectMultiple(\n    items: string[],\n    permissionsObj: CoreTypes.FilePermissionsObject,\n    recursive?: boolean\n  ): Promise<CoreTypes.ResBodySetPermissions> {\n    await this.fakeDelay();\n    const matches = this.selectMatches(items, true);\n    this.logger.info('file-system-stub: SetPermissionsMultiple', {\n      items,\n      matches,\n      permissionsObj\n    });\n    this.recursivelySetPermissionsObjects(items, permissionsObj, recursive);\n    return null;\n  }\n  recursivelySetPermissionsObjects(\n    items: string[],\n    permissionsObj: CoreTypes.FilePermissionsObject,\n    recursive?: boolean\n  ) {\n    const matches = this.selectMatches(items, true);\n    matches.map(item => {\n      item.permissions = permissionsObj;\n      const isFolder = item.type === 'dir';\n      if (recursive && isFolder) {\n        this.recursivelySetPermissionsObjects(\n          [item.fullPath],\n          permissionsObj,\n          recursive\n        );\n      }\n    });\n    return null;\n  }\n\n  async Remove(items: string[]): Promise<CoreTypes.ResBodyRemove> {\n    await this.fakeDelay();\n    const itemsSet = new Set(items);\n    const itemsNotDeleted = this.files.filter(f => !itemsSet.has(f.fullPath));\n    this.files = itemsNotDeleted;\n    return null;\n  }\n\n  CloneProvider(): FileSystemProvider {\n    return new FileSystemStub();\n  }\n\n  private ensureTrailingSlash(inputPath: string) {\n    const hasTrailing = inputPath.slice(-1) === '/';\n    if (hasTrailing) {\n      return inputPath;\n    }\n    return inputPath + '/';\n  }\n  private ensurePrefixSlash(inputPath: string) {\n    const hasPrefix = inputPath.slice(0, 1) === '/';\n    if (hasPrefix) {\n      return inputPath;\n    }\n    return '/' + inputPath;\n  }\n\n  GetUploadApiUrl(currentPath: string): string {\n    return 'https://httpbin.org/post';\n  }\n\n  async CreateDownloadLink(file: CoreTypes.ResFile): Promise<string> {\n    return 'https://upload.wikimedia.org/wikipedia/commons/8/85/Exponential_Function_%28Abs_Imag_Part_at_Infinity%29_Density.png';\n  }\n}\n"],"names":["path","uuidv4","path.dirname","path.basename","dirname","FileIcons","fileIcons","getFileIconName","getFileExtension","isFileImage","getFileName","firebase.default","uuidv1","declarations"],"mappings":"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"}